{"version":3,"sources":["helpers.js","store/selectors.js","store/actions.js","components/TopNav.js","store/interactions.js","components/SideNav.js","components/Spinner.js","components/orders/DepthChart.js","components/orders/MarketOrders.js","components/orders/NewBuyOrder.js","components/orders/NewSellOrder.js","components/orders/MyOrders.js","components/Orders.js","components/trades/PriceChart.config.js","components/trades/PriceChart.js","components/trades/MyTrades.js","components/trades/MarketTrades.js","components/Trades.js","components/funds/ETHFunds.js","components/funds/TokenFunds.js","components/Funds.js","components/Content.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","GREEN","RED","weiToEther","wei","weiToTokens","tokenDecimals","etherToWei","e","toString","tokensToWei","t","formatEtherBalance","balance","Math","round","formatTokenBalance","decimals","sideNavShowSelector","createSelector","state","get","s","account","accountSelector","a","web3Selector","w","exchangeLoaded","exchangeSelector","el","tokenListSelector","token","tokenSelector","tokenLoadingSelector","contractsLoadedSelector","balancesLoadingSelector","l","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","o","sellOrderSelector","cancelledOrdersLoaded","cancelledOrders","col","filledOrdersLoaded","orders","console","log","filledOrdersLoadedSelector","fol","filledOrders","filledOrdersSelector","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","allOrders","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","allOrdersLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","depthChartSelector","decorateWithVolume","concat","value","type","prevPrice","res","i","length","volume","totalvolume","dp","push","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","loaded","priceChartSelector","secondLastOrder","lastOrder","slice","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","close","low","minBy","high","maxBy","x","Date","y","orderCancellingSelector","c","f","web3AccountLoaded","tokenAdded","tokenSelected","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","TopNav","props","toggleSidenav","bind","dispatch","this","className","to","href","onClick","OverlayTrigger","key","placement","overlay","Tooltip","role","data-toggle","aria-haspopup","aria-expanded","width","height","src","Identicon","alt","Component","connect","web3","exchange","tokenList","loadWeb3","Web3","window","givenProvider","connection","loadAccount","eth","getAccounts","accounts","loadExchange","networkId","Contract","Exchange","abi","networks","address","contract","subscribeToExchangeEvents","loadAllTokens","getPastEvents","fromBlock","event","returnValues","events","TokenAdded","error","subscribeToTokenEvents","tokenAddress","Cancel","tokenGet","Trade","Deposit","loadBalances","Withdraw","Order","loadAllOrders","cancelStream","tradeStream","orderStream","addToken","tokens","findIndex","Error","Token","tokenContract","checkContractFunction","methods","call","name","symbol","options","send","from","on","hash","functionSignature","undefined","selectToken","index","getBalance","etherBalance","balanceOf","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","SideNav","handleOnSelect","row","isSelect","component","SearchBar","Search","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","keyField","columns","dataField","text","search","searchProps","placeholder","baseProps","classes","hover","condensed","showTokens","Form","noValidate","onSubmit","preventDefault","tokenAddressInput","document","getElementById","Row","Group","as","Col","Control","autoFocus","controlId","Button","variant","am4core","am4themes_animated","DepthChart","chart","showChart","buildChart","dispose","oldProps","JSON","stringify","style","Spinner","am4charts","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","title","labels","template","fill","yAxis","yAxes","bidValueSeries","categoryX","valueY","strokeWidth","stroke","fillOpacity","tooltipText","askValueSeries","bidVolumeSeries","askVolumeSeries","cursor","depthChart","MarketOrders","loadBlockchainData","buys","orderBook","ownOrder","fillOrder","alert","renderOrder","showOrders","NewBuyOrder","showForm","buyOrder","showBuyTotal","amount","price","makeOrder","makeBuyOrder","onChange","target","required","making","NewSellOrder","sellOrder","showSellTotal","makeSellOrder","MyOrders","myOpenOrdersLoaded","myOpenOrders","cellSpacing","cancelOrder","showMyOpenOrders","orderCancelling","Orders","Container","sm","chartOptions","animations","enabled","toolbar","show","tooltip","theme","fontSize","fontFamily","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","PriceChart","priceChartLoaded","showPriceChart","priceChart","priceSymbol","priceChange","tokenLoading","MyTrades","myFilledOrdersLoaded","myFilledOrders","showMyFilledOrders","MarketTrades","contractsLoaded","Trades","ETHFunds","etherDepositAmount","etherWithdrawAmount","depositEther","withdrawEther","balancesLoading","tokenDepositAmount","tokenWithdrawAmount","approve","depositToken","withdrawToken","Funds","TokenFunds","Content","Tabs","defaultActiveKey","Tab","eventKey","App","ethereum","enable","location","reload","net","getNetworkType","network","getId","sideNavShow","rootReducer","combineReducers","app","action","orderFilling","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","Boolean","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2b9a5153.chunk.js","sourcesContent":["export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const DECIMALS = 18\n\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const weiToEther = (wei) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** DECIMALS))\n\t}\n}\n\nexport const weiToTokens = (wei, tokenDecimals) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** tokenDecimals))\n\t}\n}\n\nexport const etherToWei = (e) => {\n\tif (e) {\n\t\treturn (e * (10 ** DECIMALS)).toString()\n\t}\n}\n\nexport const tokensToWei = (t, tokenDecimals) => {\n\tif (t) {\n\t\treturn (t * (10 ** tokenDecimals)).toString()\n\t}\n}\n\nexport const formatEtherBalance = (balance) => {\n\tconst precision = 100\n\tbalance = weiToEther(balance)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}\n\nexport const formatTokenBalance = (balance, decimals) => {\n\tconst precision = 100\n\tbalance = weiToTokens(balance, decimals)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}","import { get, reject, groupBy, minBy, maxBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, formatEtherBalance, formatTokenBalance, weiToEther, weiToTokens } from '../helpers'\n\nconst sideNavShow = (state) => get(state, 'app.sideNavShow', true)\nexport const sideNavShowSelector = createSelector(sideNavShow, s => s)\n\nconst account = (state) => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nconst tokenList = state => get(state, 'exchange.tokens.data', [])\nexport const tokenListSelector = createSelector(tokenList, t => t)\n\nconst token = state => get(state, 'exchange.token', null)\nexport const tokenSelector = createSelector(token, t => t)\n\nconst tokenLoading = state => get(state, 'exchange.tokenLoading', true)\nexport const tokenLoadingSelector = createSelector(tokenLoading, t => t)\n\nexport const contractsLoadedSelector = createSelector(\n\texchangeLoaded,\n\ttoken,\n\t(el, t) => (el && t !== null)\n)\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, l => l)\n\nconst etherBalance = state => get(state, 'web3.balance')\nexport const etherBalanceSelector = createSelector(\n\tetherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst tokenBalance = state => get(state, 'exchange.tokenBalance')\nexport const tokenBalanceSelector = createSelector(\n\ttokenBalance, \n\ttoken,\n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst exchangeEtherBalance = state => get(state, 'exchange.exchangeEtherBalance')\nexport const exchangeEtherBalanceSelector = createSelector(\n\texchangeEtherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst exchangeTokenBalance = state => get(state, 'exchange.exchangeTokenBalance')\nexport const exchangeTokenBalanceSelector = createSelector(\n\texchangeTokenBalance,\n\ttoken, \n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, a => a)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, a => a)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, a => a)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, a => a)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, o => o)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, o => o)\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(\n\tcancelledOrders,\n\t(orders) => {\n\t\tconsole.log(orders)\n\t}\n)\n\n// Filled orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\t// sort ascending for price comparison\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = decorateFilledOrders(orders, token)\n\n\t\t// sort descending for display\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateFilledOrders = (orders, token) => {\n\tlet previousOrder = orders[0]\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateFilledOrder(order, previousOrder)\n\t\tpreviousOrder = order\n\t\treturn order\n\t})\n}\n\nconst decorateOrder = (order, token) => {\n\n\tlet etherAmount\n\tlet tokenAmount\n\n\tif (order.tokenGive === ETHER_ADDRESS) {\n\t\tetherAmount = order.amountGive\n\t\ttokenAmount = order.amountGet\n\t} else {\n\t\tetherAmount = order.amountGet\n\t\ttokenAmount = order.amountGive\n\t}\n\n\tetherAmount = weiToEther(etherAmount)\n\ttokenAmount = weiToTokens(tokenAmount, token ? token.decimals : 18)\n\n\tconst precision = 100000\n\tlet tokenPrice = (etherAmount / tokenAmount)\n\ttokenPrice = Math.round(tokenPrice * precision) / precision\n\n\treturn ({\n\t\t...order,\n\t\tetherAmount: etherAmount,\n\t\ttokenAmount: tokenAmount,\n\t\ttokenPrice,\n\t\tformattedTimestamp: moment.unix(order.timestamp).format('hh:mm:ss D/M/Y')\n\t})\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n\treturn ({\n\t\t...order,\n\t\ttokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n\t})\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n\t// show green if order price higher than previous\n\t// or if its the first order\n\tif (orderId === previousOrder.id) {\n\t\treturn GREEN\n\t}\n\tif (previousOrder.tokenPrice <= tokenPrice) {\n\t\treturn GREEN\n\t} else {\n\t\treturn RED\n\t}\n}\n\n// All orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\n\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\nconst openOrders = state => {\n\tconst all = allOrders(state)\n\tconst filled = filledOrders(state)\n\tconst cancelled = cancelledOrders(state)\n\n\tconst openOrders = reject(all, (order) => {\n\t\tconst orderFilled = filled.some((o) => o.id === order.id)\n\t\tconst orderCancelled = cancelled.some((o) => o.id === order.id)\n\t\treturn (orderFilled || orderCancelled)\n\t})\n\treturn openOrders\n}\n\nconst orderBookLoaded = state => allOrdersLoaded(state) && filledOrdersLoaded(state) && cancelledOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const orderBookSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// sort each group\n\t\tconst buyOrders = get(orders, 'buy', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tbuyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n\t\t}\n\n\t\tconst sellOrders = get(orders, 'sell', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tsellOrders: sellOrders.sort((a,b) => a.tokenPrice - b.tokenPrice)\n\t\t}\n\t\treturn orders\n\t}\n)\n\nconst decorateOrderBookOrders = (orders, token) => {\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateOrderBookOrder(order)\n\t\treturn order\n\t})\n}\n\nconst decorateOrderBookOrder = (order) => {\n\tconst orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\treturn ({\n\t\t...order,\n\t\torderType,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderFillAction: (orderType === 'buy' ? 'sell to' : 'buy from')\n\t})\n}\n\nexport const depthChartSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// buys are sorted descending\n\t\tconst buyOrders = decorateWithVolume('bid', get(orders, 'buy', []).sort((a,b) => b.tokenPrice - a.tokenPrice))\n\t\t// sells are sorted ascending\n\t\tconst sellOrders = decorateWithVolume('ask', get(orders, 'sell', []).sort((a,b) => a.tokenPrice - b.tokenPrice))\n\n\t\torders = {\n\t\t\torders: buyOrders\n\t\t\t\t.concat(sellOrders)\n\t\t\t\t.sort((a,b) =>  a.value - b.value)\n\t\t}\n\n\t\treturn orders\n\t}\n)\n\nconst decorateWithVolume = (type, orders) => {\n\tlet res = []\n\tlet prevPrice\n\n\tfor(var i = 0; i < orders.length; i++) {\n\t\torders[i].volume = orders[i].tokenAmount;\n        \n        if (i === 0) {\n        \torders[i].totalvolume = orders[i].tokenAmount;\n        }\n        else {\n        \tif (prevPrice === orders[i].tokenPrice) {\n        \t\torders[i].volume = orders[i-1].volume + orders[i].tokenAmount\n        \t}\n          \torders[i].totalvolume = orders[i-1].totalvolume + orders[i].tokenAmount;\n        }\n\n        // aggregate orders with the same price\n        if (prevPrice !== orders[i].tokenPrice) {\n        \tlet dp = {};\n\t        dp[\"value\"] = orders[i].tokenPrice;\n\t        dp[type + \"volume\"] = orders[i].volume;\n\t        dp[type + \"totalvolume\"] = orders[i].totalvolume;\n\n        \tres.push(dp);\n    \t} else {\n    \t\tres[res.length - 1][type + \"volume\"] = orders[i].volume;\n    \t\tres[res.length - 1][type + \"totalvolume\"] = orders[i].totalvolume;\n    \t}\n\n        prevPrice = orders[i].tokenPrice\n     }\n\n     return res\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nexport const myFilledOrdersSelector = createSelector(\n\taccount,\n\tfilledOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account || o.userFill === account)\n\t\torders = decorateMyFilledOrders(orders, account, token)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyFilledOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyFilledOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n\tconst myOrder = order.user === account\n\n\tlet orderType\n\tif (myOrder) {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\t} else {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n\t}\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderSign: (orderType === 'buy' ? '+' : '-')\n\t})\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const myOpenOrdersSelector = createSelector(\n\taccount,\n\topenOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account)\n\t\torders = decorateMyOpenOrders(orders, account, token)\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyOpenOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyOpenOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n\tlet orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED)\n\t})\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = orders.map((o) => decorateOrder(o, token))\n\n\t\t// get last two orders for final price\n\t\tlet secondLastOrder, lastOrder\n\t\t[secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n\t\tconst lastPrice = get(lastOrder, 'tokenPrice', 0)\n\t\tconst secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\t\treturn ({\n\t\t\tlastPrice,\n\t\t\tlastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n\t\t\tseries: [{\n\t\t\t\tdata: buildGraphData(orders)\n\t\t\t}]\n\t\t})\n\t}\n)\n\nexport const buildGraphData = (orders) => {\n\n\t// group by hour\n\torders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n\n\t// get each hour with data\n\tconst hours = Object.keys(orders)\n\n\tconst graphData = hours.map((hour) => {\n\t\t// calculate open, high, low, close for the hour\n\t\tconst group = orders[hour]\n\t\tconst open = group[0]\n\t\tconst close = group[group.length - 1]\n\t\tconst low = minBy(group, 'tokenPrice')\n\t\tconst high = maxBy(group, 'tokenPrice')\n\n\t\treturn ({\n\t\t\tx: new Date(hour),\n\t\t\ty: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n\t\t})\n\t})\n\n\treturn graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, c => c)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, f => f)\n","export function web3Loaded(connection) {\n\treturn {\n\t\ttype: 'WEB3_LOADED',\n\t\tconnection\n\t}\n}\n\nexport function web3AccountLoaded(account) {\n\treturn {\n\t\ttype: 'WEB3_ACCOUNT_LOADED',\n\t\taccount\n\t}\n}\n\nexport function exchangeLoaded(contract) {\n\treturn {\n\t\ttype: 'EXCHANGE_LOADED',\n\t\tcontract\n\t}\n}\n\nexport function tokenAdded(token) {\n\tconsole.log(\"TOKEN_ADDED\", token)\n\treturn {\n\t\ttype: 'TOKEN_ADDED',\n\t\ttoken\n\t}\n}\n\nexport function selectingToken() {\n\treturn {\n\t\ttype: 'SELECTING_TOKEN'\n\t}\n}\n\nexport function tokenSelected(token) {\n\treturn {\n\t\ttype: 'TOKEN_SELECTED',\n\t\ttoken\n\t}\n}\n\nexport function etherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function tokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function balancesLoading() {\n\treturn {\n\t\ttype: 'BALANCES_LOADING'\n\t}\n}\n\nexport function balancesLoaded() {\n\treturn {\n\t\ttype: 'BALANCES_LOADED'\n\t}\n}\n\nexport function etherDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'BUY_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'BUY_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function buyOrderMaking() {\n\treturn {\n\t\ttype: 'BUY_ORDER_MAKING'\n\t}\n}\n\nexport function sellOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'SELL_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function sellOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'SELL_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function sellOrderMaking() {\n\treturn {\n\t\ttype: 'SELL_ORDER_MAKING'\n\t}\n}\n\nexport function orderMade(order) {\n\treturn {\n\t\ttype: 'ORDER_MADE',\n\t\torder\n\t}\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n\treturn {\n\t\ttype: 'CANCELLED_ORDERS_LOADED',\n\t\tcancelledOrders\n\t}\n}\n\n\nexport function filledOrdersLoaded(filledOrders) {\n\treturn {\n\t\ttype: 'FILLED_ORDERS_LOADED',\n\t\tfilledOrders\n\t}\n}\n\n\nexport function allOrdersLoaded(allOrders) {\n\treturn {\n\t\ttype: 'ALL_ORDERS_LOADED',\n\t\tallOrders\n\t}\n}\n\nexport function orderCancelling() {\n\treturn {\n\t\ttype: 'ORDER_CANCELLING'\n\t}\n}\n\nexport function orderCancelled(order) {\n\treturn {\n\t\ttype: 'ORDER_CANCELLED',\n\t\torder\n\t}\n}\n\nexport function orderFilling() {\n\treturn {\n\t\ttype: 'ORDER_FILLING'\n\t}\n}\n\nexport function orderFilled(order) {\n\treturn {\n\t\ttype: 'ORDER_FILLED',\n\t\torder\n\t}\n}\n\nexport function sideNavShowHideToggled() {\n\treturn {\n\t\ttype: 'SIDE_NAV_SHOW_HIDE_TOGGLED'\n\t}\n}","import React, { Component } from 'react'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport Identicon from 'identicon.js'\n\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\nimport {\n  sideNavShowHideToggled\n} from '../store/actions'\n\nclass TopNav extends Component {\n\n  constructor(props) {    \n    super(props)\n    this.toggleSidenav = this.toggleSidenav.bind(this)\n  }\n\n  toggleSidenav() {\n    const {\n      dispatch\n    } = this.props\n    dispatch(sideNavShowHideToggled())\n  }\n\n  render() {\n    const {\n      account\n    } = this.props\n\n    return (\n      <div>\n        <nav className=\"sb-topnav navbar navbar-expand navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to='/'>Kouga</Link>\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\" \n              onClick={\n                this.toggleSidenav\n              }>\n              <i className=\"fas fa-bars\"></i>\n            </button>\n\n            <div className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n            </div>\n\n            <div className=\"navbar-nav ml-auto ml-md-0\">\n                    { account\n                      ? <OverlayTrigger\n                          key={account}\n                          placement='auto'\n                          overlay={\n                            <Tooltip id={account}>\n                              {`${account}`}\n                            </Tooltip>\n                          }\n                        >\n                          <a className=\"nav-link\" href=\"/#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <img\n                              className=\"ml-2\"\n                              width='30'\n                              height='30'\n                              src={`data:image/png;base64,${new Identicon(account, 30).toString()}`}\n                              alt=\"\"\n                            />\n                          </a>\n                        </OverlayTrigger>\n                        \n                      : <span></span>\n                    }\n                    \n            </div>\n        </nav>\n      </div>\n      \n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(TopNav)\n","import Web3 from 'web3'\nimport Exchange from '../contracts/abis/Exchange.json'\nimport Token from '../contracts/abis/Token18.json'\nimport { \n\tweb3Loaded,\n\tweb3AccountLoaded,\n\texchangeLoaded,\n\ttokenAdded,\n\tselectingToken,\n\ttokenSelected,\n\tetherBalanceLoaded,\n\ttokenBalanceLoaded,\n\texchangeEtherBalanceLoaded,\n\texchangeTokenBalanceLoaded,\n\tbalancesLoading,\n\tbalancesLoaded,\n\tbuyOrderMaking,\n\tsellOrderMaking,\n\torderMade,\n\tcancelledOrdersLoaded,\n\tfilledOrdersLoaded,\n\tallOrdersLoaded,\n\torderCancelling,\n\torderCancelled,\n\torderFilling,\n\torderFilled\n} from './actions.js'\nimport { ETHER_ADDRESS, tokensToWei, etherToWei } from '../helpers'\n\nexport const loadWeb3 = (dispatch) => {\n\tconst web3 = new Web3(window['ethereum'] || Web3.givenProvider || 'http://127.0.0.1:7545');\n\tdispatch(web3Loaded(web3))\n\treturn web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n\tconst accounts = await web3.eth.getAccounts()\n\tconst account = accounts[0]\n\tdispatch(web3AccountLoaded(account))\n\treturn account\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n\ttry {\n\t\tconst exchange = await new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address)\n\t\tdispatch(exchangeLoaded(exchange))\n\t\tsubscribeToExchangeEvents(exchange, dispatch)\n\n\t\tawait loadAllTokens(exchange, dispatch)\n\t\treturn exchange\n\t} catch (error) {\n\t\tconsole.log('Contract not deployed to the current network', error)\n\t\treturn null\n\t}\n}\n\nexport const loadAllTokens = async (exchange, dispatch) => {\n\ttry {\n\t\tconst tokenStream = await exchange.getPastEvents('TokenAdded', {fromBlock: 0})\n\t\ttokenStream.map((event) => dispatch(tokenAdded(event.returnValues)))\n\t} catch (error) {\n\t\tconsole.log('Could not get token stream')\n\t\treturn null\n\t}\n}\n\nexport const subscribeToExchangeEvents = async (exchange, dispatch) => {\n\texchange.events.TokenAdded({}, (error, event) => {\n\t\tdispatch(tokenAdded(event.returnValues))\n\t})\n}\n\nexport const subscribeToTokenEvents = async (token, tokenAddress, account, exchange, web3, dispatch) => {\n\texchange.events.Cancel({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderCancelled(event.returnValues))\n\t})\n\texchange.events.Trade({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderFilled(event.returnValues))\n\t})\n\texchange.events.Deposit({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Withdraw({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Order({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderMade(event.returnValues))\n\t})\n}\n\nexport const loadAllOrders = async (tokenAddress, exchange, dispatch) => {\n\ttry {\n\t\tconst cancelStream = await exchange.getPastEvents(\n\t\t\t'Cancel', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst cancelledOrders = cancelStream.map((event) => event.returnValues)\n\t\tdispatch(cancelledOrdersLoaded(cancelledOrders))\n\n\t\tconst tradeStream = await exchange.getPastEvents(\n\t\t\t'Trade', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst filledOrders = tradeStream.map((event) => event.returnValues)\n\t\tdispatch(filledOrdersLoaded(filledOrders))\n\n\t\tconst orderStream = await exchange.getPastEvents(\n\t\t\t'Order', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst allOrders = orderStream.map((event) => event.returnValues)\n\t\tdispatch(allOrdersLoaded(allOrders))\n\t} catch (error) {\n\t\tconsole.log('Could not get order streams')\n\t\treturn null\n\t}\n}\n\nexport const addToken = async (tokenAddress, tokens, web3, account, exchange, dispatch) => {\n\ttry {\n\t\t// check if not already present\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tif (index !== -1) {\n\t\t\tthrow new Error(\"allready present\")\n\t\t}\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress)\n\n\t\t// check if really ERC20\n\t\tcheckContractFunction(tokenContract, 'name()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'symbol()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'decimals()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'totalSupply()')\n\t\tcheckContractFunction(tokenContract, 'balanceOf(address)')\n\t\tcheckContractFunction(tokenContract, 'transfer(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'transferFrom(address,address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'approve(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'allowance(address,address)')\n\n\t\tconst decimals = await tokenContract.methods.decimals().call()\n\t\tconst name = await tokenContract.methods.name().call()\n\t\tconst symbol = await tokenContract.methods.symbol().call()\n\n\t\tconsole.log(\"addToken\", tokenAddress, tokenContract.options.address)\n\n\t\texchange.methods.addToken(tokenAddress, name, symbol, decimals).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tconsole.log('addded token with hash', hash)\n\t\t})\n\t\t.on('error', (error) => {\n\t\t\tconsole.log('Could not add token', error)\n\t\t})\n\t} catch (error) {\n\t\tconsole.log('Could not add new token:', error)\n\t}\n}\n\nconst checkContractFunction = (contract, functionSignature) => {\n\tif (contract.methods[functionSignature] === undefined) {\n\t\tthrow new Error(\"Not an ERC20 token: \" + functionSignature)\n\t}\n}\n\nexport const selectToken = async (tokenAddress, tokens, account, exchange, web3, dispatch) => {\n\ttry {\n\t\tdispatch(selectingToken())\n\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tlet token = tokens[index]\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, token.tokenAddress)\n\t\ttoken.contract = tokenContract\n\n\t\tawait loadBalances(account, exchange, token, web3, dispatch)\n\t\tawait loadAllOrders(tokenAddress, exchange, dispatch)\n\t\tsubscribeToTokenEvents(token, tokenAddress, account, exchange, web3, dispatch)\n\n\t\tdispatch(tokenSelected(token))\n\t} catch (error) {\n\t\tconsole.log('Could not add new token', error)\n\t}\n}\n\nexport const loadBalances = async (account, exchange, token, web3, dispatch) => {\n\tdispatch(balancesLoading())\n\n\tconst etherBalance = await web3.eth.getBalance(account)\n\tdispatch(etherBalanceLoaded(etherBalance))\n\n\tconst tokenBalance = await token.contract.methods.balanceOf(account).call()\n\tdispatch(tokenBalanceLoaded(tokenBalance))\n\n\tconst exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n\tdispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n\tconst exchangeTokenBalance = await exchange.methods.balanceOf(token.contract.options.address, account).call()\n\tdispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n\tdispatch(balancesLoaded())\n}\n\nexport const depositEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.depositEther().send({from: account, value: etherToWei(amount)})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not deposit ether', error)\n\t\twindow.alert('Could not deposit ether')\n\t})\n}\n\nexport const withdrawEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.withdrawEther(etherToWei(amount)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw ether', error)\n\t\twindow.alert('Could not withdraw ether')\n\t})\n}\n\nexport const depositToken = (amount, account, web3, token, exchange, dispatch) => {\n\tamount = tokensToWei(amount, token.decimals)\n\n\ttoken.contract.methods.approve(exchange.options.address, amount).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\texchange.methods.depositToken(token.contract.options.address, amount).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tdispatch(balancesLoading())\n\t\t})\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not approve token deposit', error)\n\t\twindow.alert('Could not approve token deposit')\n\t})\n}\n\nexport const withdrawToken = (amount, account, web3, token, exchange, dispatch) => {\n\texchange.methods.withdrawToken(token.contract.options.address, tokensToWei(amount, token.decimals)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw token', error)\n\t\twindow.alert('Could not withdraw token')\n\t})\n}\n\nexport const makeBuyOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = token.contract.options.address\n\tconst amountGet = tokensToWei(order.amount, token.decimals)\n\tconst tokenGive = ETHER_ADDRESS\n\tconst amountGive = etherToWei((order.amount * order.price).toString())\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(buyOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make buy order', error)\n\t\twindow.alert('Could not make buy order')\n\t})\n}\n\nexport const makeSellOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = ETHER_ADDRESS\n\tconst amountGet = etherToWei((order.amount * order.price).toString())\n\tconst tokenGive = token.contract.options.address\n\tconst amountGive = tokensToWei(order.amount, token.decimals)\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(sellOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make sell order', error)\n\t\twindow.alert('Could not make sell order')\n\t})\n}\n\nexport const cancelOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.cancelOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderCancelling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not cancel order', error)\n\t\twindow.alert('Could not cancel order')\n\t})\n}\n\nexport const fillOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.fillOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderFilling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not fill order', error)\n\t\twindow.alert('Could not fill order')\n\t})\n}","import React, { Component } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { \n  addToken,\n  selectToken\n} from '../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\n\nclass SideNav extends Component {\n\n  handleOnSelect = (row, isSelect) => {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    selectToken(row.tokenAddress, tokenList, account, exchange, web3, dispatch)\n  }\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    return (\n          <div id=\"layoutSidenav_nav\">\n            <nav className=\"sb-sidenav accordion sb-sidenav-light small\" id=\"sidenavAccordion\">\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                      { showTokens(this) }\n                    </div>\n                </div>\n                <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Add new ERC20 Token\n              </div>\n              <div className=\"card-body\">\n                  <Form noValidate onSubmit={(event) => {\n                    event.preventDefault()\n                    let tokenAddressInput = document.getElementById('newTokenAddressInput')\n                    addToken(tokenAddressInput.value, tokenList, web3, account, exchange, dispatch)\n                  }}>\n                  <Form.Row>\n                    <Form.Group as={Col}>\n                      <Form.Control autoFocus name=\"tokenAddress\" placeholder=\"Token contract address\" id=\"newTokenAddressInput\" />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                      <Button variant=\"primary\" type=\"submit\">\n                        Add Token\n                      </Button>\n                    </Form.Group>\n                  </Form.Row>\n                </Form>\n              </div>\n            </div>\n            </nav>\n          </div>\n    )\n  }\n}\n\nfunction showTokens(component) {\n  const { \n    tokenList\n  } = component.props\n\n  const { SearchBar } = Search;\n\n  const tokens = tokenList.map((token) => {\n    return {\n      tokenAddress: token.tokenAddress,\n      symbol: token.symbol,\n      name: token.name,\n      decimals: token.decimals\n    }\n  });\n  const columns = [{\n    dataField: 'symbol',\n    text: 'Symbol',\n    sort: true\n  }, {\n    dataField: 'name',\n    text: 'Name',\n    sort: true\n  }, {\n    dataField: 'decimals',\n    text: 'Decimals'\n  }];\n\n  const selectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    hideSelectColumn: true,\n    bgColor: '#aaa',\n    onSelect: component.handleOnSelect\n  };\n\n  return (\n    <ToolkitProvider\n      keyField=\"symbol\"\n      data={ tokens }\n      columns={ columns }\n      search\n    >\n      {\n        props => (\n          <div>\n            <SearchBar { ...props.searchProps } placeholder='filter tokens'/>\n            <BootstrapTable\n              { ...props.baseProps }\n              selectRow={ selectRow }\n              classes=\"table table-sm\"\n              hover\n              condensed\n            />\n          </div>\n        )\n      }\n    </ToolkitProvider>\n\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(SideNav)\n","import React from 'react'\n\nexport default function ({ type }) {\n  if (type === 'table') {\n    return(<tbody className=\"spinner-grow text-dark text-center\"></tbody>)\n  } else {\n    return(\n    \t<div className=\"d-flex justify-content-center\">\n\t\t  <div className=\"spinner-grow text-dark text-center\" role=\"status\">\n\t\t    <span className=\"sr-only\">Loading...</span>\n\t\t  </div>\n\t\t</div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport {\n  tokenSelector,\n  depthChartSelector\n} from '../../store/selectors'\n\nam4core.useTheme(am4themes_animated);\n\nclass DepthChart extends Component {\n  componentDidMount() {\n      this.chart = this.props.showChart ? buildChart(this.props) : null;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (!this.props.showChart) {\n        return;\n    }\n\n    if ((oldProps.token === null && this.props.token !== null)\n        || ( oldProps.token !== null && this.props.token !== null && JSON.stringify(oldProps.token.symbol) !== JSON.stringify(this.props.token.symbol))) {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n        this.chart = buildChart(this.props);\n        return;\n    }\n\n    if(JSON.stringify(oldProps.data) !== JSON.stringify(this.props.data)) {\n        this.chart.data = this.props.data;\n        return;\n    }\n  }\n\n  render() {\n    return (\n        <div>\n            { this.props.showChart ? <div id=\"chartdiv\" style={{ width: \"100%\", height: \"300px\" }} /> : <Spinner type=\"div\" /> }\n        </div>\n    )\n  }\n}\n\nfunction buildChart(props) {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = props.data;\n\n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    xAxis.renderer.minGridDistance = 50;\n    xAxis.title.text = `Price (ETH/${props.token.symbol})`;\n    xAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    xAxis.title.fill = am4core.color(\"#111\");\n\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = `${props.token.symbol} Volume`;\n    yAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    yAxis.title.fill = am4core.color(\"#111\");\n\n    // Create bid value series\n    let bidValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    bidValueSeries.dataFields.categoryX = \"value\";\n    bidValueSeries.dataFields.valueY = \"bidtotalvolume\";\n    bidValueSeries.strokeWidth = 2;\n    bidValueSeries.stroke = am4core.color(\"#0f0\");\n    bidValueSeries.fill = bidValueSeries.stroke;\n    bidValueSeries.fillOpacity = 0.1;\n    bidValueSeries.tooltipText = \"Bid: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidvolume}[/]\"\n\n    // Create ask value series\n    let askValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    askValueSeries.dataFields.categoryX = \"value\";\n    askValueSeries.dataFields.valueY = \"asktotalvolume\";\n    askValueSeries.strokeWidth = 2;\n    askValueSeries.stroke = am4core.color(\"#f00\");\n    askValueSeries.fill = askValueSeries.stroke;\n    askValueSeries.fillOpacity = 0.1;\n    askValueSeries.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{askvolume}[/]\"\n\n    // Create bid volume series\n    let bidVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    bidVolumeSeries.dataFields.categoryX = \"value\";\n    bidVolumeSeries.dataFields.valueY = \"bidvolume\";\n    bidVolumeSeries.strokeWidth = 0;\n    bidVolumeSeries.fill = am4core.color(\"#aaa\");\n    bidVolumeSeries.fillOpacity = 0.2;\n\n    // Create ask volume series\n    let askVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    askVolumeSeries.dataFields.categoryX = \"value\";\n    askVolumeSeries.dataFields.valueY = \"askvolume\";\n    askVolumeSeries.strokeWidth = 0;\n    askVolumeSeries.fill = am4core.color(\"#aaa\");\n    askVolumeSeries.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n\n    return chart;\n}\n\nfunction mapStateToProps(state) {\n    const token = tokenSelector(state)\n    const depthChart = depthChartSelector(state)\n    const showChart = token !== null && depthChart !== null && depthChart.orders !== undefined\n\n  return {\n    showChart: showChart,\n    token: token,\n    data: showChart ? depthChart.orders : []\n  }\n}\n\nexport default connect(mapStateToProps)(DepthChart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Identicon from 'identicon.js'\nimport Spinner from '../Spinner'\nimport { \n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  orderBookLoadedSelector,\n  orderBookSelector\n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass MarketOrders extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          {this.props.buys ? 'Buy' : 'Sell'} Orders\n        </div>\n        <div className=\"card-body\">\n          { this.props.orderBookLoaded ? showOrders(this.props) : <Spinner type='div'/> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showOrders(props) {\n  const { orderBook, token, buys } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n          <th>{buys ? 'Buyer' : 'Seller'}</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n  const ownOrder = (account === order.user)\n\n  return (\n      <OverlayTrigger\n        key={order.id}\n        placement='auto'\n        overlay={\n          <Tooltip id={order.id}>\n            {!ownOrder ? `Click here to ${order.orderFillAction} ${order.user}` : `Cannot ${order.orderFillAction} yourself`}\n          </Tooltip>\n        }\n      >\n      <tr key={order.id}\n          className=\"order-book-order\"\n            onClick={(e) => {\n              if (!ownOrder) {\n                fillOrder(order, account, exchange, dispatch)\n              }\n            }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n        <td>\n          <img\n            className=\"ml-2\"\n            width='15'\n            height='15'\n            src={`data:image/png;base64,${new Identicon(order.user, 15).toString()}`}\n            alt=\"\"\n          />\n        </td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const token = tokenSelector(state)\n  return {\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: token,\n    orderBookLoaded: token && orderBookLoadedSelector(state),\n    orderBook: orderBookSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(MarketOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  makeBuyOrder\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  buyOrderSelector\n} from '../../store/selectors'\nimport { \n  buyOrderAmountChanged,\n  buyOrderPriceChanged\n} from '../../store/actions'\n\nclass NewBuyOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Buy\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    buyOrder,\n    showBuyTotal,\n    dispatch\n  } = props\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeBuyOrder(buyOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Buy Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Amount\"\n            onChange={(e) => {dispatch(buyOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Buy Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Price\"\n            onChange={(e) => {dispatch(buyOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Buy Order</button>\n      { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    buyOrder,\n    showForm: token && !buyOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewBuyOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport {\n  makeSellOrder \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  sellOrderSelector\n} from '../../store/selectors'\nimport {\n  sellOrderAmountChanged,\n  sellOrderPriceChanged\n} from '../../store/actions'\n\nclass NewSellOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Sell\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    sellOrder,\n    showSellTotal,\n    dispatch\n  } = props\n  return (\n    \n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeSellOrder(sellOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Sell Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Amount\"\n            onChange={(e) => {dispatch(sellOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Sell Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Price\"\n            onChange={(e) => {dispatch(sellOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Sell Order</button>\n      { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const sellOrder = sellOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    sellOrder,\n    showForm: token && !sellOrder.making,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewSellOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  myOpenOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass MyOrders extends Component {\n\n  render() {\n    return (\n        <div className=\"card bg-light text-dark\">\n          <div className=\"card-header\">\n            My Orders\n          </div>\n          <div className=\"card-body\">\n            { this.props.myOpenOrdersLoaded ? showMyOpenOrders(this.props) : <Spinner type=\"div\" /> }\n          </div>\n        </div>\n    )\n  }\n}\n\nfunction showMyOpenOrders(props) {\n  const { myOpenOrders, dispatch, exchange, account, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Amount</th>\n          <th>ETH/{token.symbol}</th>\n          <th>Cancel</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myOpenOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td \n                className=\"text-muted cancel-order\"\n                onClick={(e) => {\n                  cancelOrder(order, account, exchange, dispatch)\n                }}>x</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myOpenOrdersLoaded: !tokenLoading && myOpenOrdersLoaded && !orderCancelling,\n    myOpenOrders: myOpenOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport DepthChart from './orders/DepthChart'\nimport MarketOrders from './orders/MarketOrders'\nimport NewBuyOrder from './orders/NewBuyOrder'\nimport NewSellOrder from './orders/NewSellOrder'\nimport MyOrders from './orders/MyOrders'\n\nclass Orders extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <DepthChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <MarketOrders buys={false} />\n          </Col>\n          <Col sm={6}>\n            <MarketOrders buys={true} />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <NewBuyOrder />\n          </Col>\n          <Col sm={6}>\n            <NewSellOrder />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyOrders />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Orders)\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'react-apexcharts'\nimport Spinner from '../Spinner'\nimport { chartOptions } from './PriceChart.config'\nimport { \n  tokenSelector,\n  tokenLoadingSelector,\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../../store/selectors'\n\nclass PriceChart extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { this.props.priceChartLoaded ? showPriceChart(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showPriceChart = (props) => {\n  const {token, priceChart} = props\n\n  return (\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>ETH/{token.symbol} &nbsp; { priceSymbol(priceChart.lastPriceChange) } &nbsp; { priceChart.lastPrice }</h4>\n      </div>\n      <Chart options={chartOptions} series={priceChart.series} type='candlestick' width='100%' height='200px'/>\n    </div>\n  )\n}\n\nconst priceSymbol = (priceChange) => {\n  let output\n  if (priceChange === '+') {\n    output = <span className=\"text-success\">&#9650;</span>\n  } else {\n    output = <span className=\"text-danger\">&#9660;</span>\n  }\n  return output\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const priceChartLoaded = priceChartLoadedSelector(state)\n    \n  return {\n    token: tokenSelector(state),\n    priceChartLoaded: priceChartLoaded && !tokenLoading,\n    priceChart: priceChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  myFilledOrdersSelector,\n  myFilledOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector\n} from '../../store/selectors'\n\nclass MyTrades extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          My Trades\n        </div>\n        <div className=\"card-body\">\n          { this.props.myFilledOrdersLoaded ? showMyFilledOrders(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showMyFilledOrders(props) {\n  const { myFilledOrders, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myFilledOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myFilledOrdersLoaded: !tokenLoading && myFilledOrdersLoadedSelector(state),\n    myFilledOrders: myFilledOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport {\n  contractsLoadedSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  filledOrdersLoadedSelector,\n  filledOrdersSelector \n} from '../../store/selectors'\n\nclass MarketTrades extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n        { this.props.contractsLoaded ?\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Market Trades\n              </div>\n              <div className=\"card-body\">\n                <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n                    <thead>\n                      <tr>\n                        <th>Time</th>\n                        <th>{this.props.token.symbol}</th>\n                        <th>ETH/{this.props.token.symbol}</th>\n                      </tr>\n                    </thead>\n                    { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" /> }\n                  </table>\n              </div>\n            </div>\n          :\n          <Spinner type=\"div\" />\n        }\n      </div>\n    )\n  }\n}\n\nfunction showFilledOrders(orders) {\n  return (\n    <tbody>\n    { orders.map((order) => {\n        return (\n            <tr key={order.id} className={`order-${order.id}`}>\n              <td className=\"text-muted\">{order.formattedTimestamp}</td>\n              <td>{order.tokenAmount}</td>\n              <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n            </tr>\n        )\n      })\n    }\n    </tbody>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const filledOrdersLoaded = filledOrdersLoadedSelector(state)\n\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    token: tokenSelector(state),\n    filledOrdersLoaded: filledOrdersLoaded && !tokenLoading,\n    filledOrders: filledOrdersSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport PriceChart from './trades/PriceChart'\nimport MyTrades from './trades/MyTrades'\nimport MarketTrades from './trades/MarketTrades'\n\nclass Trades extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <PriceChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyTrades />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MarketTrades />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Trades)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  depositEther,\n  withdrawEther\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  etherBalanceSelector,\n  exchangeEtherBalanceSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              ETH\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    account,\n    etherBalance,\n    exchangeEtherBalance,\n    dispatch,\n    etherDepositAmount,\n    etherWithdrawAmount\n  } = props\n  return(\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>Wallet</th>\n          <th>Exchange</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{etherBalance}</td>\n          <td>{exchangeEtherBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositEther(etherDepositAmount, account, web3, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {dispatch(etherDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" id=\"deposit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              withdrawEther(etherWithdrawAmount, account, web3, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {\n                      dispatch(etherWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  depositToken,\n  withdrawToken \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  tokenBalanceSelector,\n  exchangeTokenBalanceSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              { this.props.token.symbol }\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    tokenBalance,\n    exchangeTokenBalance,\n    dispatch,\n    tokenDepositAmount,\n    tokenWithdrawAmount\n  } = props\n  return(\n    <table className=\"table table-light table-sm small\">\n      \n      <tbody>\n        <tr>\n          <td>{tokenBalance}</td>\n          <td>{exchangeTokenBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositToken(tokenDepositAmount, account, web3, token, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {dispatch(tokenDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              withdrawToken(tokenWithdrawAmount, account, web3, token, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {\n                      dispatch(tokenWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-0\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport ETHFunds from './funds/ETHFunds'\nimport TokenFunds from './funds/TokenFunds'\n\nclass Funds extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <ETHFunds />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <TokenFunds />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Funds)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Orders from './Orders'\nimport Trades from './Trades'\nimport Funds from './Funds'\n\nclass Content extends Component {\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Tabs defaultActiveKey=\"orders\" className=\"bg-light text-dark\">\n          <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-light\">\n            <Orders />\n          </Tab>\n          <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-light\">\n            <Trades />\n          </Tab>\n          <Tab eventKey=\"funds\" title=\"Funds\" className=\"bg-light\">\n            <Funds />\n          </Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Content)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TopNav from './TopNav'\nimport SideNav from './SideNav'\nimport Content from \"./Content\"\nimport { \n  loadWeb3, \n  loadAccount,\n  loadExchange,\n  selectToken\n} from '../store/interactions'\nimport { \n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  contractsLoadedSelector, \n  sideNavShowSelector, \n  tokenSelector, \n  tokenListSelector\n} from '../store/selectors'\nimport { web3AccountLoaded } from '../store/actions'\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    try {\n      const web3 = loadWeb3(dispatch)\n      await window.ethereum.enable();\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n        dispatch(web3AccountLoaded(accounts[0]))\n      })\n\n      window.ethereum.on('chainChanged', () => {\n        document.location.reload()\n      })\n\n      // Acccounts now exposed\n      const account = await loadAccount(web3, dispatch)\n      console.log('account', account)\n\n      const network = await web3.eth.net.getNetworkType()\n      console.log('network', network)\n      const networkId = await web3.eth.net.getId()\n      console.log('network id', networkId)\n\n      const exchange = await loadExchange(web3, networkId, dispatch)\n      if (!exchange) {\n        return;\n      }\n    } catch(e) {\n      return;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"props\", props)\n    const {\n      token,\n      tokenList,\n      account,\n      exchange,\n      web3,\n      dispatch\n    } = props\n\n    if (token === null && tokenList.length > 0) {\n      selectToken(tokenList[0].tokenAddress, tokenList, account, exchange, web3, dispatch)\n    }\n\n    return state\n  }\n\n  render() {\n\n    if (!this.props.exchange) {\n      return (\n        <h3>Please connect your wallet</h3>\n      )\n    }\n\n    return (\n      <div className={`sb-nav-fixed ${this.props.sideNavShow ? \"\" : \"sb-sidenav-toggled\"}`}>\n\n        <TopNav/>\n\n        <div id=\"layoutSidenav\">\n          <SideNav/>\n          <div id=\"layoutSidenav_content\">\n            <main>\n              <div className=\"container-fluid\">\n                <Content />\n              </div>\n            </main>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    contractsLoaded: contractsLoadedSelector(state),\n    sideNavShow: sideNavShowSelector(state),\n    token: tokenSelector(state),\n    tokenList: tokenListSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux'\n\nfunction app (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase 'SIDE_NAV_SHOW_HIDE_TOGGLED':\n\t\t\tlet show = state.sideNavShow\n\t\t\tif (show === null || show === undefined) {\n\t\t\t\tshow = true\n\t\t\t}\n\t\t\treturn {...state, sideNavShow: !show}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction web3 (state = {}, action ) {\n\tswitch (action.type) {\n\t\tcase 'WEB3_LOADED':\n\t\t\treturn { ...state, connection: action.connection }\n\t\tcase 'WEB3_ACCOUNT_LOADED':\n\t\t\treturn { ...state, account: action.account }\n\t\tcase 'ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, balance: action.balance}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction exchange (state = {}, action ) {\n\tlet index\n\tlet data\n\tswitch (action.type) {\n\t\tcase 'EXCHANGE_LOADED':\n\t\t\treturn { ...state, loaded: true, contract: action.contract, tokens: {data: []}, token: null }\n\t\tcase 'TOKEN_ADDED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.tokens.data.findIndex(token => token.tokenAddress === action.token.tokenAddress)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.tokens.data, action.token]\n\t\t\t} else {\n\t\t\t\tdata = state.tokens.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\ttokens: {\n\t\t\t\t\t...state.tokens,\n\t\t\t\t\tdata\n\t\t\t\t}\n\t\t\t}\n\t\tcase 'SELECTING_TOKEN': \n\t\t\treturn { ...state, tokenLoading: true }\n\t\tcase 'TOKEN_SELECTED':\n\t\t\treturn { ...state, token: action.token, tokenLoading: false }\n\t\tcase 'TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, tokenBalance: action.balance}\n\t\tcase 'EXCHANGE_ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeEtherBalance: action.balance}\n\t\tcase 'EXCHANGE_TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeTokenBalance: action.balance}\n\t\tcase 'BALANCES_LOADING':\n\t\t\treturn { ...state, balancesLoading: true} \n\t\tcase 'BALANCES_LOADED':\n\t\t\treturn { ...state, balancesLoading: false} \n\t\tcase 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherDepositAmount: action.amount} \n\t\tcase 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherWithdrawAmount: action.amount} \n\t\tcase 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenDepositAmount: action.amount} \n\t\tcase 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenWithdrawAmount: action.amount}\n\t\tcase 'BUY_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: action.amount } } \n\t\tcase 'BUY_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, price: action.price } } \n\t\tcase 'BUY_ORDER_MAKING':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: null, price: null, making: true } } \n\t\tcase 'SELL_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: action.amount } } \n\t\tcase 'SELL_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, price: action.price } } \n\t\tcase 'SELL_ORDER_MAKING':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: null, price: null, making: true } } \n\t\tcase 'ORDER_MADE':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.allOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.allOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.allOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\tbuyOrder: {\n\t\t\t\t\t...state.buyOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tsellOrder: {\n\t\t\t\t\t...state.sellOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tallOrders: {\n\t\t\t\t\t...state.allOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tcase 'CANCELLED_ORDERS_LOADED':\n\t\t\treturn { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }}\n\t\tcase 'FILLED_ORDERS_LOADED':\n\t\t\treturn { ...state, filledOrders: {loaded: true, data: action.filledOrders }} \n\t\tcase 'ALL_ORDERS_LOADED':\n\t\t\treturn { ...state, allOrders: {loaded: true, data: action.allOrders }} \n\t\tcase 'ORDER_CANCELLING':\n\t\t\treturn { ...state, orderCancelling: true} \n\t\tcase 'ORDER_CANCELLED':\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderCancelling: false,\n\t\t\t\tcancelledOrders: {\n\t\t\t\t\t...state.cancelledOrders,\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t...state.cancelledOrders.data,\n\t\t\t\t\t\taction.order\n\t\t\t\t\t]\n\t\t\t\t}} \n\t\tcase 'ORDER_FILLING':\n\t\t\treturn { ...state, orderFilling: true} \n\t\tcase 'ORDER_FILLED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.filledOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.filledOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.filledOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderFilling: false,\n\t\t\t\tfilledOrders: {\n\t\t\t\t\t...state.filledOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tapp,\n\tweb3,\n\texchange\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// for reduc devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore ( preloadedState ) {\n\treturn createStore (\n\t\trootReducer,\n\t\tpreloadedState,\n\t\tcomposeEnhancers (applyMiddleware (...middleware, loggerMiddleware))\n\t)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store = {configureStore()}>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}