{"version":3,"sources":["components/Notification.js","helpers.js","store/selectors.js","store/actions.js","components/TopNav.js","store/interactions.js","components/SideNav.js","components/Spinner.js","components/orders/DepthChart.js","components/orders/MarketOrders.js","components/orders/NewBuyOrder.js","components/orders/NewSellOrder.js","components/orders/MyOrders.js","components/Orders.js","components/trades/PriceChart.config.js","components/trades/PriceChart.js","components/trades/MyTrades.js","components/trades/MarketTrades.js","components/Trades.js","components/funds/ETHFunds.js","components/funds/TokenFunds.js","components/Funds.js","components/Content.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["Notification","this","props","title","type","undefined","className","Component","ETHER_ADDRESS","GREEN","RED","weiToEther","wei","weiToTokens","tokenDecimals","etherToWei","e","toString","tokensToWei","t","formatEtherBalance","balance","Math","round","formatTokenBalance","decimals","sideNavShowSelector","createSelector","state","get","s","account","accountSelector","a","web3Selector","w","exchangeLoaded","exchangeSelector","el","tokenListSelector","token","tokenSelector","tokenLoadingSelector","contractsLoadedSelector","balancesLoadingSelector","l","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","o","sellOrderSelector","cancelledOrdersLoaded","cancelledOrders","col","filledOrdersLoaded","orders","console","log","filledOrdersLoadedSelector","fol","filledOrders","filledOrdersSelector","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","allOrders","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","allOrdersLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","depthChartSelector","decorateWithVolume","concat","value","prevPrice","res","i","length","volume","totalvolume","dp","push","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","loaded","priceChartSelector","secondLastOrder","lastOrder","slice","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","close","low","minBy","high","maxBy","x","Date","y","orderCancellingSelector","c","f","web3AccountLoaded","tokenAdded","tokenSelected","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","TopNav","toggleSidenav","bind","dispatch","to","href","onClick","OverlayTrigger","key","overlay","Tooltip","role","data-toggle","aria-haspopup","aria-expanded","width","height","src","Identicon","alt","connect","web3","exchange","tokenList","loadWeb3","Web3","window","givenProvider","eth","handleRevert","connection","loadAccount","getAccounts","accounts","loadExchange","networkId","Contract","Exchange","abi","networks","address","contract","subscribeToExchangeEvents","loadAllTokens","getPastEvents","fromBlock","event","returnValues","events","TokenAdded","error","subscribeToTokenEvents","tokenAddress","Cancel","tokenGet","Trade","Deposit","loadBalances","Withdraw","Order","loadAllOrders","cancelStream","tradeStream","orderStream","addToken","tokens","callback","findIndex","Error","Token","tokenContract","checkContractFunction","methods","call","name","symbol","send","from","on","hash","functionSignature","selectToken","index","getBalance","etherBalance","balanceOf","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","SideNav","handleOnSelect","row","isSelect","success","toast","notify","component","SearchBar","Search","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","keyField","columns","dataField","text","search","searchProps","placeholder","baseProps","classes","hover","condensed","showTokens","Form","noValidate","onSubmit","preventDefault","tokenAddressInput","document","getElementById","Row","Group","as","Col","Control","autoFocus","controlId","Button","variant","am4core","am4themes_animated","DepthChart","chart","showChart","buildChart","dispose","oldProps","JSON","stringify","style","Spinner","am4charts","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","labels","template","fill","yAxis","yAxes","bidValueSeries","categoryX","valueY","strokeWidth","stroke","fillOpacity","tooltipText","askValueSeries","bidVolumeSeries","askVolumeSeries","cursor","depthChart","MarketOrders","loadBlockchainData","buys","orderBook","ownOrder","fillOrder","renderOrder","showOrders","NewBuyOrder","showForm","buyOrder","showBuyTotal","amount","price","makeOrder","makeBuyOrder","onChange","target","required","making","NewSellOrder","sellOrder","showSellTotal","makeSellOrder","MyOrders","myOpenOrdersLoaded","myOpenOrders","cellSpacing","cancelOrder","showMyOpenOrders","orderCancelling","Orders","Container","sm","chartOptions","animations","enabled","toolbar","show","tooltip","theme","fontSize","fontFamily","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","PriceChart","priceChartLoaded","showPriceChart","priceChart","priceSymbol","priceChange","tokenLoading","MyTrades","myFilledOrdersLoaded","myFilledOrders","showMyFilledOrders","MarketTrades","contractsLoaded","Trades","ETHFunds","etherDepositAmount","etherWithdrawAmount","depositEther","withdrawEther","balancesLoading","tokenDepositAmount","tokenWithdrawAmount","approve","depositToken","withdrawToken","Funds","TokenFunds","Content","Tabs","defaultActiveKey","Tab","eventKey","App","sideNavShow","ethereum","LoadingButton","rel","connectMetamask","enable","location","reload","net","getNetworkType","network","getId","rootReducer","combineReducers","app","action","orderFilling","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","Boolean","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6d648db3.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Notification extends Component {\n\n  render() {\n    let {title, type} = this.props\n    if (type === undefined) {\n      type = \"info\"\n    }\n    return (\n      <div className={`alert alert-${type}`}>{title}</div>\n    )\n  }\n}\n\nexport default Notification\n","export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const DECIMALS = 18\n\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const weiToEther = (wei) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** DECIMALS))\n\t}\n}\n\nexport const weiToTokens = (wei, tokenDecimals) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** tokenDecimals))\n\t}\n}\n\nexport const etherToWei = (e) => {\n\tif (e) {\n\t\treturn (e * (10 ** DECIMALS)).toString()\n\t}\n}\n\nexport const tokensToWei = (t, tokenDecimals) => {\n\tif (t) {\n\t\treturn (t * (10 ** tokenDecimals)).toString()\n\t}\n}\n\nexport const formatEtherBalance = (balance) => {\n\tconst precision = 100\n\tbalance = weiToEther(balance)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}\n\nexport const formatTokenBalance = (balance, decimals) => {\n\tconst precision = 100\n\tbalance = weiToTokens(balance, decimals)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}","import { get, reject, groupBy, minBy, maxBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, formatEtherBalance, formatTokenBalance, weiToEther, weiToTokens } from '../helpers'\n\nconst sideNavShow = (state) => get(state, 'app.sideNavShow', true)\nexport const sideNavShowSelector = createSelector(sideNavShow, s => s)\n\nconst account = (state) => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nconst tokenList = state => get(state, 'exchange.tokens.data', [])\nexport const tokenListSelector = createSelector(tokenList, t => t)\n\nconst token = state => get(state, 'exchange.token', null)\nexport const tokenSelector = createSelector(token, t => t)\n\nconst tokenLoading = state => get(state, 'exchange.tokenLoading', true)\nexport const tokenLoadingSelector = createSelector(tokenLoading, t => t)\n\nexport const contractsLoadedSelector = createSelector(\n\texchangeLoaded,\n\ttoken,\n\t(el, t) => (el && t !== null)\n)\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, l => l)\n\nconst etherBalance = state => get(state, 'web3.balance')\nexport const etherBalanceSelector = createSelector(\n\tetherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst tokenBalance = state => get(state, 'exchange.tokenBalance')\nexport const tokenBalanceSelector = createSelector(\n\ttokenBalance, \n\ttoken,\n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst exchangeEtherBalance = state => get(state, 'exchange.exchangeEtherBalance')\nexport const exchangeEtherBalanceSelector = createSelector(\n\texchangeEtherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst exchangeTokenBalance = state => get(state, 'exchange.exchangeTokenBalance')\nexport const exchangeTokenBalanceSelector = createSelector(\n\texchangeTokenBalance,\n\ttoken, \n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, a => a)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, a => a)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, a => a)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, a => a)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, o => o)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, o => o)\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(\n\tcancelledOrders,\n\t(orders) => {\n\t\tconsole.log(orders)\n\t}\n)\n\n// Filled orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\t// sort ascending for price comparison\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = decorateFilledOrders(orders, token)\n\n\t\t// sort descending for display\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateFilledOrders = (orders, token) => {\n\tlet previousOrder = orders[0]\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateFilledOrder(order, previousOrder)\n\t\tpreviousOrder = order\n\t\treturn order\n\t})\n}\n\nconst decorateOrder = (order, token) => {\n\n\tlet etherAmount\n\tlet tokenAmount\n\n\tif (order.tokenGive === ETHER_ADDRESS) {\n\t\tetherAmount = order.amountGive\n\t\ttokenAmount = order.amountGet\n\t} else {\n\t\tetherAmount = order.amountGet\n\t\ttokenAmount = order.amountGive\n\t}\n\n\tetherAmount = weiToEther(etherAmount)\n\ttokenAmount = weiToTokens(tokenAmount, token ? token.decimals : 18)\n\n\tconst precision = 100000\n\tlet tokenPrice = (etherAmount / tokenAmount)\n\ttokenPrice = Math.round(tokenPrice * precision) / precision\n\n\treturn ({\n\t\t...order,\n\t\tetherAmount: etherAmount,\n\t\ttokenAmount: tokenAmount,\n\t\ttokenPrice,\n\t\tformattedTimestamp: moment.unix(order.timestamp).format('hh:mm:ss D/M/Y')\n\t})\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n\treturn ({\n\t\t...order,\n\t\ttokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n\t})\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n\t// show green if order price higher than previous\n\t// or if its the first order\n\tif (orderId === previousOrder.id) {\n\t\treturn GREEN\n\t}\n\tif (previousOrder.tokenPrice <= tokenPrice) {\n\t\treturn GREEN\n\t} else {\n\t\treturn RED\n\t}\n}\n\n// All orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\n\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\nconst openOrders = state => {\n\tconst all = allOrders(state)\n\tconst filled = filledOrders(state)\n\tconst cancelled = cancelledOrders(state)\n\n\tconst openOrders = reject(all, (order) => {\n\t\tconst orderFilled = filled.some((o) => o.id === order.id)\n\t\tconst orderCancelled = cancelled.some((o) => o.id === order.id)\n\t\treturn (orderFilled || orderCancelled)\n\t})\n\treturn openOrders\n}\n\nconst orderBookLoaded = state => allOrdersLoaded(state) && filledOrdersLoaded(state) && cancelledOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const orderBookSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// sort each group\n\t\tconst buyOrders = get(orders, 'buy', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tbuyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n\t\t}\n\n\t\tconst sellOrders = get(orders, 'sell', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tsellOrders: sellOrders.sort((a,b) => a.tokenPrice - b.tokenPrice)\n\t\t}\n\t\treturn orders\n\t}\n)\n\nconst decorateOrderBookOrders = (orders, token) => {\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateOrderBookOrder(order)\n\t\treturn order\n\t})\n}\n\nconst decorateOrderBookOrder = (order) => {\n\tconst orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\treturn ({\n\t\t...order,\n\t\torderType,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderFillAction: (orderType === 'buy' ? 'sell to' : 'buy from')\n\t})\n}\n\nexport const depthChartSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// buys are sorted descending\n\t\tconst buyOrders = decorateWithVolume('bid', get(orders, 'buy', []).sort((a,b) => b.tokenPrice - a.tokenPrice))\n\t\t// sells are sorted ascending\n\t\tconst sellOrders = decorateWithVolume('ask', get(orders, 'sell', []).sort((a,b) => a.tokenPrice - b.tokenPrice))\n\n\t\torders = {\n\t\t\torders: buyOrders\n\t\t\t\t.concat(sellOrders)\n\t\t\t\t.sort((a,b) =>  a.value - b.value)\n\t\t}\n\n\t\treturn orders\n\t}\n)\n\nconst decorateWithVolume = (type, orders) => {\n\tlet res = []\n\tlet prevPrice\n\n\tfor(var i = 0; i < orders.length; i++) {\n\t\torders[i].volume = orders[i].tokenAmount;\n        \n        if (i === 0) {\n        \torders[i].totalvolume = orders[i].tokenAmount;\n        }\n        else {\n        \tif (prevPrice === orders[i].tokenPrice) {\n        \t\torders[i].volume = orders[i-1].volume + orders[i].tokenAmount\n        \t}\n          \torders[i].totalvolume = orders[i-1].totalvolume + orders[i].tokenAmount;\n        }\n\n        // aggregate orders with the same price\n        if (prevPrice !== orders[i].tokenPrice) {\n        \tlet dp = {};\n\t        dp[\"value\"] = orders[i].tokenPrice;\n\t        dp[type + \"volume\"] = orders[i].volume;\n\t        dp[type + \"totalvolume\"] = orders[i].totalvolume;\n\n        \tres.push(dp);\n    \t} else {\n    \t\tres[res.length - 1][type + \"volume\"] = orders[i].volume;\n    \t\tres[res.length - 1][type + \"totalvolume\"] = orders[i].totalvolume;\n    \t}\n\n        prevPrice = orders[i].tokenPrice\n     }\n\n     return res\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nexport const myFilledOrdersSelector = createSelector(\n\taccount,\n\tfilledOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account || o.userFill === account)\n\t\torders = decorateMyFilledOrders(orders, account, token)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyFilledOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyFilledOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n\tconst myOrder = order.user === account\n\n\tlet orderType\n\tif (myOrder) {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\t} else {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n\t}\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderSign: (orderType === 'buy' ? '+' : '-')\n\t})\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const myOpenOrdersSelector = createSelector(\n\taccount,\n\topenOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account)\n\t\torders = decorateMyOpenOrders(orders, account, token)\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyOpenOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyOpenOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n\tlet orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED)\n\t})\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = orders.map((o) => decorateOrder(o, token))\n\n\t\t// get last two orders for final price\n\t\tlet secondLastOrder, lastOrder\n\t\t[secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n\t\tconst lastPrice = get(lastOrder, 'tokenPrice', 0)\n\t\tconst secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\t\treturn ({\n\t\t\tlastPrice,\n\t\t\tlastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n\t\t\tseries: [{\n\t\t\t\tdata: buildGraphData(orders)\n\t\t\t}]\n\t\t})\n\t}\n)\n\nexport const buildGraphData = (orders) => {\n\n\t// group by hour\n\torders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n\n\t// get each hour with data\n\tconst hours = Object.keys(orders)\n\n\tconst graphData = hours.map((hour) => {\n\t\t// calculate open, high, low, close for the hour\n\t\tconst group = orders[hour]\n\t\tconst open = group[0]\n\t\tconst close = group[group.length - 1]\n\t\tconst low = minBy(group, 'tokenPrice')\n\t\tconst high = maxBy(group, 'tokenPrice')\n\n\t\treturn ({\n\t\t\tx: new Date(hour),\n\t\t\ty: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n\t\t})\n\t})\n\n\treturn graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, c => c)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, f => f)\n","export function web3Loaded(connection) {\n\treturn {\n\t\ttype: 'WEB3_LOADED',\n\t\tconnection\n\t}\n}\n\nexport function web3AccountLoaded(account) {\n\treturn {\n\t\ttype: 'WEB3_ACCOUNT_LOADED',\n\t\taccount\n\t}\n}\n\nexport function exchangeLoaded(contract) {\n\treturn {\n\t\ttype: 'EXCHANGE_LOADED',\n\t\tcontract\n\t}\n}\n\nexport function tokenAdded(token) {\n\tconsole.log(\"TOKEN_ADDED\", token)\n\treturn {\n\t\ttype: 'TOKEN_ADDED',\n\t\ttoken\n\t}\n}\n\nexport function selectingToken() {\n\treturn {\n\t\ttype: 'SELECTING_TOKEN'\n\t}\n}\n\nexport function tokenSelected(token) {\n\treturn {\n\t\ttype: 'TOKEN_SELECTED',\n\t\ttoken\n\t}\n}\n\nexport function etherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function tokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function balancesLoading() {\n\treturn {\n\t\ttype: 'BALANCES_LOADING'\n\t}\n}\n\nexport function balancesLoaded() {\n\treturn {\n\t\ttype: 'BALANCES_LOADED'\n\t}\n}\n\nexport function etherDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'BUY_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'BUY_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function buyOrderMaking() {\n\treturn {\n\t\ttype: 'BUY_ORDER_MAKING'\n\t}\n}\n\nexport function sellOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'SELL_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function sellOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'SELL_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function sellOrderMaking() {\n\treturn {\n\t\ttype: 'SELL_ORDER_MAKING'\n\t}\n}\n\nexport function orderMade(order) {\n\treturn {\n\t\ttype: 'ORDER_MADE',\n\t\torder\n\t}\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n\treturn {\n\t\ttype: 'CANCELLED_ORDERS_LOADED',\n\t\tcancelledOrders\n\t}\n}\n\n\nexport function filledOrdersLoaded(filledOrders) {\n\treturn {\n\t\ttype: 'FILLED_ORDERS_LOADED',\n\t\tfilledOrders\n\t}\n}\n\n\nexport function allOrdersLoaded(allOrders) {\n\treturn {\n\t\ttype: 'ALL_ORDERS_LOADED',\n\t\tallOrders\n\t}\n}\n\nexport function orderCancelling() {\n\treturn {\n\t\ttype: 'ORDER_CANCELLING'\n\t}\n}\n\nexport function orderCancelled(order) {\n\treturn {\n\t\ttype: 'ORDER_CANCELLED',\n\t\torder\n\t}\n}\n\nexport function orderFilling() {\n\treturn {\n\t\ttype: 'ORDER_FILLING'\n\t}\n}\n\nexport function orderFilled(order) {\n\treturn {\n\t\ttype: 'ORDER_FILLED',\n\t\torder\n\t}\n}\n\nexport function sideNavShowHideToggled() {\n\treturn {\n\t\ttype: 'SIDE_NAV_SHOW_HIDE_TOGGLED'\n\t}\n}","import React, { Component } from 'react'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport Identicon from 'identicon.js'\n\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\nimport {\n  sideNavShowHideToggled\n} from '../store/actions'\n\nclass TopNav extends Component {\n\n  constructor(props) {    \n    super(props)\n    this.toggleSidenav = this.toggleSidenav.bind(this)\n  }\n\n  toggleSidenav() {\n    const {\n      dispatch\n    } = this.props\n    dispatch(sideNavShowHideToggled())\n  }\n\n  render() {\n    const {\n      account\n    } = this.props\n\n    return (\n      <div>\n        <nav className=\"sb-topnav navbar navbar-expand navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to='/'>Kouga</Link>\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\" \n              onClick={\n                this.toggleSidenav\n              }>\n              <i className=\"fas fa-bars\"></i>\n            </button>\n\n            <div className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n            </div>\n\n            <div className=\"navbar-nav ml-auto ml-md-0\">\n                    { account\n                      ? <OverlayTrigger\n                          key={account}\n                          overlay={\n                            <Tooltip id={account}>\n                              {`${account}`}\n                            </Tooltip>\n                          }\n                        >\n                          <a className=\"nav-link\" href=\"/#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <img\n                              className=\"ml-2\"\n                              width='30'\n                              height='30'\n                              src={`data:image/png;base64,${new Identicon(account, 30).toString()}`}\n                              alt=\"\"\n                            />\n                          </a>\n                        </OverlayTrigger>\n                        \n                      : <span></span>\n                    }\n                    \n            </div>\n        </nav>\n      </div>\n      \n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(TopNav)\n","import Web3 from 'web3'\nimport Exchange from '../contracts/abis/Exchange.json'\nimport Token from '../contracts/abis/Token18.json'\nimport { \n\tweb3Loaded,\n\tweb3AccountLoaded,\n\texchangeLoaded,\n\ttokenAdded,\n\tselectingToken,\n\ttokenSelected,\n\tetherBalanceLoaded,\n\ttokenBalanceLoaded,\n\texchangeEtherBalanceLoaded,\n\texchangeTokenBalanceLoaded,\n\tbalancesLoading,\n\tbalancesLoaded,\n\tbuyOrderMaking,\n\tsellOrderMaking,\n\torderMade,\n\tcancelledOrdersLoaded,\n\tfilledOrdersLoaded,\n\tallOrdersLoaded,\n\torderCancelling,\n\torderCancelled,\n\torderFilling,\n\torderFilled\n} from './actions.js'\nimport { ETHER_ADDRESS, tokensToWei, etherToWei } from '../helpers'\n\nexport const loadWeb3 = (dispatch) => {\n\tlet web3 = new Web3(window['ethereum'] || Web3.givenProvider || 'http://127.0.0.1:7545')\n\tweb3.eth.handleRevert = true\n\tdispatch(web3Loaded(web3))\n\treturn web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n\tconst accounts = await web3.eth.getAccounts()\n\tconst account = accounts[0]\n\tdispatch(web3AccountLoaded(account))\n\treturn account\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n\ttry {\n\t\tconst exchange = await new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address, {handleRevert: true})\n\t\tdispatch(exchangeLoaded(exchange))\n\t\tsubscribeToExchangeEvents(exchange, dispatch)\n\n\t\tawait loadAllTokens(exchange, dispatch)\n\t\treturn exchange\n\t} catch (error) {\n\t\tconsole.log('Contract not deployed to the current network', error)\n\t\treturn null\n\t}\n}\n\nexport const loadAllTokens = async (exchange, dispatch) => {\n\ttry {\n\t\tconst tokenStream = await exchange.getPastEvents('TokenAdded', {fromBlock: 0})\n\t\ttokenStream.map((event) => dispatch(tokenAdded(event.returnValues)))\n\t} catch (error) {\n\t\tconsole.log('Could not get token stream')\n\t\treturn null\n\t}\n}\n\nexport const subscribeToExchangeEvents = async (exchange, dispatch) => {\n\texchange.events.TokenAdded({}, (error, event) => {\n\t\tdispatch(tokenAdded(event.returnValues))\n\t})\n}\n\nexport const subscribeToTokenEvents = async (token, tokenAddress, account, exchange, web3, dispatch) => {\n\texchange.events.Cancel({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderCancelled(event.returnValues))\n\t})\n\texchange.events.Trade({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderFilled(event.returnValues))\n\t})\n\texchange.events.Deposit({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Withdraw({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Order({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderMade(event.returnValues))\n\t})\n}\n\nexport const loadAllOrders = async (tokenAddress, exchange, dispatch) => {\n\ttry {\n\t\tconst cancelStream = await exchange.getPastEvents(\n\t\t\t'Cancel', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst cancelledOrders = cancelStream.map((event) => event.returnValues)\n\t\tdispatch(cancelledOrdersLoaded(cancelledOrders))\n\n\t\tconst tradeStream = await exchange.getPastEvents(\n\t\t\t'Trade', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst filledOrders = tradeStream.map((event) => event.returnValues)\n\t\tdispatch(filledOrdersLoaded(filledOrders))\n\n\t\tconst orderStream = await exchange.getPastEvents(\n\t\t\t'Order', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst allOrders = orderStream.map((event) => event.returnValues)\n\t\tdispatch(allOrdersLoaded(allOrders))\n\t} catch (error) {\n\t\tconsole.log('Could not get order streams')\n\t\treturn null\n\t}\n}\n\nexport const addToken = async (tokenAddress, tokens, web3, account, exchange, dispatch, callback) => {\n\ttry {\n\t\t// check if not already present\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tif (index !== -1) {\n\t\t\tthrow new Error(\"allready present\")\n\t\t}\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress)\n\n\t\t// check if really ERC20\n\t\tcheckContractFunction(tokenContract, 'name()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'symbol()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'decimals()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'totalSupply()')\n\t\tcheckContractFunction(tokenContract, 'balanceOf(address)')\n\t\tcheckContractFunction(tokenContract, 'transfer(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'transferFrom(address,address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'approve(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'allowance(address,address)')\n\n\t\tconst decimals = await tokenContract.methods.decimals().call()\n\t\tconst name = await tokenContract.methods.name().call()\n\t\tconst symbol = await tokenContract.methods.symbol().call()\n\n\t\texchange.methods.addToken(tokenAddress, name, symbol, decimals).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tconsole.log('addded token with hash', hash)\n\t\t\tcallback(true)\n\t\t})\n\t\t.on('error', (error) => {\n\t\t\tconsole.log('Could not add token', error)\n\t\t\tcallback(false)\n\t\t})\n\t} catch (error) {\n\t\tconsole.log('Could not add new token:', error)\n\t\tcallback(false)\n\t}\n}\n\nconst checkContractFunction = (contract, functionSignature) => {\n\tif (contract.methods[functionSignature] === undefined) {\n\t\tthrow new Error(\"Not an ERC20 token: \" + functionSignature)\n\t}\n}\n\nexport const selectToken = async (tokenAddress, tokens, account, exchange, web3, dispatch, callback) => {\n\ttry {\n\t\tdispatch(selectingToken())\n\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tlet token = tokens[index]\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, token.tokenAddress)\n\t\ttoken.contract = tokenContract\n\n\t\tawait loadBalances(account, exchange, token, web3, dispatch)\n\t\tawait loadAllOrders(tokenAddress, exchange, dispatch)\n\t\tsubscribeToTokenEvents(token, tokenAddress, account, exchange, web3, dispatch)\n\n\t\tdispatch(tokenSelected(token))\n\t\tcallback(true)\n\t} catch (error) {\n\t\tconsole.log('Could not add new token', error)\n\t\tcallback(false)\n\t}\n}\n\nexport const loadBalances = async (account, exchange, token, web3, dispatch) => {\n\tdispatch(balancesLoading())\n\n\tconst etherBalance = await web3.eth.getBalance(account)\n\tdispatch(etherBalanceLoaded(etherBalance))\n\n\tconst tokenBalance = await token.contract.methods.balanceOf(account).call()\n\tdispatch(tokenBalanceLoaded(tokenBalance))\n\n\tconst exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n\tdispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n\tconst exchangeTokenBalance = await exchange.methods.balanceOf(token.contract.options.address, account).call()\n\tdispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n\tdispatch(balancesLoaded())\n}\n\nexport const depositEther = (amount, account, web3, exchange, dispatch, callback) => {\n\texchange.methods.depositEther().send({from: account, value: etherToWei(amount)})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not deposit ether', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const withdrawEther = (amount, account, web3, exchange, dispatch, callback) => {\n\texchange.methods.withdrawEther(etherToWei(amount)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw ether', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const depositToken = (amount, account, web3, token, exchange, dispatch, callback) => {\n\tamount = tokensToWei(amount, token.decimals)\n\n\ttoken.contract.methods.approve(exchange.options.address, amount).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\texchange.methods.depositToken(token.contract.options.address, amount).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tdispatch(balancesLoading())\n\t\t\tcallback(true)\n\t\t})\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not approve token deposit', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const withdrawToken = (amount, account, web3, token, exchange, dispatch, callback) => {\n\texchange.methods.withdrawToken(token.contract.options.address, tokensToWei(amount, token.decimals)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw token', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const makeBuyOrder = (order, account, web3, token, exchange, dispatch, callback) => {\n\tconst tokenGet = token.contract.options.address\n\tconst amountGet = tokensToWei(order.amount, token.decimals)\n\tconst tokenGive = ETHER_ADDRESS\n\tconst amountGive = etherToWei((order.amount * order.price).toString())\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(buyOrderMaking())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make buy order', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const makeSellOrder = (order, account, web3, token, exchange, dispatch, callback) => {\n\tconst tokenGet = ETHER_ADDRESS\n\tconst amountGet = etherToWei((order.amount * order.price).toString())\n\tconst tokenGive = token.contract.options.address\n\tconst amountGive = tokensToWei(order.amount, token.decimals)\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(sellOrderMaking())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make sell order', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const cancelOrder = (order, account, exchange, dispatch, callback) => {\n\texchange.methods.cancelOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderCancelling())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not cancel order', error)\n\t\tcallback(false)\n\t})\n}\n\nexport const fillOrder = (order, account, exchange, dispatch, callback) => {\n\texchange.methods.fillOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderFilling())\n\t\tcallback(true)\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not fill order', error)\n\t\tcallback(false)\n\t})\n}","import React, { Component } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from './Notification'\nimport { \n  addToken,\n  selectToken\n} from '../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\n\nclass SideNav extends Component {\n\n  handleOnSelect = (row, isSelect) => {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    selectToken(row.tokenAddress, tokenList, account, exchange, web3, dispatch, (success) => {\n      if (!success) {\n        toast.notify(() => <Notification title=\"Could not select token\" type=\"danger\" />)\n      }\n    })\n  }\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    return (\n          <div id=\"layoutSidenav_nav\">\n            <nav className=\"sb-sidenav accordion sb-sidenav-light small\" id=\"sidenavAccordion\">\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                      { showTokens(this) }\n                    </div>\n                </div>\n                <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Add new ERC20 Token\n              </div>\n              <div className=\"card-body\">\n                  <Form noValidate onSubmit={(event) => {\n                    event.preventDefault()\n                    let tokenAddressInput = document.getElementById('newTokenAddressInput')\n                    addToken(tokenAddressInput.value, tokenList, web3, account, exchange, dispatch, (success) => {\n                      if (!success) {\n                        toast.notify(() => <Notification title=\"Could not add new token\" type=\"danger\" />)\n                      }\n                    })\n                  }}>\n                  <Form.Row>\n                    <Form.Group as={Col}>\n                      <Form.Control autoFocus name=\"tokenAddress\" placeholder=\"Token contract address\" id=\"newTokenAddressInput\" />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                      <Button variant=\"primary\" type=\"submit\">\n                        Add Token\n                      </Button>\n                    </Form.Group>\n                  </Form.Row>\n                </Form>\n              </div>\n            </div>\n            </nav>\n          </div>\n    )\n  }\n}\n\nfunction showTokens(component) {\n  const { \n    tokenList\n  } = component.props\n\n  const { SearchBar } = Search;\n\n  const tokens = tokenList.map((token) => {\n    return {\n      tokenAddress: token.tokenAddress,\n      symbol: token.symbol,\n      name: token.name,\n      decimals: token.decimals\n    }\n  });\n  const columns = [{\n    dataField: 'symbol',\n    text: 'Symbol',\n    sort: true\n  }, {\n    dataField: 'name',\n    text: 'Name',\n    sort: true\n  }, {\n    dataField: 'decimals',\n    text: 'Decimals'\n  }];\n\n  const selectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    hideSelectColumn: true,\n    bgColor: '#aaa',\n    onSelect: component.handleOnSelect\n  };\n\n  return (\n    <ToolkitProvider\n      keyField=\"symbol\"\n      data={ tokens }\n      columns={ columns }\n      search\n    >\n      {\n        props => (\n          <div>\n            <SearchBar { ...props.searchProps } placeholder='filter tokens'/>\n            <BootstrapTable\n              { ...props.baseProps }\n              selectRow={ selectRow }\n              classes=\"table table-sm\"\n              hover\n              condensed\n            />\n          </div>\n        )\n      }\n    </ToolkitProvider>\n\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(SideNav)\n","import React from 'react'\n\nexport default function ({ type }) {\n  if (type === 'table') {\n    return(<tbody className=\"spinner-grow text-dark text-center\"></tbody>)\n  } else {\n    return(\n    \t<div className=\"d-flex justify-content-center\">\n\t\t  <div className=\"spinner-grow text-dark text-center\" role=\"status\">\n\t\t    <span className=\"sr-only\">Loading...</span>\n\t\t  </div>\n\t\t</div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport {\n  tokenSelector,\n  depthChartSelector\n} from '../../store/selectors'\n\nam4core.useTheme(am4themes_animated);\n\nclass DepthChart extends Component {\n  componentDidMount() {\n      this.chart = this.props.showChart ? buildChart(this.props) : null;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (!this.props.showChart) {\n        return;\n    }\n\n    if ((oldProps.token === null && this.props.token !== null)\n        || ( oldProps.token !== null && this.props.token !== null && JSON.stringify(oldProps.token.symbol) !== JSON.stringify(this.props.token.symbol))) {\n        if (this.chart) {\n          this.chart.dispose();\n        }\n        this.chart = buildChart(this.props);\n        return;\n    }\n\n    if(JSON.stringify(oldProps.data) !== JSON.stringify(this.props.data)) {\n        this.chart.data = this.props.data;\n        return;\n    }\n  }\n\n  render() {\n    return (\n        <div>\n            { this.props.showChart ? <div id=\"chartdiv\" style={{ width: \"100%\", height: \"300px\" }} /> : <Spinner type=\"div\" /> }\n        </div>\n    )\n  }\n}\n\nfunction buildChart(props) {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = props.data;\n\n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    xAxis.renderer.minGridDistance = 50;\n    xAxis.title.text = `Price (ETH/${props.token.symbol})`;\n    xAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    xAxis.title.fill = am4core.color(\"#111\");\n\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = `${props.token.symbol} Volume`;\n    yAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    yAxis.title.fill = am4core.color(\"#111\");\n\n    // Create bid value series\n    let bidValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    bidValueSeries.dataFields.categoryX = \"value\";\n    bidValueSeries.dataFields.valueY = \"bidtotalvolume\";\n    bidValueSeries.strokeWidth = 2;\n    bidValueSeries.stroke = am4core.color(\"#0f0\");\n    bidValueSeries.fill = bidValueSeries.stroke;\n    bidValueSeries.fillOpacity = 0.1;\n    bidValueSeries.tooltipText = \"Bid: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidvolume}[/]\"\n\n    // Create ask value series\n    let askValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    askValueSeries.dataFields.categoryX = \"value\";\n    askValueSeries.dataFields.valueY = \"asktotalvolume\";\n    askValueSeries.strokeWidth = 2;\n    askValueSeries.stroke = am4core.color(\"#f00\");\n    askValueSeries.fill = askValueSeries.stroke;\n    askValueSeries.fillOpacity = 0.1;\n    askValueSeries.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{askvolume}[/]\"\n\n    // Create bid volume series\n    let bidVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    bidVolumeSeries.dataFields.categoryX = \"value\";\n    bidVolumeSeries.dataFields.valueY = \"bidvolume\";\n    bidVolumeSeries.strokeWidth = 0;\n    bidVolumeSeries.fill = am4core.color(\"#aaa\");\n    bidVolumeSeries.fillOpacity = 0.2;\n\n    // Create ask volume series\n    let askVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    askVolumeSeries.dataFields.categoryX = \"value\";\n    askVolumeSeries.dataFields.valueY = \"askvolume\";\n    askVolumeSeries.strokeWidth = 0;\n    askVolumeSeries.fill = am4core.color(\"#aaa\");\n    askVolumeSeries.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n\n    return chart;\n}\n\nfunction mapStateToProps(state) {\n    const token = tokenSelector(state)\n    const depthChart = depthChartSelector(state)\n    const showChart = token !== null && depthChart !== null && depthChart.orders !== undefined\n\n  return {\n    showChart: showChart,\n    token: token,\n    data: showChart ? depthChart.orders : []\n  }\n}\n\nexport default connect(mapStateToProps)(DepthChart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Identicon from 'identicon.js'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport { \n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  orderBookLoadedSelector,\n  orderBookSelector\n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass MarketOrders extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          {this.props.buys ? 'Buy' : 'Sell'} Orders\n        </div>\n        <div className=\"card-body\">\n          { this.props.orderBookLoaded ? showOrders(this.props) : <Spinner type='div'/> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showOrders(props) {\n  const { orderBook, token, buys } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n          <th>{buys ? 'Buyer' : 'Seller'}</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n  const ownOrder = (account === order.user)\n\n  return (\n      <OverlayTrigger\n        key={order.id}\n        overlay={\n          <Tooltip id={order.id}>\n            {!ownOrder ? `Click here to ${order.orderFillAction} ${order.user}` : `Cannot ${order.orderFillAction} yourself`}\n          </Tooltip>\n        }\n      >\n      <tr key={order.id}\n          className=\"order-book-order\"\n            onClick={(e) => {\n              if (!ownOrder) {\n                fillOrder(order, account, exchange, dispatch, (success) => {\n                  if (!success) {\n                    toast.notify(() => <Notification title=\"Could not fill order\" type=\"danger\" />)\n                  }\n                })\n              }\n            }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n        <td>\n          <img\n            className=\"ml-2\"\n            width='15'\n            height='15'\n            src={`data:image/png;base64,${new Identicon(order.user, 15).toString()}`}\n            alt=\"\"\n          />\n        </td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const token = tokenSelector(state)\n  return {\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: token,\n    orderBookLoaded: token && orderBookLoadedSelector(state),\n    orderBook: orderBookSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(MarketOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport { \n  makeBuyOrder\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  buyOrderSelector\n} from '../../store/selectors'\nimport { \n  buyOrderAmountChanged,\n  buyOrderPriceChanged\n} from '../../store/actions'\n\nclass NewBuyOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Buy\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    buyOrder,\n    showBuyTotal,\n    dispatch\n  } = props\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeBuyOrder(buyOrder, account, web3, token, exchange, dispatch, (success) => {\n        if (!success) {\n          toast.notify(() => <Notification title=\"Could not make buy-order\" type=\"danger\" />)\n        }\n      })\n    }}>\n      <div className=\"form-group small\">\n        <label>Buy Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Amount\"\n            onChange={(e) => {dispatch(buyOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Buy Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Price\"\n            onChange={(e) => {dispatch(buyOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Buy Order</button>\n      { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    buyOrder,\n    showForm: token && !buyOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewBuyOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport {\n  makeSellOrder \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  sellOrderSelector\n} from '../../store/selectors'\nimport {\n  sellOrderAmountChanged,\n  sellOrderPriceChanged\n} from '../../store/actions'\n\nclass NewSellOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Sell\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    sellOrder,\n    showSellTotal,\n    dispatch\n  } = props\n  return (\n    \n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeSellOrder(sellOrder, account, web3, token, exchange, dispatch, (success) => {\n        if (!success) {\n          toast.notify(() => <Notification title=\"Could not make sell-order\" type=\"danger\" />)\n        }\n      })\n    }}>\n      <div className=\"form-group small\">\n        <label>Sell Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Amount\"\n            onChange={(e) => {dispatch(sellOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Sell Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Price\"\n            onChange={(e) => {dispatch(sellOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Sell Order</button>\n      { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const sellOrder = sellOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    sellOrder,\n    showForm: token && !sellOrder.making,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewSellOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport { \n  myOpenOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass MyOrders extends Component {\n\n  render() {\n    return (\n        <div className=\"card bg-light text-dark\">\n          <div className=\"card-header\">\n            My Orders\n          </div>\n          <div className=\"card-body\">\n            { this.props.myOpenOrdersLoaded ? showMyOpenOrders(this.props) : <Spinner type=\"div\" /> }\n          </div>\n        </div>\n    )\n  }\n}\n\nfunction showMyOpenOrders(props) {\n  const { myOpenOrders, dispatch, exchange, account, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Amount</th>\n          <th>ETH/{token.symbol}</th>\n          <th>Cancel</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myOpenOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td \n                className=\"text-muted cancel-order\"\n                onClick={(e) => {\n                  cancelOrder(order, account, exchange, dispatch, (success) => {\n                    if (!success) {\n                      toast.notify(() => <Notification title=\"Could not cancel order\" type=\"danger\" />)\n                    }\n                  })\n                }}>x</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myOpenOrdersLoaded: !tokenLoading && myOpenOrdersLoaded && !orderCancelling,\n    myOpenOrders: myOpenOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport DepthChart from './orders/DepthChart'\nimport MarketOrders from './orders/MarketOrders'\nimport NewBuyOrder from './orders/NewBuyOrder'\nimport NewSellOrder from './orders/NewSellOrder'\nimport MyOrders from './orders/MyOrders'\n\nclass Orders extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <DepthChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <MarketOrders buys={false} />\n          </Col>\n          <Col sm={6}>\n            <MarketOrders buys={true} />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <NewBuyOrder />\n          </Col>\n          <Col sm={6}>\n            <NewSellOrder />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyOrders />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Orders)\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'react-apexcharts'\nimport Spinner from '../Spinner'\nimport { chartOptions } from './PriceChart.config'\nimport { \n  tokenSelector,\n  tokenLoadingSelector,\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../../store/selectors'\n\nclass PriceChart extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { this.props.priceChartLoaded ? showPriceChart(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showPriceChart = (props) => {\n  const {token, priceChart} = props\n\n  return (\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>ETH/{token.symbol} &nbsp; { priceSymbol(priceChart.lastPriceChange) } &nbsp; { priceChart.lastPrice }</h4>\n      </div>\n      <Chart options={chartOptions} series={priceChart.series} type='candlestick' width='100%' height='200px'/>\n    </div>\n  )\n}\n\nconst priceSymbol = (priceChange) => {\n  let output\n  if (priceChange === '+') {\n    output = <span className=\"text-success\">&#9650;</span>\n  } else {\n    output = <span className=\"text-danger\">&#9660;</span>\n  }\n  return output\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const priceChartLoaded = priceChartLoadedSelector(state)\n    \n  return {\n    token: tokenSelector(state),\n    priceChartLoaded: priceChartLoaded && !tokenLoading,\n    priceChart: priceChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  myFilledOrdersSelector,\n  myFilledOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector\n} from '../../store/selectors'\n\nclass MyTrades extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          My Trades\n        </div>\n        <div className=\"card-body\">\n          { this.props.myFilledOrdersLoaded ? showMyFilledOrders(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showMyFilledOrders(props) {\n  const { myFilledOrders, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myFilledOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myFilledOrdersLoaded: !tokenLoading && myFilledOrdersLoadedSelector(state),\n    myFilledOrders: myFilledOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport {\n  contractsLoadedSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  filledOrdersLoadedSelector,\n  filledOrdersSelector \n} from '../../store/selectors'\n\nclass MarketTrades extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n        { this.props.contractsLoaded ?\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Market Trades\n              </div>\n              <div className=\"card-body\">\n                <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n                    <thead>\n                      <tr>\n                        <th>Time</th>\n                        <th>{this.props.token.symbol}</th>\n                        <th>ETH/{this.props.token.symbol}</th>\n                      </tr>\n                    </thead>\n                    { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" /> }\n                  </table>\n              </div>\n            </div>\n          :\n          <Spinner type=\"div\" />\n        }\n      </div>\n    )\n  }\n}\n\nfunction showFilledOrders(orders) {\n  return (\n    <tbody>\n    { orders.map((order) => {\n        return (\n            <tr key={order.id} className={`order-${order.id}`}>\n              <td className=\"text-muted\">{order.formattedTimestamp}</td>\n              <td>{order.tokenAmount}</td>\n              <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n            </tr>\n        )\n      })\n    }\n    </tbody>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const filledOrdersLoaded = filledOrdersLoadedSelector(state)\n\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    token: tokenSelector(state),\n    filledOrdersLoaded: filledOrdersLoaded && !tokenLoading,\n    filledOrders: filledOrdersSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport PriceChart from './trades/PriceChart'\nimport MyTrades from './trades/MyTrades'\nimport MarketTrades from './trades/MarketTrades'\n\nclass Trades extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <PriceChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyTrades />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MarketTrades />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Trades)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport { \n  depositEther,\n  withdrawEther\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  etherBalanceSelector,\n  exchangeEtherBalanceSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              ETH\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    account,\n    etherBalance,\n    exchangeEtherBalance,\n    dispatch,\n    etherDepositAmount,\n    etherWithdrawAmount\n  } = props\n\n  return(\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>Wallet</th>\n          <th>Exchange</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{etherBalance}</td>\n          <td>{exchangeEtherBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositEther(etherDepositAmount, account, web3, exchange, dispatch, (success) => {\n                if (!success) {\n                  toast.notify(() => <Notification title=\"Could not deposit ETH\" type=\"danger\" />)\n                }\n              })\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {dispatch(etherDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" id=\"deposit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              \n              withdrawEther(etherWithdrawAmount, account, web3, exchange, dispatch, (success) => {\n                if (!success) {\n                  toast.notify(() => <Notification title=\"Could not withdraw ETH\" type=\"danger\" />)\n                }\n              })\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {\n                      dispatch(etherWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from '../Notification'\nimport Spinner from '../Spinner'\nimport { \n  depositToken,\n  withdrawToken \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  tokenBalanceSelector,\n  exchangeTokenBalanceSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              { this.props.token.symbol }\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    tokenBalance,\n    exchangeTokenBalance,\n    dispatch,\n    tokenDepositAmount,\n    tokenWithdrawAmount\n  } = props\n  return(\n    <table className=\"table table-light table-sm small\">\n      \n      <tbody>\n        <tr>\n          <td>{tokenBalance}</td>\n          <td>{exchangeTokenBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositToken(tokenDepositAmount, account, web3, token, exchange, dispatch, (success) => {\n                if (!success) {\n                  toast.notify(() => <Notification title={`Could not deposit ${token.symbol}`} type=\"danger\" />)\n                }\n              })\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {dispatch(tokenDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              withdrawToken(tokenWithdrawAmount, account, web3, token, exchange, dispatch, (success) => {\n                if (!success) {\n                  toast.notify(() => <Notification title={`Could not withdraw ${token.symbol}`} type=\"danger\" />)\n                }\n              })\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {\n                      dispatch(tokenWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-0\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport ETHFunds from './funds/ETHFunds'\nimport TokenFunds from './funds/TokenFunds'\n\nclass Funds extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <ETHFunds />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <TokenFunds />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Funds)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Orders from './Orders'\nimport Trades from './Trades'\nimport Funds from './Funds'\n\nclass Content extends Component {\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Tabs defaultActiveKey=\"orders\" className=\"bg-light text-dark\">\n          <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-light\">\n            <Orders />\n          </Tab>\n          <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-light\">\n            <Trades />\n          </Tab>\n          <Tab eventKey=\"funds\" title=\"Funds\" className=\"bg-light\">\n            <Funds />\n          </Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Content)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport Notification from './Notification'\nimport TopNav from './TopNav'\nimport SideNav from './SideNav'\nimport Content from \"./Content\"\nimport { \n  loadWeb3, \n  loadAccount,\n  loadExchange,\n  selectToken\n} from '../store/interactions'\nimport { \n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  contractsLoadedSelector, \n  sideNavShowSelector, \n  tokenSelector, \n  tokenListSelector\n} from '../store/selectors'\nimport { web3AccountLoaded } from '../store/actions'\n\nclass App extends Component {\n  state = {};\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      token,\n      tokenList,\n      account,\n      exchange,\n      web3,\n      dispatch\n    } = props\n\n    if (token === null && tokenList.length > 0) {\n      selectToken(tokenList[0].tokenAddress, tokenList, account, exchange, web3, dispatch, (success) => {\n        if (!success) {\n          toast.notify(() => <Notification title=\"Could not select token\" type=\"danger\" />)\n        }\n      })\n    }\n\n    return state\n  }\n\n  render() {\n\n    if (!this.props.exchange) {\n      return (\n        <Container>\n          <Row>\n            <Col sm={12}>\n              <div className=\"card bg-light text-dark\">\n                <div className=\"card-header\">\n                  Welcome to the Kouga ERC20 DEX\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              { (typeof window.ethereum !== 'undefined') ?\n                  <div className=\"card bg-light text-dark\">\n                    <div className=\"card-header\">\n                      Please connect with Metamask\n                      Then select either Ropsten or Rinkeby network\n                    </div>\n                    <div className=\"card-body\">\n                      <LoadingButton props={this.props}/>\n                    </div>\n                  </div>\n                :\n                  <div className=\"card bg-light text-dark\">\n                    <div className=\"card-header\">\n                      Please install <a href=\"http://metamask.io\" target=\"_blank\" rel=\"noopener noreferrer\">Metamask</a>\n                    </div>\n                  </div>\n                }\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n\n    return (\n      <div className={`sb-nav-fixed ${this.props.sideNavShow ? \"\" : \"sb-sidenav-toggled\"}`}>\n\n        <TopNav/>\n\n        <div id=\"layoutSidenav\">\n          <SideNav/>\n          <div id=\"layoutSidenav_content\">\n            <main>\n              <div className=\"container-fluid\">\n                <Content />\n              </div>\n            </main>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nfunction LoadingButton(props) {\n\n  const handleClick = () => connectMetamask(props.props);\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={handleClick}\n    >\n      Connect Metamask\n    </Button>\n  );\n}\n\nconst connectMetamask = async (props) => {\n  const { dispatch } = props\n\n  await window.ethereum.enable()\n\n  try {\n    const web3 = loadWeb3(dispatch)\n\n    window.ethereum.on('accountsChanged', function (accounts) {\n      dispatch(web3AccountLoaded(accounts[0]))\n    })\n\n    window.ethereum.on('chainChanged', () => {\n      document.location.reload()\n    })\n\n    // Acccounts now exposed\n    const account = await loadAccount(web3, dispatch)\n    console.log('account', account)\n\n    const network = await web3.eth.net.getNetworkType()\n    console.log('network', network)\n    const networkId = await web3.eth.net.getId()\n    console.log('network id', networkId)\n\n    const exchange = await loadExchange(web3, networkId, dispatch)\n    if (!exchange) {\n      return;\n    }\n  } catch(e) {\n    console.log(e)\n    return;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    contractsLoaded: contractsLoadedSelector(state),\n    sideNavShow: sideNavShowSelector(state),\n    token: tokenSelector(state),\n    tokenList: tokenListSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux'\n\nfunction app (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase 'SIDE_NAV_SHOW_HIDE_TOGGLED':\n\t\t\tlet show = state.sideNavShow\n\t\t\tif (show === null || show === undefined) {\n\t\t\t\tshow = true\n\t\t\t}\n\t\t\treturn {...state, sideNavShow: !show}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction web3 (state = {}, action ) {\n\tswitch (action.type) {\n\t\tcase 'WEB3_LOADED':\n\t\t\treturn { ...state, connection: action.connection }\n\t\tcase 'WEB3_ACCOUNT_LOADED':\n\t\t\treturn { ...state, account: action.account }\n\t\tcase 'ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, balance: action.balance}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction exchange (state = {}, action ) {\n\tlet index\n\tlet data\n\tswitch (action.type) {\n\t\tcase 'EXCHANGE_LOADED':\n\t\t\treturn { ...state, loaded: true, contract: action.contract, tokens: {data: []}, token: null }\n\t\tcase 'TOKEN_ADDED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.tokens.data.findIndex(token => token.tokenAddress === action.token.tokenAddress || token.symbol === action.token.symbol)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.tokens.data, action.token]\n\t\t\t} else {\n\t\t\t\tdata = state.tokens.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\ttokens: {\n\t\t\t\t\t...state.tokens,\n\t\t\t\t\tdata\n\t\t\t\t}\n\t\t\t}\n\t\tcase 'SELECTING_TOKEN': \n\t\t\treturn { ...state, tokenLoading: true }\n\t\tcase 'TOKEN_SELECTED':\n\t\t\treturn { ...state, token: action.token, tokenLoading: false }\n\t\tcase 'TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, tokenBalance: action.balance}\n\t\tcase 'EXCHANGE_ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeEtherBalance: action.balance}\n\t\tcase 'EXCHANGE_TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeTokenBalance: action.balance}\n\t\tcase 'BALANCES_LOADING':\n\t\t\treturn { ...state, balancesLoading: true} \n\t\tcase 'BALANCES_LOADED':\n\t\t\treturn { ...state, balancesLoading: false} \n\t\tcase 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherDepositAmount: action.amount} \n\t\tcase 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherWithdrawAmount: action.amount} \n\t\tcase 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenDepositAmount: action.amount} \n\t\tcase 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenWithdrawAmount: action.amount}\n\t\tcase 'BUY_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: action.amount } } \n\t\tcase 'BUY_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, price: action.price } } \n\t\tcase 'BUY_ORDER_MAKING':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: null, price: null, making: true } } \n\t\tcase 'SELL_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: action.amount } } \n\t\tcase 'SELL_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, price: action.price } } \n\t\tcase 'SELL_ORDER_MAKING':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: null, price: null, making: true } } \n\t\tcase 'ORDER_MADE':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.allOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.allOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.allOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\tbuyOrder: {\n\t\t\t\t\t...state.buyOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tsellOrder: {\n\t\t\t\t\t...state.sellOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tallOrders: {\n\t\t\t\t\t...state.allOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tcase 'CANCELLED_ORDERS_LOADED':\n\t\t\treturn { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }}\n\t\tcase 'FILLED_ORDERS_LOADED':\n\t\t\treturn { ...state, filledOrders: {loaded: true, data: action.filledOrders }} \n\t\tcase 'ALL_ORDERS_LOADED':\n\t\t\treturn { ...state, allOrders: {loaded: true, data: action.allOrders }} \n\t\tcase 'ORDER_CANCELLING':\n\t\t\treturn { ...state, orderCancelling: true} \n\t\tcase 'ORDER_CANCELLED':\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderCancelling: false,\n\t\t\t\tcancelledOrders: {\n\t\t\t\t\t...state.cancelledOrders,\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t...state.cancelledOrders.data,\n\t\t\t\t\t\taction.order\n\t\t\t\t\t]\n\t\t\t\t}} \n\t\tcase 'ORDER_FILLING':\n\t\t\treturn { ...state, orderFilling: true} \n\t\tcase 'ORDER_FILLED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.filledOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.filledOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.filledOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderFilling: false,\n\t\t\t\tfilledOrders: {\n\t\t\t\t\t...state.filledOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tapp,\n\tweb3,\n\texchange\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// for reduc devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore ( preloadedState ) {\n\treturn createStore (\n\t\trootReducer,\n\t\tpreloadedState,\n\t\tcomposeEnhancers (applyMiddleware (...middleware, loggerMiddleware))\n\t)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store = {configureStore()}>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}