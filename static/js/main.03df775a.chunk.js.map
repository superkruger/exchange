{"version":3,"sources":["components/Spinner.js","store/actions.js","helpers.js","store/interactions.js","store/selectors.js","components/Settings.js","components/Home.js","components/market/DepthChart.js","components/market/MarketOrderBook.js","components/market/PriceChart.config.js","components/market/PriceChart.js","components/market/MarketTrades.js","components/buy/SellOrders.js","components/buy/NewBuyOrder.js","components/sell/BuyOrders.js","components/sell/NewSellOrder.js","components/portfolio/PortfolioOrders.js","components/portfolio/PortfolioTrades.js","components/funds/FundsBalance.js","components/Routes.js","components/TopNav.js","components/SideNav.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["type","className","role","web3AccountLoaded","account","tokenAdded","token","tokenSelected","tokenBalanceLoaded","balance","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","cancelledOrdersLoaded","cancelledOrders","filledOrdersLoaded","filledOrders","allOrdersLoaded","allOrders","ETHER_ADDRESS","GREEN","RED","weiToEther","wei","weiToTokens","tokenDecimals","etherToWei","e","toString","tokensToWei","t","formatEtherBalance","Math","round","formatTokenBalance","decimals","loadWeb3","dispatch","web3","Web3","window","givenProvider","connection","loadAccount","a","eth","getAccounts","accounts","loadExchange","networkId","Contract","Exchange","abi","networks","address","exchange","contract","subscribeToExchangeEvents","loadAllTokens","console","log","getPastEvents","fromBlock","tokenStream","map","event","returnValues","events","TokenAdded","error","subscribeToTokenEvents","tokenAddress","Cancel","filter","tokenGet","tokenGive","order","Trade","Deposit","Withdraw","Order","loadAllOrders","cancelStream","tradeStream","orderStream","addToken","tokens","findIndex","Token","tokenContract","checkContractFunction","methods","call","name","symbol","options","send","from","functionSignature","undefined","selectToken","index","loadBalances","getBalance","etherBalance","balanceOf","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","fillOrder","id","on","hash","alert","sideNavShowSelector","createSelector","state","get","s","accountSelector","web3Selector","w","exchangeLoaded","exchangeSelector","el","tokenListSelector","tokenSelector","tokenLoadingSelector","contractsLoadedSelector","balancesLoadingSelector","l","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","o","sellOrderSelector","col","orders","filledOrdersLoadedSelector","fol","filledOrdersSelector","sort","b","timestamp","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","amountGive","amountGet","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","orderId","openOrders","all","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","depthChartSelector","decorateWithVolume","concat","value","prevPrice","res","i","length","volume","totalvolume","dp","push","myFilledOrdersLoadedSelector","myFilledOrdersSelector","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","loaded","priceChartSelector","secondLastOrder","lastOrder","slice","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","close","low","minBy","high","maxBy","x","Date","y","orderCancellingSelector","c","orderFillingSelector","f","Settings","this","loadBlockchainData","props","tokenList","Form","noValidate","onSubmit","preventDefault","tokenAddressInput","document","getElementById","Row","Group","as","Col","Control","autoFocus","placeholder","controlId","Button","variant","width","key","showTokens","Component","connect","Home","am4core","am4themes_animated","DepthChart","chart","am4charts","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","title","text","priceTitle","labels","template","fill","yAxis","yAxes","volumeTitle","bidValueSeries","categoryX","valueY","strokeWidth","stroke","fillOpacity","tooltipText","askValueSeries","bidVolumeSeries","askVolumeSeries","cursor","dispose","oldProps","JSON","stringify","style","height","MarketOrderBook","buys","orderBook","Container","sm","depthChart","showDepthChart","showOrders","showOrderBook","Spinner","OverlayTrigger","placement","overlay","Tooltip","onClick","renderOrder","orderFilling","chartOptions","animations","enabled","toolbar","show","tooltip","theme","fontSize","fontFamily","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","PriceChart","priceChartLoaded","showPriceChart","priceChart","priceSymbol","priceChange","tokenLoading","MarketTrades","contractsLoaded","SellOrders","showOrderTable","NewBuyOrder","showForm","buyOrder","showBuyTotal","amount","price","makeOrder","makeBuyOrder","onChange","target","required","making","BuyOrders","NewSellOrder","sellOrder","showSellTotal","makeSellOrder","PortfolioOrders","myOpenOrdersLoaded","myOpenOrders","cellspacing","cancelOrder","showMyOpenOrders","orderCancelling","PortfolioTrades","myFilledOrdersLoaded","myFilledOrders","showMyFilledOrders","FundsBalance","etherDepositAmount","etherWithdrawAmount","tokenDepositAmount","tokenWithdrawAmount","Tabs","defaultActiveKey","Tab","eventKey","depositEther","approve","depositToken","withdrawEther","withdrawToken","balancesLoading","Routes","path","exact","component","TopNav","toggleSidenav","bind","CustomToggle","React","forwardRef","ref","children","href","CustomMenu","labeledBy","useState","setValue","aria-labelledby","FormControl","Children","toArray","child","toLowerCase","startsWith","to","Dropdown","Toggle","Menu","Item","onSelect","eKey","renderTokenSelect","data-toggle","aria-haspopup","aria-expanded","src","Identicon","alt","Navigation","data-target","aria-controls","data-parent","App","ethereum","enable","location","reload","net","getNetworkType","network","getId","sideNavShow","SideNav","process","rootReducer","combineReducers","app","action","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","Boolean","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.03df775a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ({ type }) {\n  if (type === 'table') {\n    return(<tbody className=\"spinner-grow text-dark text-center\"></tbody>)\n  } else {\n    return(\n    \t<div className=\"d-flex justify-content-center\">\n\t\t  <div className=\"spinner-grow text-dark text-center\" role=\"status\">\n\t\t    <span className=\"sr-only\">Loading...</span>\n\t\t  </div>\n\t\t</div>\n    )\n  }\n}","export function web3Loaded(connection) {\n\treturn {\n\t\ttype: 'WEB3_LOADED',\n\t\tconnection\n\t}\n}\n\nexport function web3AccountLoaded(account) {\n\treturn {\n\t\ttype: 'WEB3_ACCOUNT_LOADED',\n\t\taccount\n\t}\n}\n\nexport function exchangeLoaded(contract) {\n\treturn {\n\t\ttype: 'EXCHANGE_LOADED',\n\t\tcontract\n\t}\n}\n\nexport function tokenAdded(token) {\n\treturn {\n\t\ttype: 'TOKEN_ADDED',\n\t\ttoken\n\t}\n}\n\nexport function selectingToken() {\n\treturn {\n\t\ttype: 'SELECTING_TOKEN'\n\t}\n}\n\nexport function tokenSelected(token) {\n\treturn {\n\t\ttype: 'TOKEN_SELECTED',\n\t\ttoken\n\t}\n}\n\nexport function etherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function tokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function balancesLoading() {\n\treturn {\n\t\ttype: 'BALANCES_LOADING'\n\t}\n}\n\nexport function balancesLoaded() {\n\treturn {\n\t\ttype: 'BALANCES_LOADED'\n\t}\n}\n\nexport function etherDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'BUY_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'BUY_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function buyOrderMaking() {\n\treturn {\n\t\ttype: 'BUY_ORDER_MAKING'\n\t}\n}\n\nexport function sellOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'SELL_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function sellOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'SELL_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function sellOrderMaking() {\n\treturn {\n\t\ttype: 'SELL_ORDER_MAKING'\n\t}\n}\n\nexport function orderMade(order) {\n\treturn {\n\t\ttype: 'ORDER_MADE',\n\t\torder\n\t}\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n\treturn {\n\t\ttype: 'CANCELLED_ORDERS_LOADED',\n\t\tcancelledOrders\n\t}\n}\n\n\nexport function filledOrdersLoaded(filledOrders) {\n\treturn {\n\t\ttype: 'FILLED_ORDERS_LOADED',\n\t\tfilledOrders\n\t}\n}\n\n\nexport function allOrdersLoaded(allOrders) {\n\treturn {\n\t\ttype: 'ALL_ORDERS_LOADED',\n\t\tallOrders\n\t}\n}\n\nexport function orderCancelling() {\n\treturn {\n\t\ttype: 'ORDER_CANCELLING'\n\t}\n}\n\nexport function orderCancelled(order) {\n\treturn {\n\t\ttype: 'ORDER_CANCELLED',\n\t\torder\n\t}\n}\n\nexport function orderFilling() {\n\treturn {\n\t\ttype: 'ORDER_FILLING'\n\t}\n}\n\nexport function orderFilled(order) {\n\treturn {\n\t\ttype: 'ORDER_FILLED',\n\t\torder\n\t}\n}\n\nexport function sideNavShowHideToggled() {\n\treturn {\n\t\ttype: 'SIDE_NAV_SHOW_HIDE_TOGGLED'\n\t}\n}","export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const DECIMALS = 18\n\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const weiToEther = (wei) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** DECIMALS))\n\t}\n}\n\nexport const weiToTokens = (wei, tokenDecimals) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** tokenDecimals))\n\t}\n}\n\nexport const etherToWei = (e) => {\n\tif (e) {\n\t\treturn (e * (10 ** DECIMALS)).toString()\n\t}\n}\n\nexport const tokensToWei = (t, tokenDecimals) => {\n\tif (t) {\n\t\treturn (t * (10 ** tokenDecimals)).toString()\n\t}\n}\n\nexport const formatEtherBalance = (balance) => {\n\tconst precision = 100\n\tbalance = weiToEther(balance)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}\n\nexport const formatTokenBalance = (balance, decimals) => {\n\tconst precision = 100\n\tbalance = weiToTokens(balance, decimals)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}","import Web3 from 'web3'\nimport Exchange from '../contracts/abis/Exchange.json'\nimport Token from '../contracts/abis/Token18.json'\nimport { \n\tweb3Loaded,\n\tweb3AccountLoaded,\n\texchangeLoaded,\n\tnetworkIdSet,\n\ttokenAdded,\n\tselectingToken,\n\ttokenSelected,\n\tetherBalanceLoaded,\n\ttokenBalanceLoaded,\n\texchangeEtherBalanceLoaded,\n\texchangeTokenBalanceLoaded,\n\tbalancesLoading,\n\tbalancesLoaded,\n\tbuyOrderMaking,\n\tsellOrderMaking,\n\torderMade,\n\tcancelledOrdersLoaded,\n\tfilledOrdersLoaded,\n\tallOrdersLoaded,\n\torderCancelling,\n\torderCancelled,\n\torderFilling,\n\torderFilled\n} from './actions.js'\nimport { ETHER_ADDRESS, tokensToWei, etherToWei } from '../helpers'\n\nexport const loadWeb3 = (dispatch) => {\n\tconst web3 = new Web3(window['ethereum'] || Web3.givenProvider || 'http://127.0.0.1:7545');\n\tdispatch(web3Loaded(web3))\n\treturn web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n\tconst accounts = await web3.eth.getAccounts()\n\tconst account = accounts[0]\n\tdispatch(web3AccountLoaded(account))\n\treturn account\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n\ttry {\n\t\tconst exchange = await new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address)\n\t\tdispatch(exchangeLoaded(exchange))\n\t\tsubscribeToExchangeEvents(exchange, dispatch)\n\n\t\tawait loadAllTokens(exchange, dispatch)\n\t\treturn exchange\n\t} catch (error) {\n\t\tconsole.log('Contract not deployed to the current network', error)\n\t\treturn null\n\t}\n}\n\nexport const loadAllTokens = async (exchange, dispatch) => {\n\ttry {\n\t\tconst tokenStream = await exchange.getPastEvents('TokenAdded', {fromBlock: 0})\n\t\tconst tokens = tokenStream.map((event) => dispatch(tokenAdded(event.returnValues)))\n\t} catch (error) {\n\t\tconsole.log('Could not get token stream')\n\t\treturn null\n\t}\n}\n\nexport const subscribeToExchangeEvents = async (exchange, dispatch) => {\n\texchange.events.TokenAdded({}, (error, event) => {\n\t\tdispatch(tokenAdded(event.returnValues))\n\t})\n}\n\nexport const subscribeToTokenEvents = async (tokenAddress, exchange, dispatch) => {\n\texchange.events.Cancel({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderCancelled(event.returnValues))\n\t})\n\texchange.events.Trade({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderFilled(event.returnValues))\n\t})\n\texchange.events.Deposit({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(balancesLoaded())\n\t})\n\texchange.events.Withdraw({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(balancesLoaded())\n\t})\n\texchange.events.Order({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderMade(event.returnValues))\n\t})\n}\n\nexport const loadAllOrders = async (tokenAddress, exchange, dispatch) => {\n\ttry {\n\t\tconst cancelStream = await exchange.getPastEvents(\n\t\t\t'Cancel', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst cancelledOrders = cancelStream.map((event) => event.returnValues)\n\t\tdispatch(cancelledOrdersLoaded(cancelledOrders))\n\n\t\tconst tradeStream = await exchange.getPastEvents(\n\t\t\t'Trade', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst filledOrders = tradeStream.map((event) => event.returnValues)\n\t\tdispatch(filledOrdersLoaded(filledOrders))\n\n\t\tconst orderStream = await exchange.getPastEvents(\n\t\t\t'Order', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst allOrders = orderStream.map((event) => event.returnValues)\n\t\tdispatch(allOrdersLoaded(allOrders))\n\t} catch (error) {\n\t\tconsole.log('Could not get order streams')\n\t\treturn null\n\t}\n}\n\nexport const addToken = async (tokenAddress, tokens, web3, account, exchange, dispatch) => {\n\ttry {\n\t\t// check if not already present\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tif (index !== -1) {\n\t\t\tthrow \"allready present\" \n\t\t}\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress)\n\n\t\t// check if really ERC20\n\t\tcheckContractFunction(tokenContract, 'name()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'symbol()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'decimals()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'totalSupply()')\n\t\tcheckContractFunction(tokenContract, 'balanceOf(address)')\n\t\tcheckContractFunction(tokenContract, 'transfer(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'transferFrom(address,address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'approve(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'allowance(address,address)')\n\n\t\tconst decimals = await tokenContract.methods.decimals().call()\n\t\tconst name = await tokenContract.methods.name().call()\n\t\tconst symbol = await tokenContract.methods.symbol().call()\n\n\t\tconsole.log(\"addToken\", tokenAddress, tokenContract.options.address)\n\t\tconsole.log(\"exchange\", exchange.options.address)\n\n\t\texchange.methods.addToken(tokenAddress.toString(), name, symbol, decimals).send({from: account})\n\t} catch (error) {\n\t\tconsole.log('Could not add new token:', error)\n\t}\n}\n\nconst checkContractFunction = (contract, functionSignature) => {\n\tif (contract.methods[functionSignature] === undefined) {\n\t\tthrow \"Not an ERC20 token: \" + functionSignature\n\t}\n}\n\nexport const selectToken = async (tokenAddress, tokens, account, exchange, web3, dispatch) => {\n\ttry {\n\t\tdispatch(selectingToken())\n\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tlet token = tokens[index]\n\n\t\tconsole.log(\"tokenAddress\", token.tokenAddress)\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, token.tokenAddress)\n\t\ttoken.contract = tokenContract\n\t\tconsole.log(\"contract\", token.contract)\n\n\t\tawait loadBalances(account, exchange, token, web3, dispatch)\n\t\tawait loadAllOrders(tokenAddress, exchange, dispatch)\n\t\tsubscribeToTokenEvents(tokenAddress, exchange, dispatch)\n\n\t\tdispatch(tokenSelected(token))\n\t} catch (error) {\n\t\tconsole.log('Could not add new token', error)\n\t}\n}\n\nexport const loadBalances = async (account, exchange, token, web3, dispatch) => {\n\tdispatch(balancesLoading())\n\n\tconst etherBalance = await web3.eth.getBalance(account)\n\tdispatch(etherBalanceLoaded(etherBalance))\n\n\tconst tokenBalance = await token.contract.methods.balanceOf(account).call()\n\tdispatch(tokenBalanceLoaded(tokenBalance))\n\n\tconst exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n\tdispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n\tconst exchangeTokenBalance = await exchange.methods.balanceOf(token.contract.options.address, account).call()\n\tdispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n\tdispatch(balancesLoaded())\n}\n\nexport const depositEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.depositEther().send({from: account, value: etherToWei(amount)})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not deposit ether', error)\n\t\twindow.alert('Could not deposit ether')\n\t})\n}\n\nexport const withdrawEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.withdrawEther(etherToWei(amount)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw ether', error)\n\t\twindow.alert('Could not withdraw ether')\n\t})\n}\n\nexport const depositToken = (amount, account, web3, token, exchange, dispatch) => {\n\tamount = tokensToWei(amount, token.decimals)\n\n\ttoken.contract.methods.approve(exchange.options.address, amount).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\texchange.methods.depositToken(token.contract.options.address, amount).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tdispatch(balancesLoading())\n\t\t})\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not approve token deposit', error)\n\t\twindow.alert('Could not approve token deposit')\n\t})\n}\n\nexport const withdrawToken = (amount, account, web3, token, exchange, dispatch) => {\n\texchange.methods.withdrawToken(token.contract.options.address, tokensToWei(amount, token.decimals)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw token', error)\n\t\twindow.alert('Could not withdraw token')\n\t})\n}\n\nexport const makeBuyOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = token.contract.options.address\n\tconst amountGet = tokensToWei(order.amount, token.decimals)\n\tconst tokenGive = ETHER_ADDRESS\n\tconst amountGive = etherToWei((order.amount * order.price).toString())\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(buyOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make buy order', error)\n\t\twindow.alert('Could not make buy order')\n\t})\n}\n\nexport const makeSellOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = ETHER_ADDRESS\n\tconst amountGet = etherToWei((order.amount * order.price).toString())\n\tconst tokenGive = token.contract.options.address\n\tconst amountGive = tokensToWei(order.amount, token.decimals)\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(sellOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make sell order', error)\n\t\twindow.alert('Could not make sell order')\n\t})\n}\n\nexport const cancelOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.cancelOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderCancelling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not cancel order', error)\n\t\twindow.alert('Could not cancel order')\n\t})\n}\n\nexport const fillOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.fillOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderFilling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not fill order', error)\n\t\twindow.alert('Could not fill order')\n\t})\n}","import { get, reject, groupBy, minBy, maxBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, formatEtherBalance, formatTokenBalance, weiToEther, weiToTokens } from '../helpers'\nimport { tokenSelected } from './actions'\n\nconst sideNavShow = (state) => get(state, 'app.sideNavShow', true)\nexport const sideNavShowSelector = createSelector(sideNavShow, s => s)\n\nconst account = (state) => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nconst tokenList = state => get(state, 'exchange.tokens.data', [])\nexport const tokenListSelector = createSelector(tokenList, t => t)\n\nconst token = state => get(state, 'exchange.token', null)\nexport const tokenSelector = createSelector(token, t => t)\n\nconst tokenLoading = state => get(state, 'exchange.tokenLoading', true)\nexport const tokenLoadingSelector = createSelector(tokenLoading, t => t)\n\nexport const contractsLoadedSelector = createSelector(\n\texchangeLoaded,\n\ttoken,\n\t(el, t) => (el && t !== null)\n)\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, l => l)\n\nconst etherBalance = state => get(state, 'web3.balance')\nexport const etherBalanceSelector = createSelector(\n\tetherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst tokenBalance = state => get(state, 'exchange.tokenBalance')\nexport const tokenBalanceSelector = createSelector(\n\ttokenBalance, \n\ttoken,\n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst exchangeEtherBalance = state => get(state, 'exchange.exchangeEtherBalance')\nexport const exchangeEtherBalanceSelector = createSelector(\n\texchangeEtherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst exchangeTokenBalance = state => get(state, 'exchange.exchangeTokenBalance')\nexport const exchangeTokenBalanceSelector = createSelector(\n\texchangeTokenBalance,\n\ttoken, \n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, a => a)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, a => a)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, a => a)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, a => a)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, o => o)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, o => o)\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(\n\tcancelledOrders,\n\t(orders) => {\n\t\tconsole.log(orders)\n\t}\n)\n\n// Filled orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\t// sort ascending for price comparison\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = decorateFilledOrders(orders, token)\n\n\t\t// sort descending for display\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateFilledOrders = (orders, token) => {\n\tlet previousOrder = orders[0]\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateFilledOrder(order, previousOrder)\n\t\tpreviousOrder = order\n\t\treturn order\n\t})\n}\n\nconst decorateOrder = (order, token) => {\n\n\tlet etherAmount\n\tlet tokenAmount\n\n\tif (order.tokenGive === ETHER_ADDRESS) {\n\t\tetherAmount = order.amountGive\n\t\ttokenAmount = order.amountGet\n\t} else {\n\t\tetherAmount = order.amountGet\n\t\ttokenAmount = order.amountGive\n\t}\n\n\tetherAmount = weiToEther(etherAmount)\n\ttokenAmount = weiToTokens(tokenAmount, token ? token.decimals : 18)\n\n\tconst precision = 100000\n\tlet tokenPrice = (etherAmount / tokenAmount)\n\ttokenPrice = Math.round(tokenPrice * precision) / precision\n\n\treturn ({\n\t\t...order,\n\t\tetherAmount: etherAmount,\n\t\ttokenAmount: tokenAmount,\n\t\ttokenPrice,\n\t\tformattedTimestamp: moment.unix(order.timestamp).format('hh:mm:ss D/M/Y')\n\t})\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n\treturn ({\n\t\t...order,\n\t\ttokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n\t})\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n\t// show green if order price higher than previous\n\t// or if its the first order\n\tif (orderId === previousOrder.id) {\n\t\treturn GREEN\n\t}\n\tif (previousOrder.tokenPrice <= tokenPrice) {\n\t\treturn GREEN\n\t} else {\n\t\treturn RED\n\t}\n}\n\n// All orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\n\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\nconst openOrders = state => {\n\tconst all = allOrders(state)\n\tconst filled = filledOrders(state)\n\tconst cancelled = cancelledOrders(state)\n\n\tconst openOrders = reject(all, (order) => {\n\t\tconst orderFilled = filled.some((o) => o.id === order.id)\n\t\tconst orderCancelled = cancelled.some((o) => o.id === order.id)\n\t\treturn (orderFilled || orderCancelled)\n\t})\n\treturn openOrders\n}\n\nconst orderBookLoaded = state => allOrdersLoaded(state) && filledOrdersLoaded(state) && cancelledOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const orderBookSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// sort each group\n\t\tconst buyOrders = get(orders, 'buy', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tbuyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n\t\t}\n\n\t\tconst sellOrders = get(orders, 'sell', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tsellOrders: sellOrders.sort((a,b) => a.tokenPrice - b.tokenPrice)\n\t\t}\n\t\treturn orders\n\t}\n)\n\nconst decorateOrderBookOrders = (orders, token) => {\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateOrderBookOrder(order)\n\t\treturn order\n\t})\n}\n\nconst decorateOrderBookOrder = (order) => {\n\tconst orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\treturn ({\n\t\t...order,\n\t\torderType,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderFillAction: (orderType === 'buy' ? 'sell' : 'buy')\n\t})\n}\n\nexport const depthChartSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// buys are sorted descending\n\t\tconst buyOrders = decorateWithVolume('bid', get(orders, 'buy', []).sort((a,b) => b.tokenPrice - a.tokenPrice))\n\t\t// sells are sorted ascending\n\t\tconst sellOrders = decorateWithVolume('ask', get(orders, 'sell', []).sort((a,b) => a.tokenPrice - b.tokenPrice))\n\n\t\torders = {\n\t\t\torders: buyOrders.\n\t\t\t\tconcat(sellOrders).\n\t\t\t\tsort((a,b) =>  a.value - b.value)\n\t\t}\n\n\t\treturn orders\n\t}\n)\n\nconst decorateWithVolume = (type, orders) => {\n\tlet res = []\n\tlet prevPrice\n\n\tfor(var i = 0; i < orders.length; i++) {\n\t\torders[i].volume = orders[i].tokenAmount;\n        \n        if (i === 0) {\n        \torders[i].totalvolume = orders[i].tokenAmount;\n        }\n        else {\n        \tif (prevPrice === orders[i].tokenPrice) {\n        \t\torders[i].volume = orders[i-1].volume + orders[i].tokenAmount\n        \t}\n          \torders[i].totalvolume = orders[i-1].totalvolume + orders[i].tokenAmount;\n        }\n\n        // aggregate orders with the same price\n        if (prevPrice !== orders[i].tokenPrice) {\n        \tlet dp = {};\n\t        dp[\"value\"] = orders[i].tokenPrice;\n\t        dp[type + \"volume\"] = orders[i].volume;\n\t        dp[type + \"totalvolume\"] = orders[i].totalvolume;\n\n        \tres.push(dp);\n    \t} else {\n    \t\tres[res.length - 1][type + \"volume\"] = orders[i].volume;\n    \t\tres[res.length - 1][type + \"totalvolume\"] = orders[i].totalvolume;\n    \t}\n\n        prevPrice = orders[i].tokenPrice\n     }\n\n     return res\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nexport const myFilledOrdersSelector = createSelector(\n\taccount,\n\tfilledOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account || o.userFill === account)\n\t\torders = decorateMyFilledOrders(orders, account, token)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyFilledOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyFilledOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n\tconst myOrder = order.user === account\n\n\tlet orderType\n\tif (myOrder) {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\t} else {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n\t}\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderSign: (orderType === 'buy' ? '+' : '-')\n\t})\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const myOpenOrdersSelector = createSelector(\n\taccount,\n\topenOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account)\n\t\torders = decorateMyOpenOrders(orders, account, token)\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyOpenOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyOpenOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n\tlet orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED)\n\t})\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = orders.map((o) => decorateOrder(o, token))\n\n\t\t// get last two orders for final price\n\t\tlet secondLastOrder, lastOrder\n\t\t[secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n\t\tconst lastPrice = get(lastOrder, 'tokenPrice', 0)\n\t\tconst secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\t\treturn ({\n\t\t\tlastPrice,\n\t\t\tlastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n\t\t\tseries: [{\n\t\t\t\tdata: buildGraphData(orders)\n\t\t\t}]\n\t\t})\n\t}\n)\n\nexport const buildGraphData = (orders) => {\n\n\t// group by hour\n\torders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n\n\t// get each hour with data\n\tconst hours = Object.keys(orders)\n\n\tconst graphData = hours.map((hour) => {\n\t\t// calculate open, high, low, close for the hour\n\t\tconst group = orders[hour]\n\t\tconst open = group[0]\n\t\tconst close = group[group.length - 1]\n\t\tconst low = minBy(group, 'tokenPrice')\n\t\tconst high = maxBy(group, 'tokenPrice')\n\n\t\treturn ({\n\t\t\tx: new Date(hour),\n\t\t\ty: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n\t\t})\n\t})\n\n\treturn graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, c => c)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, f => f)\n","import React, { Component } from 'react'\nimport { Form, FormControl, Button, Row, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport Spinner from './Spinner'\nimport { \n  addToken\n} from '../store/interactions'\nimport { \n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector\n} from '../store/selectors'\n\nclass Settings extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    return (\n      <div>\n        <div className=\"card bg-light text-dark\">\n          <div className=\"card-header\">\n            Add new ERC20 Token\n          </div>\n          <div className=\"card-body\">\n              <Form noValidate onSubmit={(event) => {\n                event.preventDefault()\n                let tokenAddressInput = document.getElementById('newTokenAddressInput')\n                addToken(tokenAddressInput.value, tokenList, web3, account, exchange, dispatch)\n              }}>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Control autoFocus name=\"tokenAddress\" placeholder=\"Token contract address\" id=\"newTokenAddressInput\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Button variant=\"primary\" type=\"submit\">\n                    Add Token\n                  </Button>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </div>\n        </div>\n        \n        <div className=\"card bg-light text-dark\">\n          <div className=\"card-header\">\n            ERC20 Tokens\n          </div>\n          <div className=\"card-body\">\n              { showTokens(this.props) }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showTokens(props) {\n  const { tokenList } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>Name</th>\n          <th>Decimals</th>\n        </tr>\n      </thead>\n      <tbody>\n      { tokenList.map((token) => {\n          return (\n              <tr key={token.tokenAddress}>\n                <td className=\"text-muted\">{token.symbol}</td>\n                <td>{token.name}</td>\n                <td>{token.decimals}</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Settings)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Home extends Component {\n\n  render() {\n    return (\n      <div className=\"content\">\n        Welcome to the Kouga ERC20 exchange.\n        Please note, a 1% fee is charged on all succesful trades.\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nclass DepthChart extends Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = this.props.data\n    \n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    xAxis.renderer.minGridDistance = 50;\n    xAxis.title.text = `Price (${this.props.priceTitle})`;\n    xAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    xAxis.title.fill = am4core.color(\"#111\");\n\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = `${this.props.volumeTitle} Volume`;\n    yAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    yAxis.title.fill = am4core.color(\"#111\");\n\n    // Create bid value series\n    let bidValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    bidValueSeries.dataFields.categoryX = \"value\";\n    bidValueSeries.dataFields.valueY = \"bidtotalvolume\";\n    bidValueSeries.strokeWidth = 2;\n    bidValueSeries.stroke = am4core.color(\"#0f0\");\n    bidValueSeries.fill = bidValueSeries.stroke;\n    bidValueSeries.fillOpacity = 0.1;\n    bidValueSeries.tooltipText = \"Bid: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidvolume}[/]\"\n\n    // Create ask value series\n    let askValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    askValueSeries.dataFields.categoryX = \"value\";\n    askValueSeries.dataFields.valueY = \"asktotalvolume\";\n    askValueSeries.strokeWidth = 2;\n    askValueSeries.stroke = am4core.color(\"#f00\");\n    askValueSeries.fill = askValueSeries.stroke;\n    askValueSeries.fillOpacity = 0.1;\n    askValueSeries.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{askvolume}[/]\"\n\n    // Create bid volume series\n    let bidVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    bidVolumeSeries.dataFields.categoryX = \"value\";\n    bidVolumeSeries.dataFields.valueY = \"bidvolume\";\n    bidVolumeSeries.strokeWidth = 0;\n    bidVolumeSeries.fill = am4core.color(\"#aaa\");\n    bidVolumeSeries.fillOpacity = 0.2;\n\n    // Create ask volume series\n    let askVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    askVolumeSeries.dataFields.categoryX = \"value\";\n    askVolumeSeries.dataFields.valueY = \"askvolume\";\n    askVolumeSeries.strokeWidth = 0;\n    askVolumeSeries.fill = am4core.color(\"#aaa\");\n    askVolumeSeries.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n\n    this.chart = chart;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if(JSON.stringify(oldProps.data) !== JSON.stringify(this.props.data)) {\n      this.chart.data = this.props.data;\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"300px\" }}></div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(DepthChart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Spinner from '../Spinner'\nimport DepthChart from './DepthChart'\nimport { \n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderFillingSelector,\n  depthChartSelector \n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass MarketOrderBook extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n      { this.props.orderBookLoaded ? showOrderBook(this.props) : <Spinner type='div'/> }\n      </div>\n    )\n  }\n}\n\nfunction showOrderBook(props, buys) {\n  const { orderBook } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-body\">\n                { showDepthChart(props) }\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Buy Orders\n              </div>\n              <div className=\"card-body\">\n                { showOrders(props, true) }\n              </div>\n            </div>\n          </Col>\n          <Col sm={6}>\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Sell Orders\n              </div>\n              <div className=\"card-body\">\n                { showOrders(props, false) }\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n  )\n}\n\nfunction showOrders(props, buys) {\n  const { orderBook, token } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n\n  return (\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr key={order.id}\n          className=\"order-book-order\"\n          onClick={(e) => {\n            fillOrder(order, account, exchange, dispatch)\n          }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction showDepthChart(props) {\n  const { token, depthChart } = props\n  return (\n    <DepthChart data={depthChart.orders} priceTitle={`ETH/${token.symbol}`} volumeTitle={token.symbol} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    orderBookLoaded: !tokenLoading && orderBookLoaded && !orderFilling,\n    orderBook: orderBookSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state),\n    depthChart: depthChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketOrderBook)\n\n\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Chart from 'react-apexcharts'\nimport Spinner from '../Spinner'\nimport { chartOptions } from './PriceChart.config'\nimport { \n  tokenSelector,\n  tokenLoadingSelector,\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../../store/selectors'\n\nclass PriceChart extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { this.props.priceChartLoaded ? showPriceChart(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showPriceChart = (props) => {\n  const {token, priceChart} = props\n\n  return (\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>ETH/{token.symbol} &nbsp; { priceSymbol(priceChart.lastPriceChange) } &nbsp; { priceChart.lastPrice }</h4>\n      </div>\n      <Chart options={chartOptions} series={priceChart.series} type='candlestick' width='100%' height='200px'/>\n    </div>\n  )\n}\n\nconst priceSymbol = (priceChange) => {\n  let output\n  if (priceChange === '+') {\n    output = <span className=\"text-success\">&#9650;</span>\n  } else {\n    output = <span className=\"text-danger\">&#9660;</span>\n  }\n  return output\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const priceChartLoaded = priceChartLoadedSelector(state)\n    \n  return {\n    token: tokenSelector(state),\n    priceChartLoaded: priceChartLoaded && !tokenLoading,\n    priceChart: priceChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Spinner from '../Spinner'\nimport PriceChart from './PriceChart'\nimport {\n  contractsLoadedSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  filledOrdersLoadedSelector,\n  filledOrdersSelector \n} from '../../store/selectors'\n\nclass MarketTrades extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n        { this.props.contractsLoaded ?\n          <Container>\n            <Row>\n              <Col sm={12}>\n                <PriceChart />\n              </Col>\n            </Row>\n            <Row>\n              <Col sm={12}>\n                <div className=\"card bg-light text-dark\">\n                  <div className=\"card-body\">\n                    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n                        <thead>\n                          <tr>\n                            <th>Time</th>\n                            <th>{this.props.token.symbol}</th>\n                            <th>ETH/{this.props.token.symbol}</th>\n                          </tr>\n                        </thead>\n                        { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" /> }\n                      </table>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n          :\n          <Spinner type=\"div\" />\n        }\n      </div>\n    )\n  }\n}\n\nfunction showFilledOrders(orders) {\n  return (\n    <tbody>\n    { orders.map((order) => {\n        return (\n            <tr key={order.id} className={`order-${order.id}`}>\n              <td className=\"text-muted\">{order.formattedTimestamp}</td>\n              <td>{order.tokenAmount}</td>\n              <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n            </tr>\n        )\n      })\n    }\n    </tbody>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const filledOrdersLoaded = filledOrdersLoadedSelector(state)\n\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    token: tokenSelector(state),\n    filledOrdersLoaded: filledOrdersLoaded && !tokenLoading,\n    filledOrders: filledOrdersSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip, Container, Row, Col } from 'react-bootstrap'\nimport Spinner from '../Spinner'\nimport { \n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  orderFillingSelector,\n  tokenSelector,\n  tokenLoadingSelector\n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass SellOrders extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n      { this.props.orderBookLoaded ? showOrderTable(this.props, false) : <Spinner type='div'/> }\n      </div>\n    )\n  }\n}\n\nfunction showOrderTable(props, buys) {\n  const { orderBook } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { showOrders(props, buys) }\n        </div>\n      </div>\n  )\n}\n\nfunction showOrders(props, buys) {\n  const { orderBook, token } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n\n  return (\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr key={order.id}\n          className=\"order-book-order\"\n          onClick={(e) => {\n            fillOrder(order, account, exchange, dispatch)\n          }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    orderBookLoaded: !tokenLoading && orderBookLoaded && !orderFilling,\n    orderBook: orderBookSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(SellOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  makeBuyOrder\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  buyOrderSelector\n} from '../../store/selectors'\nimport { \n  buyOrderAmountChanged,\n  buyOrderPriceChanged\n} from '../../store/actions'\n\nclass NewBuyOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          NewOrder\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    buyOrder,\n    showBuyTotal,\n    dispatch\n  } = props\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeBuyOrder(buyOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Buy Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Amount\"\n            onChange={(e) => {dispatch(buyOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Buy Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Price\"\n            onChange={(e) => {dispatch(buyOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Buy Order</button>\n      { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    buyOrder,\n    showForm: !buyOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewBuyOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Spinner from '../Spinner'\nimport { \n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderFillingSelector,\n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass BuyOrders extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n      { this.props.orderBookLoaded ? showOrderTable(this.props, true) : <Spinner type='div'/> }\n      </div>\n    )\n  }\n}\n\nfunction showOrderTable(props, buys) {\n  const { orderBook } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { showOrders(props, buys) }\n        </div>\n      </div>\n  )\n}\n\nfunction showOrders(props, buys) {\n  const { orderBook, token } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n\n  return (\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr key={order.id}\n          className=\"order-book-order\"\n          onClick={(e) => {\n            fillOrder(order, account, exchange, dispatch)\n          }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    orderBookLoaded: !tokenLoading && orderBookLoaded && !orderFilling,\n    orderBook: orderBookSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(BuyOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport {\n  makeSellOrder \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  sellOrderSelector\n} from '../../store/selectors'\nimport {\n  sellOrderAmountChanged,\n  sellOrderPriceChanged\n} from '../../store/actions'\n\nclass NewSellOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          NewOrder\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    sellOrder,\n    showSellTotal,\n    dispatch\n  } = props\n  return (\n    \n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeSellOrder(sellOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Sell Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Amount\"\n            onChange={(e) => {dispatch(sellOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Sell Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Price\"\n            onChange={(e) => {dispatch(sellOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Sell Order</button>\n      { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const sellOrder = sellOrderSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    sellOrder,\n    showForm: !sellOrder.making,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewSellOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { \n  myOpenOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass PortfolioOrders extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          \n            { this.props.myOpenOrdersLoaded ? showMyOpenOrders(this.props) : <Spinner type=\"div\" /> }\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showMyOpenOrders(props) {\n  const { myOpenOrders, dispatch, exchange, account, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n      <thead>\n        <tr>\n          <th>Amount</th>\n          <th>ETH/{token.symbol}</th>\n          <th>Cancel</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myOpenOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td \n                className=\"text-muted cancel-order\"\n                onClick={(e) => {\n                  cancelOrder(order, account, exchange, dispatch)\n                }}>x</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myOpenOrdersLoaded: !tokenLoading && myOpenOrdersLoaded && !orderCancelling,\n    myOpenOrders: myOpenOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PortfolioOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { \n  myFilledOrdersSelector,\n  myFilledOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass PortfolioTrades extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n            { this.props.myFilledOrdersLoaded ? showMyFilledOrders(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showMyFilledOrders(props) {\n  const { myFilledOrders, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myFilledOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myFilledOrdersLoaded: !tokenLoading && myFilledOrdersLoadedSelector(state),\n    myFilledOrders: myFilledOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PortfolioTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport { \n  loadBalances,\n  depositEther,\n  withdrawEther,\n  depositToken,\n  withdrawToken \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  tokenLoadingSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  etherBalanceSelector,\n  tokenBalanceSelector,\n  exchangeEtherBalanceSelector,\n  exchangeTokenBalanceSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged,\n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged\n} from '../../store/actions'\n\nclass FundsBalance extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Balance\n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ? showForm(this.props) : <Spinner type=\"div\" />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    etherBalance,\n    tokenBalance,\n    exchangeEtherBalance,\n    exchangeTokenBalance,\n    dispatch,\n    etherDepositAmount,\n    etherWithdrawAmount,\n    tokenDepositAmount,\n    tokenWithdrawAmount\n  } = props\n  return(\n    <Tabs defaultActiveKey=\"deposit\" className=\"bg-light text-dark\">\n      <Tab eventKey=\"deposit\" title=\"Deposit\" className=\"bg-light\">\n        <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositEther(etherDepositAmount, account, web3, exchange, dispatch)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n              type=\"text\"\n              placeholder=\"ETH Amount\"\n              onChange={(e) => {dispatch(etherDepositAmountChanged(e.target.value))}}\n              className=\"form-control form-control-sm bg-light text-dark\"\n              required\n            />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-light table-sm small\">\n          \n          <tbody>\n            <tr>\n              <td>{token.symbol}</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositToken(tokenDepositAmount, account, web3, token, exchange, dispatch)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n              type=\"text\"\n              placeholder={`${token.symbol} Amount`}\n              onChange={(e) => {dispatch(tokenDepositAmountChanged(e.target.value))}}\n              className=\"form-control form-control-sm bg-light text-dark\"\n              required\n            />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n        \n\n      </Tab>\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\" className=\"bg-light\">\n        <table className=\"table table-light table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawEther(etherWithdrawAmount, account, web3, exchange, dispatch)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n              type=\"text\"\n              placeholder=\"ETH Amount\"\n              onChange={(e) => {\n                console.log('etherWithdrawAmountChanged', e.target.value)\n                dispatch(etherWithdrawAmountChanged(e.target.value))}}\n              className=\"form-control form-control-sm bg-light text-dark\"\n              required\n            />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-light table-sm small\">\n          <tbody>\n            <tr>\n              <td>{token.symbol}</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawToken(tokenWithdrawAmount, account, web3, token, exchange, dispatch)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n              type=\"text\"\n              placeholder={`${token.symbol} Amount`}\n              onChange={(e) => {\n                console.log('etherWithdrawAmountChanged', e.target.value)\n                dispatch(tokenWithdrawAmountChanged(e.target.value))}}\n              className=\"form-control form-control-sm bg-light text-dark\"\n              required\n            />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n      </Tab>\n    </Tabs>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !tokenLoading && !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state),\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(FundsBalance)\n\n\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Settings from \"./Settings\";\nimport Home from \"./Home\";\nimport MarketOrderBook from \"./market/MarketOrderBook\";\nimport MarketTrades from './market/MarketTrades'\nimport SellOrders from './buy/SellOrders'\nimport NewBuyOrder from './buy/NewBuyOrder'\nimport BuyOrders from './sell/BuyOrders'\nimport NewSellOrder from './sell/NewSellOrder'\nimport PortfolioOrders from './portfolio/PortfolioOrders'\nimport PortfolioTrades from './portfolio/PortfolioTrades'\nimport FundsBalance from './funds/FundsBalance'\n\nexport default function Routes() {\n  return (\n  \t<Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/settings' component={Settings} />\n      <Route path='/market-orderbook' component={MarketOrderBook} />\n      <Route path='/market-trades' component={MarketTrades} />\n      <Route path='/buy-orders' component={SellOrders} />\n      <Route path='/buy-neworder' component={NewBuyOrder} />\n      <Route path='/sell-orders' component={BuyOrders} />\n      <Route path='/sell-neworder' component={NewSellOrder}/>\n      <Route path='/portfolio-orders' component={PortfolioOrders} />\n      <Route path='/portfolio-trades' component={PortfolioTrades} />\n      <Route path='/funds-balance' component={FundsBalance} />\n    </Switch>\n  );\n}","import React, { Component } from 'react'\nimport { Navbar, Nav, Dropdown, Form, FormControl, Button, Container, Row, Col } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport Routes from \"./Routes\"\nimport Identicon from 'identicon.js';\nimport { \n  addToken,\n  selectToken\n} from '../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\nimport {\n  sideNavShowHideToggled\n} from '../store/actions'\n\nclass TopNav extends Component {\n\n  constructor(props) {    \n    super(props)\n    this.toggleSidenav = this.toggleSidenav.bind(this)\n  }\n\n  toggleSidenav() {\n    const {\n      dispatch\n    } = this.props\n    dispatch(sideNavShowHideToggled())\n  }\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      token,\n      dispatch\n    } = this.props\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n      <a\n        href=\"/#\"\n        ref={ref}\n        onClick={e => {\n          e.preventDefault();\n          onClick(e);\n        }}\n      >\n        {children}\n        &#x25bc;\n      </a>\n    ));\n\n    const CustomMenu = React.forwardRef(\n      ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n        const [value, setValue] = React.useState('');\n        \n        return (\n          <div\n            ref={ref}\n            style={style}\n            className={className}\n            aria-labelledby={labeledBy}\n          >\n            <FormControl\n              autoFocus\n              className=\"mx-3 my-2 w-auto\"\n              placeholder=\"Type to filter...\"\n              onChange={e => setValue(e.target.value)}\n              value={value}\n            />\n            <ul className=\"list-unstyled\">\n              {React.Children.toArray(children).filter(\n                child =>\n                  !value || child.props.children.toLowerCase().startsWith(value),\n              )}\n            </ul>\n          </div>\n        );\n      },\n    );\n\n    return (\n      <div>\n        <nav className=\"sb-topnav navbar navbar-expand navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to='/'>Kouga</Link>\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\" \n              onClick={\n                this.toggleSidenav\n              }>\n              <i className=\"fas fa-bars\"></i>\n            </button>\n\n            <Dropdown className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n              <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n                {token ? token.symbol : \"select token\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu as={CustomMenu}>\n                { tokenList.map((token) => renderTokenSelect(token, this.props)) }\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <ul className=\"navbar-nav ml-auto ml-md-0\">\n                <li className=\"nav-item dropdown\">\n                    { this.props.account\n                      ? <a className=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          <img\n                            className=\"ml-2\"\n                            width='30'\n                            height='30'\n                            src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                            alt=\"\"\n                          />\n                        </a>\n                        \n                      : <span></span>\n                    }\n                    \n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n                        <div className=\"dropdown-item\">{this.props.account}</div>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\" to='/settings'>Settings</Link>\n                    </div>\n                </li>\n            </ul>\n        </nav>\n      </div>\n      \n    )\n  }\n}\n\nfunction renderTokenSelect(token, props) {\n  const {\n    tokenList,\n    web3,\n    exchange,\n    account, \n    dispatch\n  } = props\n\n  return (\n    <Dropdown.Item \n      address={token.tokenAddress}\n      key={token.tokenAddress} \n      eventKey={token.tokenAddress} \n      onSelect={eKey => selectToken(eKey, tokenList, account, exchange, web3, dispatch)}>{token.symbol}</Dropdown.Item>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(TopNav)\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Dropdown, Form, FormControl, Button, Container, Row, Col } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\n\nclass Navigation extends Component {\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      token,\n      dispatch\n    } = this.props\n\n    return (\n          <div id=\"layoutSidenav_nav\">\n            <nav className=\"sb-sidenav accordion sb-sidenav-light\" id=\"sidenavAccordion\">\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Exchange</div>\n\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseMarket\" aria-expanded=\"false\" aria-controls=\"collapseMarket\">\n                          <div className=\"sb-nav-link-icon\">\n                            <i className=\"fas fa-chart-line\"></i>\n                          </div>\n                          Market\n                          <div className=\"sb-sidenav-collapse-arrow\">\n                            <i className=\"fas fa-angle-down\"></i>\n                          </div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseMarket\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                          <nav className=\"sb-sidenav-menu-nested nav\">\n                            <Link className=\"nav-link\" to='/market-orderbook'>Orderbook</Link>\n                            <Link className=\"nav-link\" to='/market-trades'>Trades</Link>\n                          </nav>\n                        </div>\n\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseBuy\" aria-expanded=\"false\" aria-controls=\"collapseBuy\">\n                          <div className=\"sb-nav-link-icon\">\n                            <i className=\"fas fa-arrow-alt-circle-down\"></i>\n                          </div>\n                          Buy\n                          <div className=\"sb-sidenav-collapse-arrow\">\n                            <i className=\"fas fa-angle-down\"></i>\n                          </div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseBuy\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                          <nav className=\"sb-sidenav-menu-nested nav\">\n                            <Link className=\"nav-link\" to='/buy-orders'>Sell Orders</Link>\n                            <Link className=\"nav-link\" to='/buy-neworder'>New Buy Order</Link>\n                          </nav>\n                        </div>\n\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseSell\" aria-expanded=\"false\" aria-controls=\"collapseSell\">\n                          <div className=\"sb-nav-link-icon\">\n                            <i className=\"fas fa-arrow-alt-circle-up\"></i>\n                          </div>\n                          Sell\n                          <div className=\"sb-sidenav-collapse-arrow\">\n                            <i className=\"fas fa-angle-down\"></i>\n                          </div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseSell\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                          <nav className=\"sb-sidenav-menu-nested nav\">\n                            <Link className=\"nav-link\" to='/sell-orders'>Buy Orders</Link>\n                            <Link className=\"nav-link\" to='/sell-neworder'>New Sell Order</Link>\n                          </nav>\n                        </div>\n\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePortfolio\" aria-expanded=\"false\" aria-controls=\"collapsePortfolio\">\n                          <div className=\"sb-nav-link-icon\">\n                            <i className=\"fas fa-list\"></i>\n                          </div>\n                          Portfolio\n                          <div className=\"sb-sidenav-collapse-arrow\">\n                            <i className=\"fas fa-angle-down\"></i>\n                          </div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapsePortfolio\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                          <nav className=\"sb-sidenav-menu-nested nav\">\n                            <Link className=\"nav-link\" to='/portfolio-orders'>My Orders</Link>\n                            <Link className=\"nav-link\" to='/portfolio-trades'>My Trades</Link>\n                          </nav>\n                        </div>\n\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseFunds\" aria-expanded=\"false\" aria-controls=\"collapseFunds\">\n                          <div className=\"sb-nav-link-icon\">\n                            <i className=\"fas fa-money-bill\"></i>\n                          </div>\n                          Funds\n                          <div className=\"sb-sidenav-collapse-arrow\">\n                            <i className=\"fas fa-angle-down\"></i>\n                          </div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseFunds\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                          <nav className=\"sb-sidenav-menu-nested nav\">\n                            <Link className=\"nav-link\" to='/funds-balance'>Balance</Link>\n                          </nav>\n                        </div>\n\n                    </div>\n                </div>\n            </nav>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TopNav from './TopNav'\nimport SideNav from './SideNav'\nimport Routes from \"./Routes\"\nimport { \n  loadWeb3, \n  loadAccount,\n  loadExchange,\n  selectToken\n} from '../store/interactions'\nimport { \n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  contractsLoadedSelector, \n  sideNavShowSelector, \n  tokenSelector, \n  tokenListSelector\n} from '../store/selectors'\nimport { web3AccountLoaded } from '../store/actions'\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    try {\n      const web3 = loadWeb3(dispatch)\n      await window.ethereum.enable();\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n        dispatch(web3AccountLoaded(accounts[0]))\n      })\n\n      window.ethereum.on('chainChanged', () => {\n        document.location.reload()\n      })\n\n      // Acccounts now exposed\n      const account = await loadAccount(web3, dispatch)\n      console.log('account', account)\n\n      const network = await web3.eth.net.getNetworkType()\n      console.log('network', network)\n      const networkId = await web3.eth.net.getId()\n      console.log('network id', networkId)\n\n      const exchange = await loadExchange(web3, networkId, dispatch)\n      if (!exchange) {\n        return;\n      }\n    } catch(e) {\n      return;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"props\", props)\n    const {\n      token,\n      tokenList,\n      account,\n      exchange,\n      web3,\n      dispatch\n    } = props\n\n    if (token === null && tokenList.length > 0) {\n      selectToken(tokenList[0].tokenAddress, tokenList, account, exchange, web3, dispatch)\n    }\n\n    return state\n  }\n\n  render() {\n\n    \n\n    if (!this.props.exchange) {\n      return (\n        <h3>Waiting to be connected to the {process.env.REACT_APP_NETWORK_NAME} network</h3>\n      )\n    }\n\n    return (\n      <div className={`sb-nav-fixed ${this.props.sideNavShow ? \"\" : \"sb-sidenav-toggled\"}`}>\n\n        <TopNav/>\n\n        <div id=\"layoutSidenav\">\n          <SideNav/>\n          <div id=\"layoutSidenav_content\">\n            <main>\n              <div className=\"container-fluid\">\n                <Routes />\n              </div>\n            </main>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    contractsLoaded: contractsLoadedSelector(state),\n    sideNavShow: sideNavShowSelector(state),\n    token: tokenSelector(state),\n    tokenList: tokenListSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux'\n\nfunction app (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase 'SIDE_NAV_SHOW_HIDE_TOGGLED':\n\t\t\tlet show = state.sideNavShow\n\t\t\tif (show === null || show === undefined) {\n\t\t\t\tshow = true\n\t\t\t}\n\t\t\treturn {...state, sideNavShow: !show}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction web3 (state = {}, action ) {\n\tswitch (action.type) {\n\t\tcase 'WEB3_LOADED':\n\t\t\treturn { ...state, connection: action.connection }\n\t\tcase 'WEB3_ACCOUNT_LOADED':\n\t\t\treturn { ...state, account: action.account }\n\t\tcase 'ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, balance: action.balance}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction exchange (state = {}, action ) {\n\tlet index\n\tlet data\n\tswitch (action.type) {\n\t\tcase 'EXCHANGE_LOADED':\n\t\t\treturn { ...state, loaded: true, contract: action.contract, tokens: {data: []}, token: null }\n\t\tcase 'TOKEN_ADDED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.tokens.data.findIndex(token => token.tokenAddress === action.token.tokenAddress)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.tokens.data, action.token]\n\t\t\t} else {\n\t\t\t\tdata = state.tokens.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\ttokens: {\n\t\t\t\t\t...state.tokens,\n\t\t\t\t\tdata\n\t\t\t\t}\n\t\t\t}\n\t\tcase 'SELECTING_TOKEN': \n\t\t\treturn { ...state, tokenLoading: true }\n\t\tcase 'TOKEN_SELECTED':\n\t\t\treturn { ...state, token: action.token, tokenLoading: false }\n\t\tcase 'TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, tokenBalance: action.balance}\n\t\tcase 'EXCHANGE_ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeEtherBalance: action.balance}\n\t\tcase 'EXCHANGE_TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeTokenBalance: action.balance}\n\t\tcase 'BALANCES_LOADING':\n\t\t\treturn { ...state, balancesLoading: true} \n\t\tcase 'BALANCES_LOADED':\n\t\t\treturn { ...state, balancesLoading: false} \n\t\tcase 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherDepositAmount: action.amount} \n\t\tcase 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherWithdrawAmount: action.amount} \n\t\tcase 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenDepositAmount: action.amount} \n\t\tcase 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenWithdrawAmount: action.amount}\n\t\tcase 'BUY_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: action.amount } } \n\t\tcase 'BUY_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, price: action.price } } \n\t\tcase 'BUY_ORDER_MAKING':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: null, price: null, making: true } } \n\t\tcase 'SELL_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: action.amount } } \n\t\tcase 'SELL_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, price: action.price } } \n\t\tcase 'SELL_ORDER_MAKING':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: null, price: null, making: true } } \n\t\tcase 'ORDER_MADE':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.allOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.allOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.allOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\tbuyOrder: {\n\t\t\t\t\t...state.buyOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tsellOrder: {\n\t\t\t\t\t...state.sellOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tallOrders: {\n\t\t\t\t\t...state.allOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tcase 'CANCELLED_ORDERS_LOADED':\n\t\t\treturn { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }}\n\t\tcase 'FILLED_ORDERS_LOADED':\n\t\t\treturn { ...state, filledOrders: {loaded: true, data: action.filledOrders }} \n\t\tcase 'ALL_ORDERS_LOADED':\n\t\t\treturn { ...state, allOrders: {loaded: true, data: action.allOrders }} \n\t\tcase 'ORDER_CANCELLING':\n\t\t\treturn { ...state, orderCancelling: true} \n\t\tcase 'ORDER_CANCELLED':\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderCancelling: false,\n\t\t\t\tcancelledOrders: {\n\t\t\t\t\t...state.cancelledOrders,\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t...state.cancelledOrders.data,\n\t\t\t\t\t\taction.order\n\t\t\t\t\t]\n\t\t\t\t}} \n\t\tcase 'ORDER_FILLING':\n\t\t\treturn { ...state, orderFilling: true} \n\t\tcase 'ORDER_FILLED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.filledOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.filledOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.filledOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderFilling: false,\n\t\t\t\tfilledOrders: {\n\t\t\t\t\t...state.filledOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tapp,\n\tweb3,\n\texchange\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// for reduc devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore ( preloadedState ) {\n\treturn createStore (\n\t\trootReducer,\n\t\tpreloadedState,\n\t\tcomposeEnhancers (applyMiddleware (...middleware, loggerMiddleware))\n\t)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store = {configureStore()}>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}