{"version":3,"sources":["store/actions.js","helpers.js","store/interactions.js","store/selectors.js","components/TopNav.js","components/SideNav.js","components/Spinner.js","components/orders/DepthChart.js","components/orders/MarketOrders.js","components/orders/NewBuyOrder.js","components/orders/NewSellOrder.js","components/orders/MyOrders.js","components/Orders.js","components/trades/PriceChart.config.js","components/trades/PriceChart.js","components/trades/MyTrades.js","components/trades/MarketTrades.js","components/Trades.js","components/funds/ETHFunds.js","components/funds/TokenFunds.js","components/Funds.js","components/Content.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["web3AccountLoaded","account","type","tokenAdded","token","console","log","tokenSelected","tokenBalanceLoaded","balance","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","cancelledOrdersLoaded","cancelledOrders","filledOrdersLoaded","filledOrders","allOrdersLoaded","allOrders","ETHER_ADDRESS","GREEN","RED","weiToEther","wei","weiToTokens","tokenDecimals","etherToWei","e","toString","tokensToWei","t","formatEtherBalance","Math","round","formatTokenBalance","decimals","loadWeb3","dispatch","web3","Web3","window","givenProvider","connection","loadAccount","a","eth","getAccounts","accounts","loadExchange","networkId","Contract","Exchange","abi","networks","address","exchange","contract","subscribeToExchangeEvents","loadAllTokens","getPastEvents","fromBlock","map","event","returnValues","events","TokenAdded","error","subscribeToTokenEvents","tokenAddress","Cancel","filter","tokenGet","tokenGive","order","Trade","Deposit","loadBalances","Withdraw","Order","loadAllOrders","cancelStream","tradeStream","orderStream","addToken","tokens","findIndex","Token","tokenContract","checkContractFunction","methods","call","name","symbol","options","send","from","on","hash","functionSignature","undefined","selectToken","index","getBalance","etherBalance","balanceOf","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","sideNavShowSelector","createSelector","state","get","s","accountSelector","web3Selector","w","exchangeLoaded","exchangeSelector","el","tokenListSelector","tokenSelector","tokenLoadingSelector","contractsLoadedSelector","balancesLoadingSelector","l","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","o","sellOrderSelector","col","orders","filledOrdersLoadedSelector","fol","filledOrdersSelector","sort","b","timestamp","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","amountGive","amountGet","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","depthChartSelector","decorateWithVolume","concat","value","prevPrice","res","i","length","volume","totalvolume","dp","push","myFilledOrdersLoadedSelector","myFilledOrdersSelector","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","loaded","priceChartSelector","secondLastOrder","lastOrder","slice","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","close","low","minBy","high","maxBy","x","Date","y","orderCancellingSelector","c","TopNav","f","props","toggleSidenav","bind","this","tokenList","className","to","href","onClick","OverlayTrigger","key","placement","overlay","Tooltip","role","data-toggle","aria-haspopup","aria-expanded","width","height","src","Identicon","alt","Component","connect","SideNav","handleOnSelect","row","isSelect","component","SearchBar","Search","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","keyField","columns","dataField","text","search","searchProps","placeholder","baseProps","classes","hover","condensed","showTokens","Form","noValidate","onSubmit","preventDefault","tokenAddressInput","document","getElementById","Row","Group","as","Col","Control","autoFocus","controlId","Button","variant","am4core","am4themes_animated","DepthChart","chart","buildChart","dispose","oldProps","JSON","stringify","style","am4charts","numberFormatter","numberFormat","xAxis","xAxes","dataFields","category","renderer","minGridDistance","title","labels","template","fill","yAxis","yAxes","bidValueSeries","categoryX","valueY","strokeWidth","stroke","fillOpacity","tooltipText","askValueSeries","bidVolumeSeries","askVolumeSeries","cursor","MarketOrders","loadBlockchainData","buy","buys","fillOrder","alert","renderOrder","showOrders","NewBuyOrder","showForm","Spinner","buyOrder","showBuyTotal","amount","price","makeOrder","makeBuyOrder","onChange","target","required","making","NewSellOrder","sellOrder","showSellTotal","makeSellOrder","MyOrders","myOpenOrdersLoaded","myOpenOrders","cellSpacing","cancelOrder","showMyOpenOrders","orderCancelling","Orders","Container","sm","depthChart","showDepthChart","orderBook","chartOptions","animations","enabled","toolbar","show","tooltip","theme","fontSize","fontFamily","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","PriceChart","priceChartLoaded","showPriceChart","priceChart","priceSymbol","priceChange","tokenLoading","MyTrades","myFilledOrdersLoaded","myFilledOrders","showMyFilledOrders","MarketTrades","contractsLoaded","Trades","ETHFunds","etherDepositAmount","etherWithdrawAmount","depositEther","withdrawEther","balancesLoading","tokenDepositAmount","tokenWithdrawAmount","approve","depositToken","withdrawToken","Funds","TokenFunds","Content","Tabs","defaultActiveKey","Tab","eventKey","App","ethereum","enable","location","reload","net","getNetworkType","network","getId","sideNavShow","rootReducer","combineReducers","app","action","orderFilling","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","Boolean","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d25a33c8.chunk.js","sourcesContent":["export function web3Loaded(connection) {\n\treturn {\n\t\ttype: 'WEB3_LOADED',\n\t\tconnection\n\t}\n}\n\nexport function web3AccountLoaded(account) {\n\treturn {\n\t\ttype: 'WEB3_ACCOUNT_LOADED',\n\t\taccount\n\t}\n}\n\nexport function exchangeLoaded(contract) {\n\treturn {\n\t\ttype: 'EXCHANGE_LOADED',\n\t\tcontract\n\t}\n}\n\nexport function tokenAdded(token) {\n\tconsole.log(\"TOKEN_ADDED\", token)\n\treturn {\n\t\ttype: 'TOKEN_ADDED',\n\t\ttoken\n\t}\n}\n\nexport function selectingToken() {\n\treturn {\n\t\ttype: 'SELECTING_TOKEN'\n\t}\n}\n\nexport function tokenSelected(token) {\n\treturn {\n\t\ttype: 'TOKEN_SELECTED',\n\t\ttoken\n\t}\n}\n\nexport function etherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function tokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_ETHER_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n\treturn {\n\t\ttype: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n\t\tbalance\n\t}\n}\n\nexport function balancesLoading() {\n\treturn {\n\t\ttype: 'BALANCES_LOADING'\n\t}\n}\n\nexport function balancesLoaded() {\n\treturn {\n\t\ttype: 'BALANCES_LOADED'\n\t}\n}\n\nexport function etherDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenDepositAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n\treturn {\n\t\ttype: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'BUY_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function buyOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'BUY_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function buyOrderMaking() {\n\treturn {\n\t\ttype: 'BUY_ORDER_MAKING'\n\t}\n}\n\nexport function sellOrderAmountChanged(amount) {\n\treturn {\n\t\ttype: 'SELL_ORDER_AMOUNT_CHANGED',\n\t\tamount\n\t}\n}\n\nexport function sellOrderPriceChanged(price) {\n\treturn {\n\t\ttype: 'SELL_ORDER_PRICE_CHANGED',\n\t\tprice\n\t}\n}\n\nexport function sellOrderMaking() {\n\treturn {\n\t\ttype: 'SELL_ORDER_MAKING'\n\t}\n}\n\nexport function orderMade(order) {\n\treturn {\n\t\ttype: 'ORDER_MADE',\n\t\torder\n\t}\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n\treturn {\n\t\ttype: 'CANCELLED_ORDERS_LOADED',\n\t\tcancelledOrders\n\t}\n}\n\n\nexport function filledOrdersLoaded(filledOrders) {\n\treturn {\n\t\ttype: 'FILLED_ORDERS_LOADED',\n\t\tfilledOrders\n\t}\n}\n\n\nexport function allOrdersLoaded(allOrders) {\n\treturn {\n\t\ttype: 'ALL_ORDERS_LOADED',\n\t\tallOrders\n\t}\n}\n\nexport function orderCancelling() {\n\treturn {\n\t\ttype: 'ORDER_CANCELLING'\n\t}\n}\n\nexport function orderCancelled(order) {\n\treturn {\n\t\ttype: 'ORDER_CANCELLED',\n\t\torder\n\t}\n}\n\nexport function orderFilling() {\n\treturn {\n\t\ttype: 'ORDER_FILLING'\n\t}\n}\n\nexport function orderFilled(order) {\n\treturn {\n\t\ttype: 'ORDER_FILLED',\n\t\torder\n\t}\n}\n\nexport function sideNavShowHideToggled() {\n\treturn {\n\t\ttype: 'SIDE_NAV_SHOW_HIDE_TOGGLED'\n\t}\n}","export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const DECIMALS = 18\n\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const weiToEther = (wei) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** DECIMALS))\n\t}\n}\n\nexport const weiToTokens = (wei, tokenDecimals) => {\n\tif (wei) {\n\t\treturn (wei / (10 ** tokenDecimals))\n\t}\n}\n\nexport const etherToWei = (e) => {\n\tif (e) {\n\t\treturn (e * (10 ** DECIMALS)).toString()\n\t}\n}\n\nexport const tokensToWei = (t, tokenDecimals) => {\n\tif (t) {\n\t\treturn (t * (10 ** tokenDecimals)).toString()\n\t}\n}\n\nexport const formatEtherBalance = (balance) => {\n\tconst precision = 100\n\tbalance = weiToEther(balance)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}\n\nexport const formatTokenBalance = (balance, decimals) => {\n\tconst precision = 100\n\tbalance = weiToTokens(balance, decimals)\n\tbalance = Math.round(balance * precision) / precision\n\treturn balance\n}","import Web3 from 'web3'\nimport Exchange from '../contracts/abis/Exchange.json'\nimport Token from '../contracts/abis/Token18.json'\nimport { \n\tweb3Loaded,\n\tweb3AccountLoaded,\n\texchangeLoaded,\n\ttokenAdded,\n\tselectingToken,\n\ttokenSelected,\n\tetherBalanceLoaded,\n\ttokenBalanceLoaded,\n\texchangeEtherBalanceLoaded,\n\texchangeTokenBalanceLoaded,\n\tbalancesLoading,\n\tbalancesLoaded,\n\tbuyOrderMaking,\n\tsellOrderMaking,\n\torderMade,\n\tcancelledOrdersLoaded,\n\tfilledOrdersLoaded,\n\tallOrdersLoaded,\n\torderCancelling,\n\torderCancelled,\n\torderFilling,\n\torderFilled\n} from './actions.js'\nimport { ETHER_ADDRESS, tokensToWei, etherToWei } from '../helpers'\n\nexport const loadWeb3 = (dispatch) => {\n\tconst web3 = new Web3(window['ethereum'] || Web3.givenProvider || 'http://127.0.0.1:7545');\n\tdispatch(web3Loaded(web3))\n\treturn web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n\tconst accounts = await web3.eth.getAccounts()\n\tconst account = accounts[0]\n\tdispatch(web3AccountLoaded(account))\n\treturn account\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n\ttry {\n\t\tconst exchange = await new web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address)\n\t\tdispatch(exchangeLoaded(exchange))\n\t\tsubscribeToExchangeEvents(exchange, dispatch)\n\n\t\tawait loadAllTokens(exchange, dispatch)\n\t\treturn exchange\n\t} catch (error) {\n\t\tconsole.log('Contract not deployed to the current network', error)\n\t\treturn null\n\t}\n}\n\nexport const loadAllTokens = async (exchange, dispatch) => {\n\ttry {\n\t\tconst tokenStream = await exchange.getPastEvents('TokenAdded', {fromBlock: 0})\n\t\ttokenStream.map((event) => dispatch(tokenAdded(event.returnValues)))\n\t} catch (error) {\n\t\tconsole.log('Could not get token stream')\n\t\treturn null\n\t}\n}\n\nexport const subscribeToExchangeEvents = async (exchange, dispatch) => {\n\texchange.events.TokenAdded({}, (error, event) => {\n\t\tdispatch(tokenAdded(event.returnValues))\n\t})\n}\n\nexport const subscribeToTokenEvents = async (token, tokenAddress, account, exchange, web3, dispatch) => {\n\texchange.events.Cancel({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderCancelled(event.returnValues))\n\t})\n\texchange.events.Trade({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderFilled(event.returnValues))\n\t})\n\texchange.events.Deposit({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Withdraw({filter: {token: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tloadBalances(account, exchange, token, web3, dispatch)\n\t})\n\texchange.events.Order({filter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]}}, (error, event) => {\n\t\tdispatch(orderMade(event.returnValues))\n\t})\n}\n\nexport const loadAllOrders = async (tokenAddress, exchange, dispatch) => {\n\ttry {\n\t\tconst cancelStream = await exchange.getPastEvents(\n\t\t\t'Cancel', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst cancelledOrders = cancelStream.map((event) => event.returnValues)\n\t\tdispatch(cancelledOrdersLoaded(cancelledOrders))\n\n\t\tconst tradeStream = await exchange.getPastEvents(\n\t\t\t'Trade', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst filledOrders = tradeStream.map((event) => event.returnValues)\n\t\tdispatch(filledOrdersLoaded(filledOrders))\n\n\t\tconst orderStream = await exchange.getPastEvents(\n\t\t\t'Order', \n\t\t\t{\n\t\t\t\tfilter: {tokenGet: [tokenAddress, ETHER_ADDRESS], tokenGive: [tokenAddress, ETHER_ADDRESS]},\n\t\t\t\tfromBlock: 0\n\t\t\t}\n\t\t)\n\t\tconst allOrders = orderStream.map((event) => event.returnValues)\n\t\tdispatch(allOrdersLoaded(allOrders))\n\t} catch (error) {\n\t\tconsole.log('Could not get order streams')\n\t\treturn null\n\t}\n}\n\nexport const addToken = async (tokenAddress, tokens, web3, account, exchange, dispatch) => {\n\ttry {\n\t\t// check if not already present\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tif (index !== -1) {\n\t\t\tthrow \"allready present\" \n\t\t}\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress)\n\n\t\t// check if really ERC20\n\t\tcheckContractFunction(tokenContract, 'name()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'symbol()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'decimals()') // optional, but we need it\n\t\tcheckContractFunction(tokenContract, 'totalSupply()')\n\t\tcheckContractFunction(tokenContract, 'balanceOf(address)')\n\t\tcheckContractFunction(tokenContract, 'transfer(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'transferFrom(address,address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'approve(address,uint256)')\n\t\tcheckContractFunction(tokenContract, 'allowance(address,address)')\n\n\t\tconst decimals = await tokenContract.methods.decimals().call()\n\t\tconst name = await tokenContract.methods.name().call()\n\t\tconst symbol = await tokenContract.methods.symbol().call()\n\n\t\tconsole.log(\"addToken\", tokenAddress, tokenContract.options.address)\n\n\t\texchange.methods.addToken(tokenAddress, name, symbol, decimals).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tconsole.log('addded token with hash', hash)\n\t\t})\n\t\t.on('error', (error) => {\n\t\t\tconsole.log('Could not add token', error)\n\t\t})\n\t} catch (error) {\n\t\tconsole.log('Could not add new token:', error)\n\t}\n}\n\nconst checkContractFunction = (contract, functionSignature) => {\n\tif (contract.methods[functionSignature] === undefined) {\n\t\tthrow \"Not an ERC20 token: \" + functionSignature\n\t}\n}\n\nexport const selectToken = async (tokenAddress, tokens, account, exchange, web3, dispatch) => {\n\ttry {\n\t\tdispatch(selectingToken())\n\n\t\tconst index = tokens.findIndex(token => token.tokenAddress === tokenAddress)\n\t\tlet token = tokens[index]\n\n\t\tconst tokenContract = await new web3.eth.Contract(Token.abi, token.tokenAddress)\n\t\ttoken.contract = tokenContract\n\n\t\tawait loadBalances(account, exchange, token, web3, dispatch)\n\t\tawait loadAllOrders(tokenAddress, exchange, dispatch)\n\t\tsubscribeToTokenEvents(token, tokenAddress, account, exchange, web3, dispatch)\n\n\t\tdispatch(tokenSelected(token))\n\t} catch (error) {\n\t\tconsole.log('Could not add new token', error)\n\t}\n}\n\nexport const loadBalances = async (account, exchange, token, web3, dispatch) => {\n\tdispatch(balancesLoading())\n\n\tconst etherBalance = await web3.eth.getBalance(account)\n\tdispatch(etherBalanceLoaded(etherBalance))\n\n\tconst tokenBalance = await token.contract.methods.balanceOf(account).call()\n\tdispatch(tokenBalanceLoaded(tokenBalance))\n\n\tconst exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n\tdispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n\tconst exchangeTokenBalance = await exchange.methods.balanceOf(token.contract.options.address, account).call()\n\tdispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n\tdispatch(balancesLoaded())\n}\n\nexport const depositEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.depositEther().send({from: account, value: etherToWei(amount)})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not deposit ether', error)\n\t\twindow.alert('Could not deposit ether')\n\t})\n}\n\nexport const withdrawEther = (amount, account, web3, exchange, dispatch) => {\n\texchange.methods.withdrawEther(etherToWei(amount)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw ether', error)\n\t\twindow.alert('Could not withdraw ether')\n\t})\n}\n\nexport const depositToken = (amount, account, web3, token, exchange, dispatch) => {\n\tamount = tokensToWei(amount, token.decimals)\n\n\ttoken.contract.methods.approve(exchange.options.address, amount).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\texchange.methods.depositToken(token.contract.options.address, amount).send({from: account})\n\t\t.on('transactionHash', (hash) => {\n\t\t\tdispatch(balancesLoading())\n\t\t})\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not approve token deposit', error)\n\t\twindow.alert('Could not approve token deposit')\n\t})\n}\n\nexport const withdrawToken = (amount, account, web3, token, exchange, dispatch) => {\n\texchange.methods.withdrawToken(token.contract.options.address, tokensToWei(amount, token.decimals)).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(balancesLoading())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not withdraw token', error)\n\t\twindow.alert('Could not withdraw token')\n\t})\n}\n\nexport const makeBuyOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = token.contract.options.address\n\tconst amountGet = tokensToWei(order.amount, token.decimals)\n\tconst tokenGive = ETHER_ADDRESS\n\tconst amountGive = etherToWei((order.amount * order.price).toString())\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(buyOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make buy order', error)\n\t\twindow.alert('Could not make buy order')\n\t})\n}\n\nexport const makeSellOrder = (order, account, web3, token, exchange, dispatch) => {\n\tconst tokenGet = ETHER_ADDRESS\n\tconst amountGet = etherToWei((order.amount * order.price).toString())\n\tconst tokenGive = token.contract.options.address\n\tconst amountGive = tokensToWei(order.amount, token.decimals)\n\n\texchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(sellOrderMaking())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not make sell order', error)\n\t\twindow.alert('Could not make sell order')\n\t})\n}\n\nexport const cancelOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.cancelOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderCancelling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not cancel order', error)\n\t\twindow.alert('Could not cancel order')\n\t})\n}\n\nexport const fillOrder = (order, account, exchange, dispatch) => {\n\texchange.methods.fillOrder(order.id).send({from: account})\n\t.on('transactionHash', (hash) => {\n\t\tdispatch(orderFilling())\n\t})\n\t.on('error', (error) => {\n\t\tconsole.log('Could not fill order', error)\n\t\twindow.alert('Could not fill order')\n\t})\n}","import { get, reject, groupBy, minBy, maxBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, formatEtherBalance, formatTokenBalance, weiToEther, weiToTokens } from '../helpers'\n\nconst sideNavShow = (state) => get(state, 'app.sideNavShow', true)\nexport const sideNavShowSelector = createSelector(sideNavShow, s => s)\n\nconst account = (state) => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nconst tokenList = state => get(state, 'exchange.tokens.data', [])\nexport const tokenListSelector = createSelector(tokenList, t => t)\n\nconst token = state => get(state, 'exchange.token', null)\nexport const tokenSelector = createSelector(token, t => t)\n\nconst tokenLoading = state => get(state, 'exchange.tokenLoading', true)\nexport const tokenLoadingSelector = createSelector(tokenLoading, t => t)\n\nexport const contractsLoadedSelector = createSelector(\n\texchangeLoaded,\n\ttoken,\n\t(el, t) => (el && t !== null)\n)\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, l => l)\n\nconst etherBalance = state => get(state, 'web3.balance')\nexport const etherBalanceSelector = createSelector(\n\tetherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst tokenBalance = state => get(state, 'exchange.tokenBalance')\nexport const tokenBalanceSelector = createSelector(\n\ttokenBalance, \n\ttoken,\n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst exchangeEtherBalance = state => get(state, 'exchange.exchangeEtherBalance')\nexport const exchangeEtherBalanceSelector = createSelector(\n\texchangeEtherBalance, \n\t(balance) => {\n\t\treturn formatEtherBalance(balance)\n\t})\n\nconst exchangeTokenBalance = state => get(state, 'exchange.exchangeTokenBalance')\nexport const exchangeTokenBalanceSelector = createSelector(\n\texchangeTokenBalance,\n\ttoken, \n\t(balance, token) => {\n\t\tif (!token || !balance) {\n\t\t\treturn null\n\t\t}\n\t\treturn formatTokenBalance(balance, token.decimals)\n\t})\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, a => a)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, a => a)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, a => a)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, a => a)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, o => o)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, o => o)\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(\n\tcancelledOrders,\n\t(orders) => {\n\t\tconsole.log(orders)\n\t}\n)\n\n// Filled orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\t// sort ascending for price comparison\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = decorateFilledOrders(orders, token)\n\n\t\t// sort descending for display\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateFilledOrders = (orders, token) => {\n\tlet previousOrder = orders[0]\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateFilledOrder(order, previousOrder)\n\t\tpreviousOrder = order\n\t\treturn order\n\t})\n}\n\nconst decorateOrder = (order, token) => {\n\n\tlet etherAmount\n\tlet tokenAmount\n\n\tif (order.tokenGive === ETHER_ADDRESS) {\n\t\tetherAmount = order.amountGive\n\t\ttokenAmount = order.amountGet\n\t} else {\n\t\tetherAmount = order.amountGet\n\t\ttokenAmount = order.amountGive\n\t}\n\n\tetherAmount = weiToEther(etherAmount)\n\ttokenAmount = weiToTokens(tokenAmount, token ? token.decimals : 18)\n\n\tconst precision = 100000\n\tlet tokenPrice = (etherAmount / tokenAmount)\n\ttokenPrice = Math.round(tokenPrice * precision) / precision\n\n\treturn ({\n\t\t...order,\n\t\tetherAmount: etherAmount,\n\t\ttokenAmount: tokenAmount,\n\t\ttokenPrice,\n\t\tformattedTimestamp: moment.unix(order.timestamp).format('hh:mm:ss D/M/Y')\n\t})\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n\treturn ({\n\t\t...order,\n\t\ttokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n\t})\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n\t// show green if order price higher than previous\n\t// or if its the first order\n\tif (orderId === previousOrder.id) {\n\t\treturn GREEN\n\t}\n\tif (previousOrder.tokenPrice <= tokenPrice) {\n\t\treturn GREEN\n\t} else {\n\t\treturn RED\n\t}\n}\n\n// All orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\n\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\nconst openOrders = state => {\n\tconst all = allOrders(state)\n\tconst filled = filledOrders(state)\n\tconst cancelled = cancelledOrders(state)\n\n\tconst openOrders = reject(all, (order) => {\n\t\tconst orderFilled = filled.some((o) => o.id === order.id)\n\t\tconst orderCancelled = cancelled.some((o) => o.id === order.id)\n\t\treturn (orderFilled || orderCancelled)\n\t})\n\treturn openOrders\n}\n\nconst orderBookLoaded = state => allOrdersLoaded(state) && filledOrdersLoaded(state) && cancelledOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const orderBookSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// sort each group\n\t\tconst buyOrders = get(orders, 'buy', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tbuyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n\t\t}\n\n\t\tconst sellOrders = get(orders, 'sell', [])\n\t\torders = {\n\t\t\t...orders,\n\t\t\tsellOrders: sellOrders.sort((a,b) => a.tokenPrice - b.tokenPrice)\n\t\t}\n\t\treturn orders\n\t}\n)\n\nconst decorateOrderBookOrders = (orders, token) => {\n\treturn orders.map((order) => {\n\t\torder = decorateOrder(order, token)\n\t\torder = decorateOrderBookOrder(order)\n\t\treturn order\n\t})\n}\n\nconst decorateOrderBookOrder = (order) => {\n\tconst orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\treturn ({\n\t\t...order,\n\t\torderType,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderFillAction: (orderType === 'buy' ? 'sell' : 'buy')\n\t})\n}\n\nexport const depthChartSelector = createSelector(\n\topenOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = decorateOrderBookOrders(orders, token)\n\t\t// group by order type\n\t\torders = groupBy(orders, 'orderType')\n\n\t\t// buys are sorted descending\n\t\tconst buyOrders = decorateWithVolume('bid', get(orders, 'buy', []).sort((a,b) => b.tokenPrice - a.tokenPrice))\n\t\t// sells are sorted ascending\n\t\tconst sellOrders = decorateWithVolume('ask', get(orders, 'sell', []).sort((a,b) => a.tokenPrice - b.tokenPrice))\n\n\t\torders = {\n\t\t\torders: buyOrders\n\t\t\t\t.concat(sellOrders)\n\t\t\t\t.sort((a,b) =>  a.value - b.value)\n\t\t}\n\n\t\treturn orders\n\t}\n)\n\nconst decorateWithVolume = (type, orders) => {\n\tlet res = []\n\tlet prevPrice\n\n\tfor(var i = 0; i < orders.length; i++) {\n\t\torders[i].volume = orders[i].tokenAmount;\n        \n        if (i === 0) {\n        \torders[i].totalvolume = orders[i].tokenAmount;\n        }\n        else {\n        \tif (prevPrice === orders[i].tokenPrice) {\n        \t\torders[i].volume = orders[i-1].volume + orders[i].tokenAmount\n        \t}\n          \torders[i].totalvolume = orders[i-1].totalvolume + orders[i].tokenAmount;\n        }\n\n        // aggregate orders with the same price\n        if (prevPrice !== orders[i].tokenPrice) {\n        \tlet dp = {};\n\t        dp[\"value\"] = orders[i].tokenPrice;\n\t        dp[type + \"volume\"] = orders[i].volume;\n\t        dp[type + \"totalvolume\"] = orders[i].totalvolume;\n\n        \tres.push(dp);\n    \t} else {\n    \t\tres[res.length - 1][type + \"volume\"] = orders[i].volume;\n    \t\tres[res.length - 1][type + \"totalvolume\"] = orders[i].totalvolume;\n    \t}\n\n        prevPrice = orders[i].tokenPrice\n     }\n\n     return res\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, fol => fol)\n\nexport const myFilledOrdersSelector = createSelector(\n\taccount,\n\tfilledOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account || o.userFill === account)\n\t\torders = decorateMyFilledOrders(orders, account, token)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyFilledOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyFilledOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n\tconst myOrder = order.user === account\n\n\tlet orderType\n\tif (myOrder) {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\t} else {\n\t\torderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n\t}\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED),\n\t\torderSign: (orderType === 'buy' ? '+' : '-')\n\t})\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, obl => obl)\n\nexport const myOpenOrdersSelector = createSelector(\n\taccount,\n\topenOrders,\n\ttoken,\n\t(account, orders, token) => {\n\t\torders = orders.filter((o) => o.user === account)\n\t\torders = decorateMyOpenOrders(orders, account, token)\n\t\torders = orders.sort((a, b) => b.timestamp - a.timestamp)\n\t\treturn orders\n\t}\n)\n\nconst decorateMyOpenOrders = (orders, account, token) => {\n\treturn (\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order, token)\n\t\t\torder = decorateMyOpenOrder(order, account)\n\t\t\treturn order\n\t\t})\n\t)\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n\tlet orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n\treturn ({\n\t\t...order,\n\t\torderTypeClass: (orderType === 'buy' ? GREEN : RED)\n\t})\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n\tfilledOrders,\n\ttoken,\n\t(orders, token) => {\n\t\torders = orders.sort((a, b) => a.timestamp - b.timestamp)\n\t\torders = orders.map((o) => decorateOrder(o, token))\n\n\t\t// get last two orders for final price\n\t\tlet secondLastOrder, lastOrder\n\t\t[secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n\t\tconst lastPrice = get(lastOrder, 'tokenPrice', 0)\n\t\tconst secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\t\treturn ({\n\t\t\tlastPrice,\n\t\t\tlastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n\t\t\tseries: [{\n\t\t\t\tdata: buildGraphData(orders)\n\t\t\t}]\n\t\t})\n\t}\n)\n\nexport const buildGraphData = (orders) => {\n\n\t// group by hour\n\torders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n\n\t// get each hour with data\n\tconst hours = Object.keys(orders)\n\n\tconst graphData = hours.map((hour) => {\n\t\t// calculate open, high, low, close for the hour\n\t\tconst group = orders[hour]\n\t\tconst open = group[0]\n\t\tconst close = group[group.length - 1]\n\t\tconst low = minBy(group, 'tokenPrice')\n\t\tconst high = maxBy(group, 'tokenPrice')\n\n\t\treturn ({\n\t\t\tx: new Date(hour),\n\t\t\ty: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n\t\t})\n\t})\n\n\treturn graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, c => c)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, f => f)\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Dropdown, Form, FormControl, Button, Container, Row, Col , OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport Identicon from 'identicon.js'\nimport { \n  addToken,\n  selectToken\n} from '../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\nimport {\n  sideNavShowHideToggled\n} from '../store/actions'\n\nclass TopNav extends Component {\n\n  constructor(props) {    \n    super(props)\n    this.toggleSidenav = this.toggleSidenav.bind(this)\n  }\n\n  toggleSidenav() {\n    const {\n      dispatch\n    } = this.props\n    dispatch(sideNavShowHideToggled())\n  }\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      token,\n      dispatch\n    } = this.props\n\n    return (\n      <div>\n        <nav className=\"sb-topnav navbar navbar-expand navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to='/'>Kouga</Link>\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\" \n              onClick={\n                this.toggleSidenav\n              }>\n              <i className=\"fas fa-bars\"></i>\n            </button>\n\n            <div className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n            </div>\n\n            <div className=\"navbar-nav ml-auto ml-md-0\">\n                    { this.props.account\n                      ? <OverlayTrigger\n                          key={this.props.account}\n                          placement='auto'\n                          overlay={\n                            <Tooltip id={this.props.account}>\n                              {`${this.props.account}`}\n                            </Tooltip>\n                          }\n                        >\n                          <a className=\"nav-link\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <img\n                              className=\"ml-2\"\n                              width='30'\n                              height='30'\n                              src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                              alt=\"\"\n                            />\n                          </a>\n                        </OverlayTrigger>\n                        \n                      : <span></span>\n                    }\n                    \n            </div>\n        </nav>\n      </div>\n      \n    )\n  }\n}\n\nfunction renderTokenSelect(token, props) {\n  const {\n    tokenList,\n    web3,\n    exchange,\n    account, \n    dispatch\n  } = props\n\n  return (\n    <Dropdown.Item \n      key={token.tokenAddress} \n      eventKey={token.tokenAddress} \n      onSelect={eKey => selectToken(eKey, tokenList, account, exchange, web3, dispatch)}>{token.symbol}</Dropdown.Item>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(TopNav)\n","import React, { Component } from 'react'\nimport { Form, FormControl, Button, Row, Col } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { \n  addToken,\n  selectToken\n} from '../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  tokenListSelector,\n  tokenSelector\n} from '../store/selectors'\n\nclass SideNav extends Component {\n\n  handleOnSelect = (row, isSelect) => {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      token,\n      dispatch\n    } = this.props\n\n    selectToken(row.tokenAddress, tokenList, account, exchange, web3, dispatch)\n  }\n\n  render() {\n    const {\n      web3,\n      exchange,\n      account,\n      tokenList,\n      dispatch\n    } = this.props\n\n    return (\n          <div id=\"layoutSidenav_nav\">\n            <nav className=\"sb-sidenav accordion sb-sidenav-light small\" id=\"sidenavAccordion\">\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                      { showTokens(this) }\n                    </div>\n                </div>\n                <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Add new ERC20 Token\n              </div>\n              <div className=\"card-body\">\n                  <Form noValidate onSubmit={(event) => {\n                    event.preventDefault()\n                    let tokenAddressInput = document.getElementById('newTokenAddressInput')\n                    addToken(tokenAddressInput.value, tokenList, web3, account, exchange, dispatch)\n                  }}>\n                  <Form.Row>\n                    <Form.Group as={Col}>\n                      <Form.Control autoFocus name=\"tokenAddress\" placeholder=\"Token contract address\" id=\"newTokenAddressInput\" />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                      <Button variant=\"primary\" type=\"submit\">\n                        Add Token\n                      </Button>\n                    </Form.Group>\n                  </Form.Row>\n                </Form>\n              </div>\n            </div>\n            </nav>\n          </div>\n    )\n  }\n}\n\nfunction showTokens(component) {\n  const { \n    tokenList,\n    account, \n    exchange, \n    web3, \n    dispatch\n  } = component.props\n\n  const { SearchBar } = Search;\n\n  const tokens = tokenList.map((token) => {\n    return {\n      tokenAddress: token.tokenAddress,\n      symbol: token.symbol,\n      name: token.name,\n      decimals: token.decimals\n    }\n  });\n  const columns = [{\n    dataField: 'symbol',\n    text: 'Symbol',\n    sort: true\n  }, {\n    dataField: 'name',\n    text: 'Name',\n    sort: true\n  }, {\n    dataField: 'decimals',\n    text: 'Decimals'\n  }];\n\n  const selectRow = {\n    mode: 'radio',\n    clickToSelect: true,\n    hideSelectColumn: true,\n    bgColor: '#aaa',\n    onSelect: component.handleOnSelect\n  };\n\n  return (\n    <ToolkitProvider\n      keyField=\"symbol\"\n      data={ tokens }\n      columns={ columns }\n      search\n    >\n      {\n        props => (\n          <div>\n            <SearchBar { ...props.searchProps } placeholder='filter tokens'/>\n            <BootstrapTable\n              { ...props.baseProps }\n              selectRow={ selectRow }\n              classes=\"table table-sm\"\n              hover\n              condensed\n            />\n          </div>\n        )\n      }\n    </ToolkitProvider>\n\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    tokenList: tokenListSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(SideNav)\n","import React from 'react'\n\nexport default function ({ type }) {\n  if (type === 'table') {\n    return(<tbody className=\"spinner-grow text-dark text-center\"></tbody>)\n  } else {\n    return(\n    \t<div className=\"d-flex justify-content-center\">\n\t\t  <div className=\"spinner-grow text-dark text-center\" role=\"status\">\n\t\t    <span className=\"sr-only\">Loading...</span>\n\t\t  </div>\n\t\t</div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport {\n  tokenSelector\n} from '../../store/selectors'\n\nam4core.useTheme(am4themes_animated);\n\nclass DepthChart extends Component {\n  componentDidMount() {\n      this.chart = buildChart(this.props);\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if(JSON.stringify(oldProps.data) !== JSON.stringify(this.props.data)\n        || ( oldProps.token === null && this.props.token !== null ) \n        || ( oldProps.token !== null && this.props.token !== null && JSON.stringify(oldProps.token.symbol) !== JSON.stringify(this.props.token.symbol))) {\n        this.chart.dispose();\n        this.chart = buildChart(this.props);\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"300px\" }}></div>\n    )\n  }\n}\n\nfunction buildChart(props) {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.data = props.data;\n\n    // Set up precision for numbers\n    chart.numberFormatter.numberFormat = \"#,###.####\";\n\n    // Create axes\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    xAxis.dataFields.category = \"value\";\n    xAxis.renderer.minGridDistance = 50;\n    xAxis.title.text = `Price (ETH/${props.token.symbol})`;\n    xAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    xAxis.title.fill = am4core.color(\"#111\");\n\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    yAxis.title.text = `${props.token.symbol} Volume`;\n    yAxis.renderer.labels.template.fill = am4core.color(\"#111\");\n    yAxis.title.fill = am4core.color(\"#111\");\n\n    // Create bid value series\n    let bidValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    bidValueSeries.dataFields.categoryX = \"value\";\n    bidValueSeries.dataFields.valueY = \"bidtotalvolume\";\n    bidValueSeries.strokeWidth = 2;\n    bidValueSeries.stroke = am4core.color(\"#0f0\");\n    bidValueSeries.fill = bidValueSeries.stroke;\n    bidValueSeries.fillOpacity = 0.1;\n    bidValueSeries.tooltipText = \"Bid: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{bidvolume}[/]\"\n\n    // Create ask value series\n    let askValueSeries = chart.series.push(new am4charts.StepLineSeries());\n    askValueSeries.dataFields.categoryX = \"value\";\n    askValueSeries.dataFields.valueY = \"asktotalvolume\";\n    askValueSeries.strokeWidth = 2;\n    askValueSeries.stroke = am4core.color(\"#f00\");\n    askValueSeries.fill = askValueSeries.stroke;\n    askValueSeries.fillOpacity = 0.1;\n    askValueSeries.tooltipText = \"Ask: [bold]{categoryX}[/]\\nTotal volume: [bold]{valueY}[/]\\nVolume: [bold]{askvolume}[/]\"\n\n    // Create bid volume series\n    let bidVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    bidVolumeSeries.dataFields.categoryX = \"value\";\n    bidVolumeSeries.dataFields.valueY = \"bidvolume\";\n    bidVolumeSeries.strokeWidth = 0;\n    bidVolumeSeries.fill = am4core.color(\"#aaa\");\n    bidVolumeSeries.fillOpacity = 0.2;\n\n    // Create ask volume series\n    let askVolumeSeries = chart.series.push(new am4charts.ColumnSeries());\n    askVolumeSeries.dataFields.categoryX = \"value\";\n    askVolumeSeries.dataFields.valueY = \"askvolume\";\n    askVolumeSeries.strokeWidth = 0;\n    askVolumeSeries.fill = am4core.color(\"#aaa\");\n    askVolumeSeries.fillOpacity = 0.2;\n\n    // Add cursor\n    chart.cursor = new am4charts.XYCursor();\n\n    return chart;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(DepthChart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Identicon from 'identicon.js'\nimport Spinner from '../Spinner'\nimport { \n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector\n} from '../../store/selectors'\nimport { fillOrder } from '../../store/interactions'\n\nclass MarketOrders extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          {this.props.buy ? 'Buy' : 'Sell'} Orders\n        </div>\n        <div className=\"card-body\">\n          { showOrders(this.props) }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showOrders(props) {\n  const { orders, token, buys } = props\n\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n          <th>ETH</th>\n          <th>{buys ? 'Buyer' : 'Seller'}</th>\n        </tr>\n      </thead>\n      <tbody>\n        { orders.map((order) => renderOrder(order, props)) }\n      </tbody>\n    </table>\n  )\n}\n\nfunction renderOrder(order, props) {\n  const { account, exchange, dispatch } = props\n\n  return (\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr key={order.id}\n          className=\"order-book-order\"\n          onClick={(e) => {\n            fillOrder(order, account, exchange, dispatch)\n          }}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n        <td>\n          <img\n            className=\"ml-2\"\n            width='15'\n            height='15'\n            src={`data:image/png;base64,${new Identicon(order.user, 15).toString()}`}\n            alt=\"\"\n          />\n        </td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  makeBuyOrder\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  buyOrderSelector\n} from '../../store/selectors'\nimport { \n  buyOrderAmountChanged,\n  buyOrderPriceChanged\n} from '../../store/actions'\n\nclass NewBuyOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Buy\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    buyOrder,\n    showBuyTotal,\n    dispatch\n  } = props\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeBuyOrder(buyOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Buy Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Amount\"\n            onChange={(e) => {dispatch(buyOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Buy Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Buy Price\"\n            onChange={(e) => {dispatch(buyOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Buy Order</button>\n      { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    buyOrder,\n    showForm: token && !buyOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewBuyOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport {\n  makeSellOrder \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  sellOrderSelector\n} from '../../store/selectors'\nimport {\n  sellOrderAmountChanged,\n  sellOrderPriceChanged\n} from '../../store/actions'\n\nclass NewSellOrder extends Component {\n\t\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          Sell\n        </div>\n        <div className=\"card-body\">\n          { this.props.showForm ? showForm(this.props) : <Spinner type='div' /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showForm = (props) => {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    sellOrder,\n    showSellTotal,\n    dispatch\n  } = props\n  return (\n    \n    <form onSubmit={(event) => {\n      event.preventDefault()\n      makeSellOrder(sellOrder, account, web3, token, exchange, dispatch)\n    }}>\n      <div className=\"form-group small\">\n        <label>Sell Amount ({token.symbol})</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Amount\"\n            onChange={(e) => {dispatch(sellOrderAmountChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group small\">\n        <label>Sell Price</label>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Sell Price\"\n            onChange={(e) => {dispatch(sellOrderPriceChanged(e.target.value))}}\n            className=\"form-control form-control-sm bg-light text-dark\"\n            required\n          />\n        </div>\n      </div>\n      <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Sell Order</button>\n      { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const sellOrder = sellOrderSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    sellOrder,\n    showForm: token && !sellOrder.making,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewSellOrder)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  myOpenOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass MyOrders extends Component {\n\n  render() {\n    return (\n        <div className=\"card bg-light text-dark\">\n          <div className=\"card-header\">\n            My Orders\n          </div>\n          <div className=\"card-body\">\n            { this.props.myOpenOrdersLoaded ? showMyOpenOrders(this.props) : <Spinner type=\"div\" /> }\n          </div>\n        </div>\n    )\n  }\n}\n\nfunction showMyOpenOrders(props) {\n  const { myOpenOrders, dispatch, exchange, account, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Amount</th>\n          <th>ETH/{token.symbol}</th>\n          <th>Cancel</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myOpenOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td \n                className=\"text-muted cancel-order\"\n                onClick={(e) => {\n                  cancelOrder(order, account, exchange, dispatch)\n                }}>x</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myOpenOrdersLoaded: !tokenLoading && myOpenOrdersLoaded && !orderCancelling,\n    myOpenOrders: myOpenOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyOrders)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport DepthChart from './orders/DepthChart'\nimport MarketOrders from './orders/MarketOrders'\nimport NewBuyOrder from './orders/NewBuyOrder'\nimport NewSellOrder from './orders/NewSellOrder'\nimport MyOrders from './orders/MyOrders'\nimport { \n  orderBookLoadedSelector,\n  orderBookSelector,\n  tokenSelector,\n  depthChartSelector\n} from '../store/selectors'\n\nclass Orders extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            { this.props.orderBookLoaded ? showDepthChart(this.props) : <Spinner type='div'/> }\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            { this.props.orderBookLoaded ? showOrders(this.props, false) : <Spinner type='div'/> }\n          </Col>\n          <Col sm={6}>\n            { this.props.orderBookLoaded ? showOrders(this.props, true) : <Spinner type='div'/> }\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <NewBuyOrder />\n          </Col>\n          <Col sm={6}>\n            <NewSellOrder />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyOrders />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction showDepthChart(props) {\n  const { token, depthChart } = props\n  return (\n    <DepthChart data={depthChart.orders} />\n  )\n}\n\nfunction showOrders(props, buys) {\n  const { orderBook } = props\n  const orders = (buys ? orderBook.buyOrders : orderBook.sellOrders)\n\n  return (\n    <MarketOrders buys={buys} orders={orders} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  const token = tokenSelector(state)\n  return {\n    orderBookLoaded: token && orderBookLoadedSelector(state),\n    orderBook: orderBookSelector(state),\n    token: token,\n    depthChart: depthChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Orders)\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'react-apexcharts'\nimport Spinner from '../Spinner'\nimport { chartOptions } from './PriceChart.config'\nimport { \n  tokenSelector,\n  tokenLoadingSelector,\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../../store/selectors'\n\nclass PriceChart extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-body\">\n          { this.props.priceChartLoaded ? showPriceChart(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst showPriceChart = (props) => {\n  const {token, priceChart} = props\n\n  return (\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>ETH/{token.symbol} &nbsp; { priceSymbol(priceChart.lastPriceChange) } &nbsp; { priceChart.lastPrice }</h4>\n      </div>\n      <Chart options={chartOptions} series={priceChart.series} type='candlestick' width='100%' height='200px'/>\n    </div>\n  )\n}\n\nconst priceSymbol = (priceChange) => {\n  let output\n  if (priceChange === '+') {\n    output = <span className=\"text-success\">&#9650;</span>\n  } else {\n    output = <span className=\"text-danger\">&#9660;</span>\n  }\n  return output\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const priceChartLoaded = priceChartLoadedSelector(state)\n    \n  return {\n    token: tokenSelector(state),\n    priceChartLoaded: priceChartLoaded && !tokenLoading,\n    priceChart: priceChartSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  myFilledOrdersSelector,\n  myFilledOrdersLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  orderCancellingSelector\n} from '../../store/selectors'\nimport { cancelOrder } from '../../store/interactions'\n\nclass MyTrades extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-light text-dark\">\n        <div className=\"card-header\">\n          My Trades\n        </div>\n        <div className=\"card-body\">\n          { this.props.myFilledOrdersLoaded ? showMyFilledOrders(this.props) : <Spinner type=\"div\" /> }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction showMyFilledOrders(props) {\n  const { myFilledOrders, token } = props\n  return (\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>{token.symbol}</th>\n          <th>ETH/{token.symbol}</th>\n        </tr>\n      </thead>\n      <tbody>\n      { myFilledOrders.map((order) => {\n          return (\n              <tr key={order.id}>\n                <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n              </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const orderCancelling = orderCancellingSelector(state)\n  const tokenLoading = tokenLoadingSelector(state)\n\n  return {\n    myFilledOrdersLoaded: !tokenLoading && myFilledOrdersLoadedSelector(state),\n    myFilledOrders: myFilledOrdersSelector(state),\n    exchange: exchangeSelector(state),\n    account: accountSelector(state),\n    token: tokenSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Spinner from '../Spinner'\nimport {\n  contractsLoadedSelector,\n  tokenSelector,\n  tokenLoadingSelector,\n  filledOrdersLoadedSelector,\n  filledOrdersSelector \n} from '../../store/selectors'\n\nclass MarketTrades extends Component {\n\tcomponentDidMount() {\n\t\tthis.loadBlockchainData(this.props)\n\t}\n\n\tasync loadBlockchainData(props) {\n\t}\n\n  render() {\n    return (\n      <div>\n        { this.props.contractsLoaded ?\n            <div className=\"card bg-light text-dark\">\n              <div className=\"card-header\">\n                Market Trades\n              </div>\n              <div className=\"card-body\">\n                <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n                    <thead>\n                      <tr>\n                        <th>Time</th>\n                        <th>{this.props.token.symbol}</th>\n                        <th>ETH/{this.props.token.symbol}</th>\n                      </tr>\n                    </thead>\n                    { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" /> }\n                  </table>\n              </div>\n            </div>\n          :\n          <Spinner type=\"div\" />\n        }\n      </div>\n    )\n  }\n}\n\nfunction showFilledOrders(orders) {\n  return (\n    <tbody>\n    { orders.map((order) => {\n        return (\n            <tr key={order.id} className={`order-${order.id}`}>\n              <td className=\"text-muted\">{order.formattedTimestamp}</td>\n              <td>{order.tokenAmount}</td>\n              <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n            </tr>\n        )\n      })\n    }\n    </tbody>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const tokenLoading = tokenLoadingSelector(state)\n  const filledOrdersLoaded = filledOrdersLoadedSelector(state)\n\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n    token: tokenSelector(state),\n    filledOrdersLoaded: filledOrdersLoaded && !tokenLoading,\n    filledOrders: filledOrdersSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MarketTrades)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport PriceChart from './trades/PriceChart'\nimport MyTrades from './trades/MyTrades'\nimport MarketTrades from './trades/MarketTrades'\n\nclass Trades extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <PriceChart />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MyTrades />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <MarketTrades />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Trades)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  depositEther,\n  withdrawEther\n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  etherBalanceSelector,\n  exchangeEtherBalanceSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              ETH\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    account,\n    etherBalance,\n    exchangeEtherBalance,\n    dispatch,\n    etherDepositAmount,\n    etherWithdrawAmount\n  } = props\n  return(\n    <table className=\"table table-bordered table-light table-sm small\" id=\"dataTable\" width=\"100%\">\n      <thead>\n        <tr>\n          <th>Wallet</th>\n          <th>Exchange</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{etherBalance}</td>\n          <td>{exchangeEtherBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositEther(etherDepositAmount, account, web3, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {dispatch(etherDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" id=\"deposit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              withdrawEther(etherWithdrawAmount, account, web3, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ETH Amount\"\n                    onChange={(e) => {\n                      dispatch(etherWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from '../Spinner'\nimport { \n  depositToken,\n  withdrawToken \n} from '../../store/interactions'\nimport {\n  accountSelector, \n  exchangeSelector, \n  tokenSelector, \n  web3Selector,\n  balancesLoadingSelector,\n  tokenBalanceSelector,\n  exchangeTokenBalanceSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector\n} from '../../store/selectors'\nimport { \n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged\n} from '../../store/actions'\n\nclass ETHFunds extends Component {\n\tcomponentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.showForm ? \n          <div className=\"card bg-light text-dark\">\n            <div className=\"card-header\">\n              { this.props.token.symbol }\n            </div>\n            <div className=\"card-body\">\n              { showForm(this.props) }\n            </div>\n          </div>\n        : <Spinner type=\"div\" />\n      }\n      </div>\n    )\n  }\n}\n\nfunction showForm(props) {\n  const {\n    web3,\n    exchange,\n    token,\n    account,\n    tokenBalance,\n    exchangeTokenBalance,\n    dispatch,\n    tokenDepositAmount,\n    tokenWithdrawAmount\n  } = props\n  return(\n    <table className=\"table table-light table-sm small\">\n      \n      <tbody>\n        <tr>\n          <td>{tokenBalance}</td>\n          <td>{exchangeTokenBalance}</td>\n        </tr>\n        <tr>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              depositToken(tokenDepositAmount, account, web3, token, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {dispatch(tokenDepositAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n                </div>\n              </div>\n            </form>\n          </td>\n          <td>\n            <form onSubmit={(event) => {\n              event.preventDefault()\n              withdrawToken(tokenWithdrawAmount, account, web3, token, exchange, dispatch)\n            }}>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-2\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${token.symbol} Amount`}\n                    onChange={(e) => {\n                      dispatch(tokenWithdrawAmountChanged(e.target.value))}}\n                    className=\"form-control form-control-sm bg-light text-dark\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 col-sm pr-sm-0\">\n                  <button type=\"Submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n  const token = tokenSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: token,\n    web3: web3Selector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: token && !balancesLoading,\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(ETHFunds)\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col  } from 'react-bootstrap'\nimport ETHFunds from './funds/ETHFunds'\nimport TokenFunds from './funds/TokenFunds'\n\nclass Funds extends Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <ETHFunds />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <TokenFunds />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Funds)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Orders from './Orders'\nimport Trades from './Trades'\nimport Funds from './Funds'\n\nclass Content extends Component {\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Tabs defaultActiveKey=\"orders\" className=\"bg-light text-dark\">\n          <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-light\">\n            <Orders />\n          </Tab>\n          <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-light\">\n            <Trades />\n          </Tab>\n          <Tab eventKey=\"funds\" title=\"Funds\" className=\"bg-light\">\n            <Funds />\n          </Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Content)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TopNav from './TopNav'\nimport SideNav from './SideNav'\nimport Content from \"./Content\"\nimport { \n  loadWeb3, \n  loadAccount,\n  loadExchange,\n  selectToken\n} from '../store/interactions'\nimport { \n  accountSelector, \n  exchangeSelector,\n  web3Selector,\n  contractsLoadedSelector, \n  sideNavShowSelector, \n  tokenSelector, \n  tokenListSelector\n} from '../store/selectors'\nimport { web3AccountLoaded } from '../store/actions'\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    try {\n      const web3 = loadWeb3(dispatch)\n      await window.ethereum.enable();\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n        dispatch(web3AccountLoaded(accounts[0]))\n      })\n\n      window.ethereum.on('chainChanged', () => {\n        document.location.reload()\n      })\n\n      // Acccounts now exposed\n      const account = await loadAccount(web3, dispatch)\n      console.log('account', account)\n\n      const network = await web3.eth.net.getNetworkType()\n      console.log('network', network)\n      const networkId = await web3.eth.net.getId()\n      console.log('network id', networkId)\n\n      const exchange = await loadExchange(web3, networkId, dispatch)\n      if (!exchange) {\n        return;\n      }\n    } catch(e) {\n      return;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"props\", props)\n    const {\n      token,\n      tokenList,\n      account,\n      exchange,\n      web3,\n      dispatch\n    } = props\n\n    if (token === null && tokenList.length > 0) {\n      selectToken(tokenList[0].tokenAddress, tokenList, account, exchange, web3, dispatch)\n    }\n\n    return state\n  }\n\n  render() {\n\n    if (!this.props.exchange) {\n      return (\n        <h3>Please connect your wallet</h3>\n      )\n    }\n\n    return (\n      <div className={`sb-nav-fixed ${this.props.sideNavShow ? \"\" : \"sb-sidenav-toggled\"}`}>\n\n        <TopNav/>\n\n        <div id=\"layoutSidenav\">\n          <SideNav/>\n          <div id=\"layoutSidenav_content\">\n            <main>\n              <div className=\"container-fluid\">\n                <Content />\n              </div>\n            </main>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state),\n    web3: web3Selector(state),\n    exchange: exchangeSelector(state),\n    contractsLoaded: contractsLoadedSelector(state),\n    sideNavShow: sideNavShowSelector(state),\n    token: tokenSelector(state),\n    tokenList: tokenListSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux'\nimport { ETHER_ADDRESS, tokensToWei, etherToWei } from '../helpers'\n\nfunction app (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase 'SIDE_NAV_SHOW_HIDE_TOGGLED':\n\t\t\tlet show = state.sideNavShow\n\t\t\tif (show === null || show === undefined) {\n\t\t\t\tshow = true\n\t\t\t}\n\t\t\treturn {...state, sideNavShow: !show}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction web3 (state = {}, action ) {\n\tswitch (action.type) {\n\t\tcase 'WEB3_LOADED':\n\t\t\treturn { ...state, connection: action.connection }\n\t\tcase 'WEB3_ACCOUNT_LOADED':\n\t\t\treturn { ...state, account: action.account }\n\t\tcase 'ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, balance: action.balance}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction exchange (state = {}, action ) {\n\tlet index\n\tlet data\n\tswitch (action.type) {\n\t\tcase 'EXCHANGE_LOADED':\n\t\t\treturn { ...state, loaded: true, contract: action.contract, tokens: {data: []}, token: null }\n\t\tcase 'TOKEN_ADDED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.tokens.data.findIndex(token => token.tokenAddress === action.token.tokenAddress)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.tokens.data, action.token]\n\t\t\t} else {\n\t\t\t\tdata = state.tokens.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\ttokens: {\n\t\t\t\t\t...state.tokens,\n\t\t\t\t\tdata\n\t\t\t\t}\n\t\t\t}\n\t\tcase 'SELECTING_TOKEN': \n\t\t\treturn { ...state, tokenLoading: true }\n\t\tcase 'TOKEN_SELECTED':\n\t\t\treturn { ...state, token: action.token, tokenLoading: false }\n\t\tcase 'TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, tokenBalance: action.balance}\n\t\tcase 'EXCHANGE_ETHER_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeEtherBalance: action.balance}\n\t\tcase 'EXCHANGE_TOKEN_BALANCE_LOADED':\n\t\t\treturn { ...state, exchangeTokenBalance: action.balance}\n\t\tcase 'BALANCES_LOADING':\n\t\t\treturn { ...state, balancesLoading: true} \n\t\tcase 'BALANCES_LOADED':\n\t\t\treturn { ...state, balancesLoading: false} \n\t\tcase 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherDepositAmount: action.amount} \n\t\tcase 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, etherWithdrawAmount: action.amount} \n\t\tcase 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenDepositAmount: action.amount} \n\t\tcase 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n\t\t\treturn { ...state, tokenWithdrawAmount: action.amount}\n\t\tcase 'BUY_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: action.amount } } \n\t\tcase 'BUY_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, price: action.price } } \n\t\tcase 'BUY_ORDER_MAKING':\n\t\t\treturn { ...state, buyOrder: {...state.buyOrder, amount: null, price: null, making: true } } \n\t\tcase 'SELL_ORDER_AMOUNT_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: action.amount } } \n\t\tcase 'SELL_ORDER_PRICE_CHANGED':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, price: action.price } } \n\t\tcase 'SELL_ORDER_MAKING':\n\t\t\treturn { ...state, sellOrder: {...state.sellOrder, amount: null, price: null, making: true } } \n\t\tcase 'ORDER_MADE':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.allOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.allOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.allOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\tbuyOrder: {\n\t\t\t\t\t...state.buyOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tsellOrder: {\n\t\t\t\t\t...state.sellOrder,\n\t\t\t\t\tmaking: false\n\t\t\t\t},\n\t\t\t\tallOrders: {\n\t\t\t\t\t...state.allOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tcase 'CANCELLED_ORDERS_LOADED':\n\t\t\treturn { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }}\n\t\tcase 'FILLED_ORDERS_LOADED':\n\t\t\treturn { ...state, filledOrders: {loaded: true, data: action.filledOrders }} \n\t\tcase 'ALL_ORDERS_LOADED':\n\t\t\treturn { ...state, allOrders: {loaded: true, data: action.allOrders }} \n\t\tcase 'ORDER_CANCELLING':\n\t\t\treturn { ...state, orderCancelling: true} \n\t\tcase 'ORDER_CANCELLED':\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderCancelling: false,\n\t\t\t\tcancelledOrders: {\n\t\t\t\t\t...state.cancelledOrders,\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t...state.cancelledOrders.data,\n\t\t\t\t\t\taction.order\n\t\t\t\t\t]\n\t\t\t\t}} \n\t\tcase 'ORDER_FILLING':\n\t\t\treturn { ...state, orderFilling: true} \n\t\tcase 'ORDER_FILLED':\n\t\t\t// prevent duplicates\n\t\t\tindex = state.filledOrders.data.findIndex(order => order.id === action.order.id)\n\t\t\tif (index === -1) {\n\t\t\t\tdata = [...state.filledOrders.data, action.order]\n\t\t\t} else {\n\t\t\t\tdata = state.filledOrders.data\n\t\t\t}\n\t\t\treturn { \n\t\t\t\t...state, \n\t\t\t\torderFilling: false,\n\t\t\t\tfilledOrders: {\n\t\t\t\t\t...state.filledOrders,\n\t\t\t\t\tdata\n\t\t\t\t}} \n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst rootReducer = combineReducers({\n\tapp,\n\tweb3,\n\texchange\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// for reduc devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore ( preloadedState ) {\n\treturn createStore (\n\t\trootReducer,\n\t\tpreloadedState,\n\t\tcomposeEnhancers (applyMiddleware (...middleware, loggerMiddleware))\n\t)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store = {configureStore()}>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}